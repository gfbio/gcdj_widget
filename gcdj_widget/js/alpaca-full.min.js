/*!
Alpaca Version 1.1.3

Copyright 2014 Gitana Software, Inc.

Licensed under the Apache License, Version 2.0 (the "License"); 
you may not use this file except in compliance with the License. 

You may obtain a copy of the License at 
	http://www.apache.org/licenses/LICENSE-2.0 

Unless required by applicable law or agreed to in writing, software 
distributed under the License is distributed on an "AS IS" BASIS, 
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. 
See the License for the specific language governing permissions and 
limitations under the License. 

For more information, please contact Gitana Software, Inc. at this
address:

  info@gitanasoftware.com
*/
(function(name,global,definition){global[name]=definition();})("Base",this,function(){var Base=function(){};Base.extend=function(_instance,_static){var extend=Base.prototype.extend;Base._prototyping=true;var proto=new this();extend.call(proto,_instance);proto.base=function(){};delete Base._prototyping;var constructor=proto.constructor;var klass=proto.constructor=function(){if(!Base._prototyping){if(this._constructing||this.constructor===klass){this._constructing=true;constructor.apply(this,arguments);delete this._constructing;}else{if(arguments[0]!==null){return(arguments[0].extend||extend).call(arguments[0],proto);}}}};klass.ancestor=this;klass.extend=this.extend;klass.forEach=this.forEach;klass.implement=this.implement;klass.prototype=proto;klass.toString=this.toString;klass.valueOf=function(type){return(type==="object")?klass:constructor.valueOf();};extend.call(klass,_static);if(typeof klass.init==="function"){klass.init();}return klass;};Base.prototype={extend:function(source,value){if(arguments.length>1){var ancestor=this[source];if(ancestor&&(typeof value==="function")&&(!ancestor.valueOf||ancestor.valueOf()!==value.valueOf())&&/\bbase\b/.test(value)){var method=value.valueOf();value=function(){var previous=this.base||Base.prototype.base;this.base=ancestor;var returnValue=method.apply(this,arguments);this.base=previous;return returnValue;};value.valueOf=function(type){return(type==="object")?value:method;};value.toString=Base.toString;}this[source]=value;}else{if(source){var extend=Base.prototype.extend;if(!Base._prototyping&&typeof this!=="function"){extend=this.extend||extend;}var proto={toSource:null};var hidden=["constructor","toString","valueOf"];for(var i=Base._prototyping?0:1;i<hidden.length;i++){var h=hidden[i];if(source[h]!==proto[h]){extend.call(this,h,source[h]);}}for(var key in source){if(!proto[key]){extend.call(this,key,source[key]);}}}}return this;}};Base=Base.extend({constructor:function(){this.extend(arguments[0]);}},{ancestor:Object,version:"1.1",forEach:function(object,block,context){for(var key in object){if(this.prototype[key]===undefined){block.call(context,object[key],key,object);}}},implement:function(){for(var i=0;i<arguments.length;i++){if(typeof arguments[i]==="function"){arguments[i](this.prototype);}else{this.prototype.extend(arguments[i]);}}return this;},toString:function(){return String(this.valueOf());}});return Base;});if(typeof JSON!=="object"){JSON={};}(function(){function f(n){return n<10?"0"+n:n;}if(typeof Date.prototype.toJSON!=="function"){Date.prototype.toJSON=function(key){return isFinite(this.valueOf())?this.getUTCFullYear()+"-"+f(this.getUTCMonth()+1)+"-"+f(this.getUTCDate())+"T"+f(this.getUTCHours())+":"+f(this.getUTCMinutes())+":"+f(this.getUTCSeconds())+"Z":null;};String.prototype.toJSON=Number.prototype.toJSON=Boolean.prototype.toJSON=function(key){return this.valueOf();};}var cx=/[\u0000\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g,escapable=/[\\\"\x00-\x1f\x7f-\x9f\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g,gap,indent,meta={"\b":"\\b","\t":"\\t","\n":"\\n","\f":"\\f","\r":"\\r",'"':'\\"',"\\":"\\\\"},rep;function quote(string){escapable.lastIndex=0;return escapable.test(string)?'"'+string.replace(escapable,function(a){var c=meta[a];return typeof c==="string"?c:"\\u"+("0000"+a.charCodeAt(0).toString(16)).slice(-4);})+'"':'"'+string+'"';}function str(key,holder){var i,k,v,length,mind=gap,partial,value=holder[key];if(value&&typeof value==="object"&&typeof value.toJSON==="function"){value=value.toJSON(key);}if(typeof rep==="function"){value=rep.call(holder,key,value);}switch(typeof value){case"string":return quote(value);case"number":return isFinite(value)?String(value):"null";case"boolean":case"null":return String(value);case"object":if(!value){return"null";}gap+=indent;partial=[];if(Object.prototype.toString.apply(value)==="[object Array]"){length=value.length;for(i=0;i<length;i+=1){partial[i]=str(i,value)||"null";}v=partial.length===0?"[]":gap?"[\n"+gap+partial.join(",\n"+gap)+"\n"+mind+"]":"["+partial.join(",")+"]";gap=mind;return v;}if(rep&&typeof rep==="object"){length=rep.length;for(i=0;i<length;i+=1){if(typeof rep[i]==="string"){k=rep[i];v=str(k,value);if(v){partial.push(quote(k)+(gap?": ":":")+v);}}}}else{for(k in value){if(Object.prototype.hasOwnProperty.call(value,k)){v=str(k,value);if(v){partial.push(quote(k)+(gap?": ":":")+v);}}}}v=partial.length===0?"{}":gap?"{\n"+gap+partial.join(",\n"+gap)+"\n"+mind+"}":"{"+partial.join(",")+"}";gap=mind;return v;}}if(typeof JSON.stringify!=="function"){JSON.stringify=function(value,replacer,space){var i;gap="";indent="";if(typeof space==="number"){for(i=0;i<space;i+=1){indent+=" ";}}else{if(typeof space==="string"){indent=space;}}rep=replacer;if(replacer&&typeof replacer!=="function"&&(typeof replacer!=="object"||typeof replacer.length!=="number")){throw new Error("JSON.stringify");}return str("",{"":value});};}if(typeof JSON.parse!=="function"){JSON.parse=function(text,reviver){var j;function walk(holder,key){var k,v,value=holder[key];if(value&&typeof value==="object"){for(k in value){if(Object.prototype.hasOwnProperty.call(value,k)){v=walk(value,k);if(v!==undefined){value[k]=v;}else{delete value[k];}}}}return reviver.call(holder,key,value);}text=String(text);cx.lastIndex=0;if(cx.test(text)){text=text.replace(cx,function(a){return"\\u"+("0000"+a.charCodeAt(0).toString(16)).slice(-4);});}if(/^[\],:{}\s]*$/.test(text.replace(/\\(?:["\\\/bfnrt]|u[0-9a-fA-F]{4})/g,"@").replace(/"[^"\\\n\r]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g,"]").replace(/(?:^|:|,)(?:\s*\[)+/g,""))){j=eval("("+text+")");return typeof reviver==="function"?walk({"":j},""):j;}throw new SyntaxError("JSON.parse");};}}());
/*!
 * JSONSchema Validator - Validates JavaScript objects using JSON Schemas
 *    (http://www.json.com/json-schema-proposal/)
 *
 * Copyright (c) 2007 Kris Zyp SitePen (www.sitepen.com)
 * Licensed under the MIT (MIT-LICENSE.txt) license.
 To use the validator call the validate function with an instance object and an optional schema object.
 If a schema is provided, it will be used to validate. If the instance object refers to a schema (self-validating),
 that schema will be used to validate and the schema parameter is not necessary (if both exist,
 both validations will occur).
 The validate method will return an array of validation errors. If there are no errors, then an
 empty list will be returned. A validation error will have two properties:
 "property" which indicates which property had the error
 "message" which indicates what the error was
 */
(function($){Validator={validate:function(instance,schema){return Validator._validate(instance,schema,{changing:false});},checkPropertyChange:function(value,schema,property){return Validator._validate(value,schema,{changing:property||"property"});},_validate:function(instance,schema,options){if(!options){options={};}var _changing=options.changing;var errors=[];function checkProp(value,schema,path,i){var l;path+=path?typeof i=="number"?"["+i+"]":typeof i=="undefined"?"":"."+i:i;function addError(message){errors.push({property:path,message:message});}if((typeof schema!="object"||schema instanceof Array)&&(path||typeof schema!="function")&&!(schema&&schema.type)){if(typeof schema=="function"){if(!(value instanceof schema)){addError("is not an instance of the class/constructor "+schema.name);}}else{if(schema){addError("Invalid schema/property definition "+schema);}}return null;}if(_changing&&schema.readonly){addError("is a readonly field, it can not be changed");}if(schema["extends"]){checkProp(value,schema["extends"],path,i);}function checkType(type,value){if(type){if(typeof type=="string"&&type!="any"&&(type=="null"?value!==null:typeof value!=type)&&!(value instanceof Array&&type=="array")&&!(value instanceof Date&&type=="date")&&!(type=="integer"&&value%1===0)){return[{property:path,message:(typeof value)+" value found, but a "+type+" is required"}];}if(type instanceof Array){var unionErrors=[];for(var j=0;j<type.length;j++){if(!(unionErrors=checkType(type[j],value)).length){break;}}if(unionErrors.length){return unionErrors;}}else{if(typeof type=="object"){var priorErrors=errors;errors=[];checkProp(value,type,path);var theseErrors=errors;errors=priorErrors;return theseErrors;}}}return[];}if(value===undefined){if(schema.required){addError("is missing and it is required");}}else{errors=errors.concat(checkType(schema.type,value));if(schema.disallow&&!checkType(schema.disallow,value).length){addError(" disallowed value was matched");}if(value!==null){if(value instanceof Array){if(schema.items){var itemsIsArray=schema.items instanceof Array;var propDef=schema.items;for(i=0,l=value.length;i<l;i+=1){if(itemsIsArray){propDef=schema.items[i];}if(options.coerce){value[i]=options.coerce(value[i],propDef);}errors.concat(checkProp(value[i],propDef,path,i));}}if(schema.minItems&&value.length<schema.minItems){addError("There must be a minimum of "+schema.minItems+" in the array");}if(schema.maxItems&&value.length>schema.maxItems){addError("There must be a maximum of "+schema.maxItems+" in the array");}}else{if(schema.properties||schema.additionalProperties){errors.concat(checkObj(value,schema.properties,path,schema.additionalProperties));}}if(schema.pattern&&typeof value=="string"&&!value.match(schema.pattern)){addError("does not match the regex pattern "+schema.pattern);}if(schema.maxLength&&typeof value=="string"&&value.length>schema.maxLength){addError("may only be "+schema.maxLength+" characters long");}if(schema.minLength&&typeof value=="string"&&value.length<schema.minLength){addError("must be at least "+schema.minLength+" characters long");}if(typeof schema.minimum!==undefined&&typeof value==typeof schema.minimum&&schema.minimum>value){addError("must have a minimum value of "+schema.minimum);}if(typeof schema.maximum!==undefined&&typeof value==typeof schema.maximum&&schema.maximum<value){addError("must have a maximum value of "+schema.maximum);}if(schema["enum"]){var enumer=schema["enum"];l=enumer.length;var found;for(var j=0;j<l;j++){if(enumer[j]===value){found=1;break;}}if(!found){addError("does not have a value in the enumeration "+enumer.join(", "));}}if(typeof schema.maxDecimal=="number"&&(value.toString().match(new RegExp("\\.[0-9]{"+(schema.maxDecimal+1)+",}")))){addError("may only have "+schema.maxDecimal+" digits of decimal places");}}}return null;}function checkObj(instance,objTypeDef,path,additionalProp){if(typeof objTypeDef=="object"){if(typeof instance!="object"||instance instanceof Array){errors.push({property:path,message:"an object is required"});}for(var i in objTypeDef){if(objTypeDef.hasOwnProperty(i)){var value=instance[i];if(value===undefined&&options.existingOnly){continue;}var propDef=objTypeDef[i];if(value===undefined&&propDef["default"]){value=instance[i]=propDef["default"];}if(options.coerce&&i in instance){value=instance[i]=options.coerce(value,propDef);}checkProp(value,propDef,path,i);}}}for(i in instance){if(instance.hasOwnProperty(i)&&!(i.charAt(0)=="_"&&i.charAt(1)=="_")&&objTypeDef&&!objTypeDef[i]&&additionalProp===false){if(options.filter){delete instance[i];continue;}else{errors.push({property:path,message:(typeof value)+"The property "+i+" is not defined in the schema and the schema does not allow additional properties"});}}var requires=objTypeDef&&objTypeDef[i]&&objTypeDef[i].requires;if(requires&&!(requires in instance)){errors.push({property:path,message:"the presence of the property "+i+" requires that "+requires+" also be present"});}value=instance[i];if(additionalProp&&(!(objTypeDef&&typeof objTypeDef=="object")||!(i in objTypeDef))){if(options.coerce){value=instance[i]=options.coerce(value,additionalProp);}checkProp(value,additionalProp,path,i);}if(!_changing&&value&&value.$schema){errors=errors.concat(checkProp(value,value.$schema,path,i));}}return errors;}if(schema){checkProp(instance,schema,"",_changing||"");}if(!_changing&&instance&&instance.$schema){checkProp(instance,instance.$schema,"","");}return{valid:!errors.length,errors:errors};},mustBeValid:function(result){if(!result.valid){throw new TypeError(result.errors.map(function(error){return"for property "+error.property+": "+error.message;}).join(", \n"));}}};String.type="string";Boolean.type="boolean";Number.type="number";Integer={type:"integer"};Object.type="object";Array.type="array";Date.type="date";$.validator=window.Validator=Validator;})(jQuery);
/*!
 * jQuery Templates Plugin 1.0.0pre
 * http://github.com/jquery/jquery-tmpl
 * Requires jQuery 1.4.2
 *
 * Copyright 2011, Software Freedom Conservancy, Inc.
 * Dual licensed under the MIT or GPL Version 2 licenses.
 * http://jquery.org/license
 */
(function(jQuery,undefined){var oldManip=jQuery.fn.domManip,tmplItmAtt="_tmplitem",htmlExpr=/^[^<]*(<[\w\W]+>)[^>]*$|\{\{\! /,newTmplItems={},wrappedItems={},appendToTmplItems,topTmplItem={key:0,data:{}},itemKey=0,cloneIndex=0,stack=[];function newTmplItem(options,parentItem,fn,data){var newItem={data:data||(data===0||data===false)?data:(parentItem?parentItem.data:{}),_wrap:parentItem?parentItem._wrap:null,tmpl:null,parent:parentItem||null,nodes:[],calls:tiCalls,nest:tiNest,wrap:tiWrap,html:tiHtml,update:tiUpdate};if(options){jQuery.extend(newItem,options,{nodes:[],parent:parentItem});}if(fn){newItem.tmpl=fn;newItem._ctnt=newItem._ctnt||newItem.tmpl(jQuery,newItem);newItem.key=++itemKey;(stack.length?wrappedItems:newTmplItems)[itemKey]=newItem;}return newItem;}jQuery.each({appendTo:"append",prependTo:"prepend",insertBefore:"before",insertAfter:"after",replaceAll:"replaceWith"},function(name,original){jQuery.fn[name]=function(selector){var ret=[],insert=jQuery(selector),elems,i,l,tmplItems,parent=this.length===1&&this[0].parentNode;appendToTmplItems=newTmplItems||{};if(parent&&parent.nodeType===11&&parent.childNodes.length===1&&insert.length===1){insert[original](this[0]);ret=this;}else{for(i=0,l=insert.length;i<l;i++){cloneIndex=i;elems=(i>0?this.clone(true):this).get();jQuery(insert[i])[original](elems);ret=ret.concat(elems);}cloneIndex=0;ret=this.pushStack(ret,name,insert.selector);}tmplItems=appendToTmplItems;appendToTmplItems=null;jQuery.tmpl.complete(tmplItems);return ret;};});jQuery.fn.extend({tmpl:function(data,options,parentItem){return jQuery.tmpl(this[0],data,options,parentItem);},tmplItem:function(){return jQuery.tmplItem(this[0]);},template:function(name){return jQuery.template(name,this[0]);},domManip:function(args,table,callback,options){if(args[0]&&jQuery.isArray(args[0])){var dmArgs=jQuery.makeArray(arguments),elems=args[0],elemsLength=elems.length,i=0,tmplItem;while(i<elemsLength&&!(tmplItem=jQuery.data(elems[i++],"tmplItem"))){}if(tmplItem&&cloneIndex){dmArgs[2]=function(fragClone){jQuery.tmpl.afterManip(this,fragClone,callback);};}oldManip.apply(this,dmArgs);}else{oldManip.apply(this,arguments);}cloneIndex=0;if(!appendToTmplItems){jQuery.tmpl.complete(newTmplItems);}return this;}});jQuery.extend({tmpl:function(tmpl,data,options,parentItem){var ret,topLevel=!parentItem;if(topLevel){parentItem=topTmplItem;tmpl=jQuery.template[tmpl]||jQuery.template(null,tmpl);wrappedItems={};}else{if(!tmpl){tmpl=parentItem.tmpl;newTmplItems[parentItem.key]=parentItem;parentItem.nodes=[];if(parentItem.wrapped){updateWrapped(parentItem,parentItem.wrapped);}return jQuery(build(parentItem,null,parentItem.tmpl(jQuery,parentItem)));}}if(!tmpl){return[];}if(typeof data==="function"){data=data.call(parentItem||{});}if(options&&options.wrapped){updateWrapped(options,options.wrapped);}ret=jQuery.isArray(data)?jQuery.map(data,function(dataItem){return dataItem?newTmplItem(options,parentItem,tmpl,dataItem):null;}):[newTmplItem(options,parentItem,tmpl,data)];return topLevel?jQuery(build(parentItem,null,ret)):ret;},tmplItem:function(elem){var tmplItem;if(elem instanceof jQuery){elem=elem[0];}while(elem&&elem.nodeType===1&&!(tmplItem=jQuery.data(elem,"tmplItem"))&&(elem=elem.parentNode)){}return tmplItem||topTmplItem;},template:function(name,tmpl){if(tmpl){if(typeof tmpl==="string"){tmpl=buildTmplFn(tmpl);}else{if(tmpl instanceof jQuery){tmpl=tmpl[0]||{};}}if(tmpl.nodeType){tmpl=jQuery.data(tmpl,"tmpl")||jQuery.data(tmpl,"tmpl",buildTmplFn(tmpl.innerHTML));}return typeof name==="string"?(jQuery.template[name]=tmpl):tmpl;}return name?(typeof name!=="string"?jQuery.template(null,name):(jQuery.template[name]||jQuery.template(null,htmlExpr.test(name)?name:jQuery(name)))):null;},encode:function(text){return(""+text).split("<").join("&lt;").split(">").join("&gt;").split('"').join("&#34;").split("'").join("&#39;");}});jQuery.extend(jQuery.tmpl,{tag:{"tmpl":{_default:{$2:"null"},open:"if($notnull_1){__=__.concat($item.nest($1,$2));}"},"wrap":{_default:{$2:"null"},open:"$item.calls(__,$1,$2);__=[];",close:"call=$item.calls();__=call._.concat($item.wrap(call,__));"},"each":{_default:{$2:"$index, $value"},open:"if($notnull_1){$.each($1a,function($2){with(this){",close:"}});}"},"if":{open:"if(($notnull_1) && $1a){",close:"}"},"else":{_default:{$1:"true"},open:"}else if(($notnull_1) && $1a){"},"html":{open:"if($notnull_1){__.push($1a);}"},"=":{_default:{$1:"$data"},open:"if($notnull_1){__.push($.encode($1a));}"},"!":{open:""}},complete:function(items){newTmplItems={};},afterManip:function afterManip(elem,fragClone,callback){var content=fragClone.nodeType===11?jQuery.makeArray(fragClone.childNodes):fragClone.nodeType===1?[fragClone]:[];callback.call(elem,fragClone);storeTmplItems(content);cloneIndex++;}});function build(tmplItem,nested,content){var frag,ret=content?jQuery.map(content,function(item){return(typeof item==="string")?(tmplItem.key?item.replace(/(<\w+)(?=[\s>])(?![^>]*_tmplitem)([^>]*)/g,"$1 "+tmplItmAtt+'="'+tmplItem.key+'" $2'):item):build(item,tmplItem,item._ctnt);}):tmplItem;if(nested){return ret;}ret=ret.join("");ret.replace(/^\s*([^<\s][^<]*)?(<[\w\W]+>)([^>]*[^>\s])?\s*$/,function(all,before,middle,after){frag=jQuery(middle).get();storeTmplItems(frag);if(before){frag=unencode(before).concat(frag);}if(after){frag=frag.concat(unencode(after));}});return frag?frag:unencode(ret);}function unencode(text){var el=document.createElement("div");el.innerHTML=text;return jQuery.makeArray(el.childNodes);}function buildTmplFn(markup){return new Function("jQuery","$item","var $=jQuery,call,__=[],$data=$item.data;"+"with($data){__.push('"+jQuery.trim(markup).replace(/([\\'])/g,"\\$1").replace(/[\r\t\n]/g," ").replace(/\$\{([^\}]*)\}/g,"{{= $1}}").replace(/\{\{(\/?)(\w+|.)(?:\(((?:[^\}]|\}(?!\}))*?)?\))?(?:\s+(.*?)?)?(\(((?:[^\}]|\}(?!\}))*?)\))?\s*\}\}/g,function(all,slash,type,fnargs,target,parens,args){var tag=jQuery.tmpl.tag[type],def,expr,exprAutoFnDetect;if(!tag){throw"Unknown template tag: "+type;}def=tag._default||[];if(parens&&!/\w$/.test(target)){target+=parens;parens="";}if(target){target=unescape(target);args=args?(","+unescape(args)+")"):(parens?")":"");expr=parens?(target.indexOf(".")>-1?target+unescape(parens):("("+target+").call($item"+args)):target;exprAutoFnDetect=parens?expr:"(typeof("+target+")==='function'?("+target+").call($item):("+target+"))";}else{exprAutoFnDetect=expr=def.$1||"null";}fnargs=unescape(fnargs);return"');"+tag[slash?"close":"open"].split("$notnull_1").join(target?"typeof("+target+")!=='undefined' && ("+target+")!=null":"true").split("$1a").join(exprAutoFnDetect).split("$1").join(expr).split("$2").join(fnargs||def.$2||"")+"__.push('";})+"');}return __;");}function updateWrapped(options,wrapped){options._wrap=build(options,true,jQuery.isArray(wrapped)?wrapped:[htmlExpr.test(wrapped)?wrapped:jQuery(wrapped).html()]).join("");}function unescape(args){return args?args.replace(/\\'/g,"'").replace(/\\\\/g,"\\"):null;}function outerHtml(elem){var div=document.createElement("div");div.appendChild(elem.cloneNode(true));return div.innerHTML;}function storeTmplItems(content){var keySuffix="_"+cloneIndex,elem,elems,newClonedItems={},i,l,m;for(i=0,l=content.length;i<l;i++){if((elem=content[i]).nodeType!==1){continue;}elems=elem.getElementsByTagName("*");for(m=elems.length-1;m>=0;m--){processItemKey(elems[m]);}processItemKey(elem);}function processItemKey(el){var pntKey,pntNode=el,pntItem,tmplItem,key;if((key=el.getAttribute(tmplItmAtt))){while(pntNode.parentNode&&(pntNode=pntNode.parentNode).nodeType===1&&!(pntKey=pntNode.getAttribute(tmplItmAtt))){}if(pntKey!==key){pntNode=pntNode.parentNode?(pntNode.nodeType===11?0:(pntNode.getAttribute(tmplItmAtt)||0)):0;if(!(tmplItem=newTmplItems[key])){tmplItem=wrappedItems[key];tmplItem=newTmplItem(tmplItem,newTmplItems[pntNode]||wrappedItems[pntNode]);tmplItem.key=++itemKey;newTmplItems[itemKey]=tmplItem;}if(cloneIndex){cloneTmplItem(key);}}el.removeAttribute(tmplItmAtt);}else{if(cloneIndex&&(tmplItem=jQuery.data(el,"tmplItem"))){cloneTmplItem(tmplItem.key);newTmplItems[tmplItem.key]=tmplItem;pntNode=jQuery.data(el.parentNode,"tmplItem");pntNode=pntNode?pntNode.key:0;}}if(tmplItem){pntItem=tmplItem;while(pntItem&&pntItem.key!=pntNode){pntItem.nodes.push(el);pntItem=pntItem.parent;}delete tmplItem._ctnt;delete tmplItem._wrap;jQuery.data(el,"tmplItem",tmplItem);}function cloneTmplItem(key){key=key+keySuffix;tmplItem=newClonedItems[key]=(newClonedItems[key]||newTmplItem(tmplItem,newTmplItems[tmplItem.parent.key+keySuffix]||tmplItem.parent));}}}function tiCalls(content,tmpl,data,options){if(!content){return stack.pop();}stack.push({_:content,tmpl:tmpl,item:this,data:data,options:options});}function tiNest(tmpl,data,options){return jQuery.tmpl(jQuery.template(tmpl),data,options,this);}function tiWrap(call,wrapped){var options=call.options||{};options.wrapped=wrapped;return jQuery.tmpl(jQuery.template(call.tmpl),call.data,options,call.item);}function tiHtml(filter,textOnly){var wrapped=this._wrap;return jQuery.map(jQuery(jQuery.isArray(wrapped)?wrapped.join(""):wrapped).filter(filter||"*"),function(e){return textOnly?e.innerText||e.textContent:e.outerHTML||outerHtml(e);});}function tiUpdate(){var coll=this.nodes;jQuery.tmpl(null,null,null,this).insertBefore(coll[0]);jQuery(coll).remove();}})(jQuery);function hoozit(o){if(o.constructor===String){return"string";}else{if(o.constructor===Boolean){return"boolean";}else{if(o.constructor===Number){if(isNaN(o)){return"nan";}else{return"number";}}else{if(typeof o==="undefined"){return"undefined";}else{if(o===null){return"null";}else{if(o instanceof Array){return"array";}else{if(o instanceof Date){return"date";}else{if(o instanceof RegExp){return"regexp";}else{if(typeof o==="object"){return"object";}else{if(o instanceof Function){return"function";}else{return undefined;}}}}}}}}}}}function bindCallbacks(o,callbacks,args){var prop=hoozit(o);if(prop){if(hoozit(callbacks[prop])==="function"){return callbacks[prop].apply(callbacks,args);}else{return callbacks[prop];}}}var equiv=function(){var innerEquiv;var callers=[];var callbacks=function(){function useStrictEquality(b,a){if(b instanceof a.constructor||a instanceof b.constructor){return a==b;}else{return a===b;}}return{"string":useStrictEquality,"boolean":useStrictEquality,"number":useStrictEquality,"null":useStrictEquality,"undefined":useStrictEquality,"nan":function(b){return isNaN(b);},"date":function(b,a){return hoozit(b)==="date"&&a.valueOf()===b.valueOf();},"regexp":function(b,a){return hoozit(b)==="regexp"&&a.source===b.source&&a.global===b.global&&a.ignoreCase===b.ignoreCase&&a.multiline===b.multiline;},"function":function(){var caller=callers[callers.length-1];return caller!==Object&&typeof caller!=="undefined";},"array":function(b,a){var i;var len;if(!(hoozit(b)==="array")){return false;}len=a.length;if(len!==b.length){return false;}for(i=0;i<len;i++){if(!innerEquiv(a[i],b[i])){return false;}}return true;},"object":function(b,a){var i;var eq=true;var aProperties=[],bProperties=[];if(a.constructor!==b.constructor){return false;}callers.push(a.constructor);for(i in a){aProperties.push(i);if(!innerEquiv(a[i],b[i])){eq=false;}}callers.pop();for(i in b){bProperties.push(i);}return eq&&innerEquiv(aProperties.sort(),bProperties.sort());}};}();innerEquiv=function(){var args=Array.prototype.slice.apply(arguments);if(args.length<2){return true;}return(function(a,b){if(a===b){return true;}else{if(a===null||b===null||typeof a==="undefined"||typeof b==="undefined"||hoozit(a)!==hoozit(b)){return false;}else{return bindCallbacks(a,callbacks,[b,a]);}}})(args[0],args[1])&&arguments.callee.apply(this,args.splice(1,args.length-1));};return innerEquiv;}();(function($){function getPasteEvent(){var el=document.createElement("input"),name="onpaste";el.setAttribute(name,"");return(typeof el[name]==="function")?"paste":"input";}var pasteEventName=getPasteEvent()+".mask",ua=navigator.userAgent,iPhone=/iphone/i.test(ua),android=/android/i.test(ua),caretTimeoutId;$.mask={definitions:{"9":"[0-9]","a":"[A-Za-z]","*":"[A-Za-z0-9]"},dataName:"rawMaskFn",placeholder:"_"};$.fn.extend({caret:function(begin,end){var range;if(this.length===0||this.is(":hidden")){return;}if(typeof begin=="number"){end=(typeof end==="number")?end:begin;return this.each(function(){if(this.setSelectionRange){this.setSelectionRange(begin,end);}else{if(this.createTextRange){range=this.createTextRange();range.collapse(true);range.moveEnd("character",end);range.moveStart("character",begin);range.select();}}});}else{if(this[0].setSelectionRange){begin=this[0].selectionStart;end=this[0].selectionEnd;}else{if(document.selection&&document.selection.createRange){range=document.selection.createRange();begin=0-range.duplicate().moveStart("character",-100000);end=begin+range.text.length;}}return{begin:begin,end:end};}},unmask:function(){return this.trigger("unmask");},mask:function(mask,settings){var input,defs,tests,partialPosition,firstNonMaskPos,len;if(!mask&&this.length>0){input=$(this[0]);return input.data($.mask.dataName)();}settings=$.extend({placeholder:$.mask.placeholder,completed:null},settings);defs=$.mask.definitions;tests=[];partialPosition=len=mask.length;firstNonMaskPos=null;$.each(mask.split(""),function(i,c){if(c=="?"){len--;partialPosition=i;}else{if(defs[c]){tests.push(new RegExp(defs[c]));if(firstNonMaskPos===null){firstNonMaskPos=tests.length-1;}}else{tests.push(null);}}});return this.trigger("unmask").each(function(){var input=$(this),buffer=$.map(mask.split(""),function(c,i){if(c!="?"){return defs[c]?settings.placeholder:c;}}),focusText=input.val();function seekNext(pos){while(++pos<len&&!tests[pos]){}return pos;}function seekPrev(pos){while(--pos>=0&&!tests[pos]){}return pos;}function shiftL(begin,end){var i,j;if(begin<0){return;}for(i=begin,j=seekNext(end);i<len;i++){if(tests[i]){if(j<len&&tests[i].test(buffer[j])){buffer[i]=buffer[j];buffer[j]=settings.placeholder;}else{break;}j=seekNext(j);}}writeBuffer();input.caret(Math.max(firstNonMaskPos,begin));}function shiftR(pos){var i,c,j,t;for(i=pos,c=settings.placeholder;i<len;i++){if(tests[i]){j=seekNext(i);t=buffer[i];buffer[i]=c;if(j<len&&tests[j].test(t)){c=t;}else{break;}}}}function keydownEvent(e){var k=e.which,pos,begin,end;if(k===8||k===46||(iPhone&&k===127)){pos=input.caret();begin=pos.begin;end=pos.end;if(end-begin===0){begin=k!==46?seekPrev(begin):(end=seekNext(begin-1));end=k===46?seekNext(end):end;}clearBuffer(begin,end);shiftL(begin,end-1);e.preventDefault();}else{if(k==27){input.val(focusText);input.caret(0,checkVal());e.preventDefault();}}}function keypressEvent(e){var k=e.which,pos=input.caret(),p,c,next;if(e.ctrlKey||e.altKey||e.metaKey||k<32){return;}else{if(k){if(pos.end-pos.begin!==0){clearBuffer(pos.begin,pos.end);shiftL(pos.begin,pos.end-1);}p=seekNext(pos.begin-1);if(p<len){c=String.fromCharCode(k);if(tests[p].test(c)){shiftR(p);buffer[p]=c;writeBuffer();next=seekNext(p);if(android){setTimeout($.proxy($.fn.caret,input,next),0);}else{input.caret(next);}if(settings.completed&&next>=len){settings.completed.call(input);}}}e.preventDefault();}}}function clearBuffer(start,end){var i;for(i=start;i<end&&i<len;i++){if(tests[i]){buffer[i]=settings.placeholder;}}}function writeBuffer(){input.val(buffer.join(""));}function checkVal(allow){var test=input.val(),lastMatch=-1,i,c;for(i=0,pos=0;i<len;i++){if(tests[i]){buffer[i]=settings.placeholder;while(pos++<test.length){c=test.charAt(pos-1);if(tests[i].test(c)){buffer[i]=c;lastMatch=i;break;}}if(pos>test.length){break;}}else{if(buffer[i]===test.charAt(pos)&&i!==partialPosition){pos++;lastMatch=i;}}}if(allow){writeBuffer();}else{if(lastMatch+1<partialPosition){input.val("");clearBuffer(0,len);}else{writeBuffer();input.val(input.val().substring(0,lastMatch+1));}}return(partialPosition?i:firstNonMaskPos);}input.data($.mask.dataName,function(){return $.map(buffer,function(c,i){return tests[i]&&c!=settings.placeholder?c:null;}).join("");});if(!input.attr("readonly")){input.one("unmask",function(){input.unbind(".mask").removeData($.mask.dataName);}).bind("focus.mask",function(){clearTimeout(caretTimeoutId);var pos,moveCaret;focusText=input.val();if(focusText===""){clearBuffer(0,len);writeBuffer();pos=0;}else{pos=checkVal();}caretTimeoutId=setTimeout(function(){writeBuffer();if(pos==mask.length){input.caret(0,pos);}else{input.caret(pos);}},10);}).bind("blur.mask",function(){checkVal();if(input.val()!=focusText){input.change();}}).bind("keydown.mask",keydownEvent).bind("keypress.mask",keypressEvent).bind(pasteEventName,function(){setTimeout(function(){var pos=checkVal(true);input.caret(pos);if(settings.completed&&pos==input.val().length){settings.completed.call(input);}},0);});}checkVal();});}});})(jQuery);(function($){var Alpaca;Alpaca=function(){var args=Alpaca.makeArray(arguments);if(args.length===0){return Alpaca.throwDefaultError("You must supply at least one argument which is the element against which to apply the Alpaca generated form");}var el=args[0];var data=null;var schema=null;var options=null;var view=null;var callback=null;var renderedCallback=null;var errorCallback=null;var connector=null;var notTopLevel=false;var isDynamicCreation=false;var initialSettings={};var dataSource=null;var schemaSource=null;var optionsSource=null;var viewSource=null;if(args.length==1){var domElements=$(el).find(":first");var field=null;for(var i=0;i<domElements.length;i++){var domElement=domElements[i];var fieldId=$(domElement).attr("alpaca-field-id");if(fieldId){var _field=Alpaca.fieldInstances[fieldId];if(_field){field=_field;}}}if(field!==null){return field;}else{var domData=$(el).html();$(el).html("");data=domData;}}if(args.length>=2){if(Alpaca.isObject(args[1])){data=args[1].data;schema=args[1].schema;options=args[1].options;view=args[1].view;callback=args[1].render;renderedCallback=args[1].postRender;errorCallback=args[1].error;connector=args[1].connector;dataSource=args[1].dataSource;schemaSource=args[1].schemaSource;optionsSource=args[1].optionsSource;viewSource=args[1].viewSource;if(args[1].ui){initialSettings["ui"]=args[1].ui;}if(args[1].type){initialSettings["type"]=args[1].type;}if(!Alpaca.isEmpty(args[1].notTopLevel)){notTopLevel=args[1].notTopLevel;}if(!Alpaca.isEmpty(args[1].isDynamicCreation)){isDynamicCreation=args[1].isDynamicCreation;}}else{data=args[1];if(Alpaca.isFunction(data)){data=data();}}}if(Alpaca.isEmpty(errorCallback)){errorCallback=Alpaca.defaultErrorCallback;}if(Alpaca.isEmpty(connector)){var connectorClass=Alpaca.getConnectorClass("default");connector=new connectorClass("default");}if(el){if(Alpaca.isString(el)){el=$("#"+el);}}var loadAllConnector=connector;if(notTopLevel){var loadAllConnectorClass=Alpaca.getConnectorClass("default");loadAllConnector=new loadAllConnectorClass("default");}if(!options){options={};}if(Alpaca.isUndefined(options.focus)){options.focus=false;}var _renderedCallback=function(control){if(options&&options.focus){window.setTimeout(function(){if(options.focus===true){if(control.children&&control.children.length>0){if(control.children[0].field&&control.children[0].field){control.children[0].field.focus();}}}else{var child=control.getControlByPath(options.focus);if(child&&child.field&&child.field.length>0){child.field.focus();}}},250);}if(renderedCallback){renderedCallback(control);}};loadAllConnector.loadAll({"data":data,"schema":schema,"options":options,"view":view,"dataSource":dataSource,"schemaSource":schemaSource,"optionsSource":optionsSource,"viewSource":viewSource},function(loadedData,loadedOptions,loadedSchema,loadedView){loadedData=loadedData?loadedData:data;loadedSchema=loadedSchema?loadedSchema:schema;loadedOptions=loadedOptions?loadedOptions:options;loadedView=loadedView?loadedView:view;if(Alpaca.isEmpty(loadedData)){if(Alpaca.isEmpty(loadedSchema)&&(Alpaca.isEmpty(loadedOptions)||Alpaca.isEmpty(loadedOptions.type))){loadedData="";if(Alpaca.isEmpty(loadedOptions)){loadedOptions="text";}else{if(options&&Alpaca.isObject(options)){loadedOptions.type="text";}}}}return Alpaca.init(el,loadedData,loadedOptions,loadedSchema,loadedView,initialSettings,callback,_renderedCallback,connector,errorCallback,isDynamicCreation);},function(loadError){errorCallback(loadError);return null;});return $(el);};Alpaca.Fields={};Alpaca.Connectors={};Alpaca.Extend=$.extend;Alpaca.Create=function(){var args=Array.prototype.slice.call(arguments);args.unshift({});return $.extend.apply(this,args);};Alpaca.Extend(Alpaca,{VERSION:"0.1.0",makeArray:function(nonArray){return Array.prototype.slice.call(nonArray);},isFunction:function(obj){return Object.prototype.toString.call(obj)==="[object Function]";},isString:function(obj){return(typeof obj==="string");},isObject:function(obj){return !Alpaca.isUndefined(obj)&&Object.prototype.toString.call(obj)==="[object Object]";},isPlainObject:function(obj){return $.isPlainObject(obj);},isNumber:function(obj){return(typeof obj==="number");},isArray:function(obj){return obj instanceof Array;},isBoolean:function(obj){return(typeof obj==="boolean");},isUndefined:function(obj){return(typeof obj==="undefined");},trim:function(text){var trimmed=text;if(trimmed&&Alpaca.isString(trimmed)){trimmed=trimmed.replace(/^\s+|\s+$/g,"");}return trimmed;},safeDomParse:function(x){if(x&&Alpaca.isString(x)){x=Alpaca.trim(x);var converted=null;try{converted=$(x);}catch(e){x="<div>"+x+"</div>";converted=$(x).children();}return converted;}return x;},isEmpty:function(obj){return Alpaca.isUndefined(obj)||obj===null;},copyOf:function(thing){var copy=thing;if(Alpaca.isArray(thing)){copy=[];for(var i=0;i<thing.length;i++){copy.push(Alpaca.copyOf(thing[i]));}}else{if(Alpaca.isObject(thing)){if(thing instanceof Date){return new Date(thing.getTime());}else{if(thing instanceof RegExp){return new RegExp(thing);}else{if(thing.nodeType&&"cloneNode" in thing){copy=thing.cloneNode(true);}else{if($.isPlainObject(thing)){copy={};for(var k in thing){if(thing.hasOwnProperty(k)){copy[k]=Alpaca.copyOf(thing[k]);}}}else{}}}}}}return copy;},cloneObject:function(object){return Alpaca.copyOf(object);},spliceIn:function(source,splicePoint,splice){return source.substring(0,splicePoint)+splice+source.substring(splicePoint,source.length);},compactArray:function(arr){var n=[],l=arr.length,i;for(i=0;i<l;i++){if(!lang.isNull(arr[i])&&!lang.isUndefined(arr[i])){n.push(arr[i]);}}return n;},removeAccents:function(str){return str.replace(/[àáâãäå]/g,"a").replace(/[èéêë]/g,"e").replace(/[ìíîï]/g,"i").replace(/[òóôõö]/g,"o").replace(/[ùúûü]/g,"u").replace(/[ýÿ]/g,"y").replace(/[ñ]/g,"n").replace(/[ç]/g,"c").replace(/[œ]/g,"oe").replace(/[æ]/g,"ae");},indexOf:function(el,arr,fn){var l=arr.length,i;if(!Alpaca.isFunction(fn)){fn=function(elt,arrElt){return elt===arrElt;};}for(i=0;i<l;i++){if(fn.call({},el,arr[i])){return i;}}return -1;},uniqueIdCounter:0,defaultLocale:"en_US",setDefaultLocale:function(locale){this.defaultLocale=locale;},defaultSchemaFieldMapping:{},registerDefaultSchemaFieldMapping:function(schemaType,fieldType){if(schemaType&&fieldType){this.defaultSchemaFieldMapping[schemaType]=fieldType;}},defaultFormatFieldMapping:{},registerDefaultFormatFieldMapping:function(format,fieldType){if(format&&fieldType){this.defaultFormatFieldMapping[format]=fieldType;}},getSchemaType:function(data){if(Alpaca.isEmpty(data)){return"string";}if(Alpaca.isObject(data)){return"object";}if(Alpaca.isString(data)){return"string";}if(Alpaca.isNumber(data)){return"number";}if(Alpaca.isArray(data)){return"array";}if(Alpaca.isBoolean(data)){return"boolean";}if(typeof data=="object"){return"object";}},views:{},viewIdPrefix:"VIEW_",isValidViewId:function(id){return Alpaca.startsWith(id,this.viewIdPrefix);},generateViewId:function(){return this.viewIdPrefix+this.generateId();},registerView:function(viewObject){var id=viewObject.id;if(!id){return Alpaca.throwDefaultError("Cannot register view with missing view id: "+id);}var existingView=this.views[id];if(existingView){Alpaca.mergeObject(existingView,viewObject);}else{this.views[id]=viewObject;}},defaultView:"VIEW_WEB_EDIT",setDefaultView:function(viewId){if(viewId&&this.views.hasOwnProperty(viewId)){this.defaultView=viewId;}},getNormalizedView:function(viewId){return this.normalizedViews[viewId];},lookupNormalizedView:function(ui,type){var theViewId=null;for(var viewId in this.normalizedViews){var view=this.normalizedViews[viewId];if(view.ui==ui&&view.type==type){theViewId=viewId;break;}}return theViewId;},registerTemplate:function(templateId,template,viewId){if(!viewId){viewId="VIEW_BASE";}if(!this.views[viewId]){this.views[viewId]={};this.views[viewId].id=viewId;}if(!this.views[viewId].templates){this.views[viewId].templates={};}this.views[viewId].templates[templateId]=template;},registerTemplates:function(templates,viewId){for(var templateId in templates){this.registerTemplate(templateId,templates[templateId],viewId);}},registerMessage:function(messageId,message,viewId){if(!viewId){viewId="VIEW_BASE";}if(!this.views[viewId]){this.views[viewId]={};this.views[viewId].id=viewId;}if(!this.views[viewId].messages){this.views[viewId].messages={};}this.views[viewId].messages[messageId]=message;},registerMessages:function(messages,viewId){for(var messageId in messages){if(messages.hasOwnProperty(messageId)){this.registerMessage(messageId,messages[messageId],viewId);}}},fieldTemplatePostfix:{"controlFieldMessageContainer":"-controlfield-message-container","controlFieldLabel":"-controlfield-label","controlFieldContainer":"-controlfield-container","controlFieldHelper":"-controlfield-helper","fieldSetLegend":"-fieldset-legend","fieldSetItemsContainer":"-fieldset-items-container","fieldSetHelper":"-fieldset-helper","fieldSetOuterEl":"-fieldset","formButtonsContainer":"-form-buttons-container","formFieldsContainer":"-form-fields-container"},fieldTemplate:function(object,name,wrap){var _this=this;var field=object.data;var view=object.data.view;var html="";if(!name){name="controlFieldLabel";}var templateDescriptor=this.getTemplateDescriptor(view,name,field);if(wrap){var template=templateDescriptor.template.value;if($(".alpaca"+this.fieldTemplatePostfix[name],Alpaca.safeDomParse(template)).length===0){if(this.fieldTemplatePostfix[name]){template=Alpaca.safeDomParse(template).addClass("alpaca"+this.fieldTemplatePostfix[name]);}}html=Alpaca.safeDomParse(template).outerHTML(true);}else{var label=view.tmpl(templateDescriptor,object.data);if(label){if(this.fieldTemplatePostfix[name]){if($(".alpaca"+this.fieldTemplatePostfix[name],label).length===0){label.addClass("alpaca"+this.fieldTemplatePostfix[name]);}if(!label.attr("id")){label.attr("id",object.data.id+this.fieldTemplatePostfix[name]);}}html=label.outerHTML(true);}else{html="";}}return html;},defaultDateFormat:"mm/dd/yy",regexps:{"email":/^[a-z0-9!\#\$%&'\*\-\/=\?\+\-\^_`\{\|\}~]+(?:\.[a-z0-9!\#\$%&'\*\-\/=\?\+\-\^_`\{\|\}~]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\.)+[a-z]{2,6}$/i,"url":/^(http|https):\/\/[a-z0-9]+([\-\.]{1}[a-z0-9]+)*\.[a-z]{2,5}(\:[0-9]{1,5})?(([0-9]{1,5})?\/.*)?$/i,"password":/^[0-9a-zA-Z\x20-\x7E]*$/,"date":/^(0[1-9]|1[012])[- /.](0[1-9]|[12][0-9]|3[01])[- /.]\d\d$/,"integer":/^([\+\-]?([1-9]\d*)|0)$/,"number":/^([\+\-]?((([0-9]+(\.)?)|([0-9]*\.[0-9]+))([eE][+-]?[0-9]+)?))$/,"phone":/^(\D?(\d{3})\D?\D?(\d{3})\D?(\d{4}))?$/,"ipv4":/^(?:1\d?\d?|2(?:[0-4]\d?|[6789]|5[0-5]?)?|[3-9]\d?|0)(?:\.(?:1\d?\d?|2(?:[0-4]\d?|[6789]|5[0-5]?)?|[3-9]\d?|0)){3}$/,"zipcode-five":/^(\d{5})?$/,"zipcode-nine":/^(\d{5}(-\d{4})?)?$/},fieldInstances:{},fieldClassRegistry:{},registerFieldClass:function(type,fieldClass){this.fieldClassRegistry[type]=fieldClass;},getFieldClass:function(type){return this.fieldClassRegistry[type];},getFieldClassType:function(fieldClass){for(var type in this.fieldClassRegistry){if(this.fieldClassRegistry.hasOwnProperty(type)){if(this.fieldClassRegistry[type]==fieldClass){return type;}}}return null;},connectorClassRegistry:{},registerConnectorClass:function(type,connectorClass){this.connectorClassRegistry[type]=connectorClass;},getConnectorClass:function(type){return this.connectorClassRegistry[type];},replaceAll:function(text,replace,with_this){return text.replace(new RegExp(replace,"g"),with_this);},element:function(tag,domAttributes,styleAttributes,classNames){var el=$("<"+tag+"/>");if(domAttributes){el.attr(domAttributes);}if(styleAttributes){el.css(styleAttributes);}if(classNames){for(var className in classNames){el.addClass(className);}}},elementFromTemplate:function(template,substitutions){var html=template;if(substitutions){for(var x in substitutions){html=Alpaca.replaceAll(html,"${"+x+"}",substitutions[x]);}}return $(html);},generateId:function(){Alpaca.uniqueIdCounter++;return"alpaca"+Alpaca.uniqueIdCounter;},later:function(when,o,fn,data,periodic){when=when||0;o=o||{};var m=fn,d=$.makeArray(data),f,r;if(typeof fn==="string"){m=o[fn];}if(!m){throw {name:"TypeError",message:"The function is undefined."};}f=function(){m.apply(o,d);};r=(periodic)?setInterval(f,when):setTimeout(f,when);return{id:r,interval:periodic,cancel:function(){if(this.interval){clearInterval(r);}else{clearTimeout(r);}}};},endsWith:function(text,suffix){return text.indexOf(suffix,text.length-suffix.length)!==-1;},startsWith:function(text,prefix){return text.substr(0,prefix.length)===prefix;},isUri:function(obj){return Alpaca.isString(obj)&&(Alpaca.startsWith(obj,"http://")||Alpaca.startsWith(obj,"https://")||Alpaca.startsWith(obj,"/")||Alpaca.startsWith(obj,"./")||Alpaca.startsWith(obj,"../"));},traverseObject:function(object,keys,subprop){if(Alpaca.isString(keys)){keys=keys.split(".");}var element=null;var current=object;var key=null;do{key=keys.shift();if(subprop&&key==subprop){key=keys.shift();}if(!Alpaca.isEmpty(current[key])){current=current[key];if(keys.length===0){element=current;}}else{keys=[];}}while(keys.length>0);return element;},each:function(data,func){if(Alpaca.isArray(data)){for(var i=0;i<data.length;i++){func.apply(data[i]);}}else{if(Alpaca.isObject(data)){for(var key in data){func.apply(data[key]);}}}},merge:function(obj1,obj2,validKeyFunction){if(!obj1){obj1={};}for(var key in obj2){var valid=true;if(validKeyFunction){valid=validKeyFunction(key);}if(valid){if(Alpaca.isEmpty(obj2[key])){obj1[key]=obj2[key];}else{if(Alpaca.isObject(obj2[key])){if(!obj1[key]){obj1[key]={};}obj1[key]=Alpaca.merge(obj1[key],obj2[key]);}else{obj1[key]=obj2[key];}}}}return obj1;},mergeObject:function(target,source){if(!target){target={};}if(!source){source={};}this.mergeObject2(source,target);return target;},mergeObject2:function(source,target){var isArray=Alpaca.isArray;var isObject=Alpaca.isObject;var isUndefined=Alpaca.isUndefined;var copyOf=Alpaca.copyOf;var _merge=function(source,target){if(isArray(source)){if(isArray(target)){$.each(source,function(index){target.push(copyOf(source[index]));});}else{}}else{if(isObject(source)){if(isObject(target)){$.each(source,function(key){if(isUndefined(target[key])){target[key]=copyOf(source[key]);}else{target[key]=_merge(source[key],target[key]);}});}else{}}else{target=copyOf(source);}}return target;};_merge(source,target);return target;},substituteTokens:function(text,args){if(!Alpaca.isEmpty(text)){for(var i=0;i<args.length;i++){var token="{"+i+"}";var x=text.indexOf(token);if(x>-1){var nt=text.substring(0,x)+args[i]+text.substring(x+3);text=nt;}}}return text;},compareObject:function(obj1,obj2){return equiv(obj1,obj2);},compareArrayContent:function(arr_1,arr_2){var equal=arr_1&&arr_2&&(arr_1.length==arr_2.length);if(equal){$.each(arr_1,function(foo,val){if(!equal){return false;}if($.inArray(val,arr_2)==-1){equal=false;}else{equal=true;}});}return equal;},isValEmpty:function(val){var empty=false;if(Alpaca.isEmpty(val)){empty=true;}else{if(Alpaca.isString(val)&&val===""){empty=true;}if(Alpaca.isObject(val)&&$.isEmptyObject(val)){empty=true;}if(Alpaca.isArray(val)&&val.length===0){empty=true;}if(Alpaca.isNumber(val)&&isNaN(val)){empty=true;}}return empty;},init:function(el,data,options,schema,view,initialSettings,callback,renderedCallback,connector,errorCallback,isDynamicCreation){var self=this;if(Alpaca.isObject(view)){var viewId=view.id;if(!viewId){view.id=this.generateViewId();}var parentId=view.parent;if(!parentId){view.parent="VIEW_WEB_EDIT";}this.registerView(view);view=view.id;}this.compile(function(report){if(report.errors&&report.errors.length>0){for(var i=0;i<report.errors.length;i++){var viewId=report.errors[i].viewId;var templateId=report.errors[i].templateId;var err=report.errors[i].err;Alpaca.logError("The template: "+templateId+" for view: "+viewId+" failed to compile");Alpaca.logError(JSON.stringify(err));}return Alpaca.throwErrorWithCallback("View compilation failed, cannot initialize Alpaca.  Please check the error logs.",errorCallback);}self._init(el,data,options,schema,view,initialSettings,callback,renderedCallback,connector,errorCallback,isDynamicCreation);},errorCallback);},_init:function(el,data,options,schema,view,initialSettings,callback,renderedCallback,connector,errorCallback,isDynamicCreation){var fallbackUI=null;var fallbackType=null;var fallbackViewId=null;if($.mobile){fallbackUI="mobile";if(data){fallbackType="edit";fallbackViewId="VIEW_MOBILE_EDIT";}else{fallbackType="create";fallbackViewId="VIEW_MOBILE_CREATE";}}var bootstrapDetected=(typeof $().modal=="function");if(bootstrapDetected){fallbackUI="bootstrap";if(data){fallbackType="edit";fallbackViewId="VIEW_BOOTSTRAP_EDIT";}else{fallbackType="create";fallbackViewId="VIEW_BOOTSTRAP_CREATE";}}if(!view){var ui=initialSettings.ui;var type=initialSettings.type;if(!ui){if(!fallbackUI){fallbackUI=Alpaca.defaultUI;}if(fallbackUI){ui=fallbackUI;}}if(ui){if(!type){type=fallbackType?fallbackType:"edit";}Alpaca.logDebug("No view provided but found request for UI: "+ui+" and type: "+type);view=this.lookupNormalizedView(ui,type);if(view){Alpaca.logDebug("Found view: "+view);}else{Alpaca.logDebug("No view found for UI: "+ui+" and type: "+type);}}}if(!view){Alpaca.logDebug("A view was not specified.");if(fallbackViewId){Alpaca.logDebug("Falling back to detected view: "+fallbackViewId);view=fallbackViewId;}else{Alpaca.logDebug("Falling back to default view: "+this.defaultView);view=this.defaultView;}}if(Alpaca.isString(view)){if(!this.normalizedViews[view]){return Alpaca.throwErrorWithCallback("The desired view: "+view+" could not be loaded.  Please make sure it is loaded and not misspelled.",errorCallback);}}var field=Alpaca.createFieldInstance(el,data,options,schema,view,connector,errorCallback);if(field){$(el).addClass("alpaca-field-rendering");$(el).addClass("alpaca-hidden");field.isDynamicCreation=isDynamicCreation;Alpaca.fieldInstances[field.getId()]=field;field.allFieldInstances=function(){return Alpaca.fieldInstances;};if(Alpaca.isEmpty(callback)){callback=field.view.render;}if(Alpaca.isEmpty(renderedCallback)){renderedCallback=field.view.postRender;}if(Alpaca.collectTiming){var counters=Alpaca.Counters("render");var t1=new Date().getTime();}var fin=function(){if(!field.parent){field.refreshValidationState(true);if(field.view.type!="view"){Alpaca.fieldApplyChildren(field,function(field){field.hideInitValidationError=false;});}}$(el).removeClass("alpaca-field-rendering");$(el).removeClass("alpaca-hidden");if(Alpaca.collectTiming){var t2=new Date().getTime();counters.increment(field.getFieldType(),(t2-t1));}renderedCallback(field);};if(!Alpaca.isEmpty(callback)){callback(field,function(){fin();});}else{field.render(function(){fin();});}field.callback=callback;field.renderedCallback=renderedCallback;}return field;},createFieldInstance:function(el,data,options,schema,view,connector,errorCallback){if(Alpaca.isValEmpty(options)){options={};}if(Alpaca.isValEmpty(schema)){schema={};}if(options&&Alpaca.isString(options)){var fieldType=options;options={};options.type=fieldType;}if(!options.type){if(!schema.type){schema.type=Alpaca.getSchemaType(data);}if(schema&&schema["enum"]){if(schema["enum"].length>3){options.type="select";}else{options.type="radio";}}else{options.type=Alpaca.defaultSchemaFieldMapping[schema.type];}if(schema.format&&Alpaca.defaultFormatFieldMapping[schema.format]){options.type=Alpaca.defaultFormatFieldMapping[schema.format];}}var fieldClass=Alpaca.getFieldClass(options.type);if(!fieldClass){errorCallback({"message":"Unable to find field class for type: "+options.type,"reason":"FIELD_INSTANTIATION_ERROR"});return null;}return new fieldClass(el,data,options,schema,view,connector,errorCallback);},parseJSON:function(text){if(!text){return null;}return $.parseJSON(text);},compile:function(cb,errorCallback){var self=this;var report={"errors":[],"count":0,"successCount":0};var finalCallback=function(normalizedViews){if(report.errors.length===0){for(var k in normalizedViews){self.normalizedViews[k]=normalizedViews[k];}}cb(report);};var viewCompileCallback=function(normalizedViews,err,view,compiledTemplateId,cacheKey,totalCalls){var viewId=view.id;report.count++;if(err){report.errors.push({"view":viewId,"template":compiledTemplateId,"err":err});}else{report.successCount++;view.compiledTemplates[compiledTemplateId]=cacheKey;}if(report.count==totalCalls){finalCallback(normalizedViews);}};var compileViewTemplate=function(normalizedViews,view,compiledTemplateId,template,totalCalls){var viewId=view.id;var mightBeUrl=(template&&template.indexOf("/")>-1);if(mightBeUrl){}else{if(template&&((template.indexOf("#")===0)||(template.indexOf(".")===0))){var x=$(template);type=$(x).attr("type");template=$(x).html();}}var type=null;if(Alpaca.isObject(template)){type=template.type;template=template.template;}if(!type){type="text/x-jquery-tmpl";}var engine=Alpaca.TemplateEngineRegistry.find(type);if(!engine){Alpaca.logError("Cannot find template engine for type: "+type);var err=new Error("Cannot find template engine for type: "+type);viewCompileCallback(normalizedViews,err,view,compiledTemplateId,cacheKey,totalCalls);}var cacheKey=viewId+"_"+compiledTemplateId;if(engine.isCached(cacheKey)){viewCompileCallback(normalizedViews,null,view,compiledTemplateId,cacheKey,totalCalls);}else{var previouslyCompiledTemplateCacheKey=view.compiledTemplates["view-"+template];if(previouslyCompiledTemplateCacheKey){template=Alpaca.TemplateCache[previouslyCompiledTemplateCacheKey];}engine.compile(cacheKey,template,function(err,data){viewCompileCallback(normalizedViews,err,view,compiledTemplateId,cacheKey,totalCalls);});}};var compileTemplates=function(normalizedViews){var functionArray=[];for(var viewId in normalizedViews){var view=normalizedViews[viewId];view.compiledTemplates={};if(view.templates){for(var templateId in view.templates){var template=view.templates[templateId];functionArray.push(function(normalizedViews,view,compiledTemplateId,template){return function(totalCalls){compileViewTemplate(normalizedViews,view,compiledTemplateId,template,totalCalls);};}(normalizedViews,view,"view-"+templateId,template));}}if(view.fields){for(var path in view.fields){if(view.fields[path].templates){for(var templateId in view.fields[path].templates){var template=view.fields[path].templates[templateId];functionArray.push(function(normalizedViews,view,compiledTemplateId,template){return function(totalCalls){compileViewTemplate(normalizedViews,view,compiledTemplateId,template,totalCalls);};}(normalizedViews,view,"field-"+path+"-"+templateId,template));}}}}if(view.layout&&view.layout.template){var template=view.layout.template;functionArray.push(function(normalizedViews,view,compiledTemplateId,template){return function(totalCalls){compileViewTemplate(normalizedViews,view,compiledTemplateId,template,totalCalls);};}(normalizedViews,view,"layoutTemplate",template));}if(view.globalTemplate){var template=view.globalTemplate;functionArray.push(function(normalizedViews,view,compiledTemplateId,template){return function(totalCalls){compileViewTemplate(normalizedViews,view,compiledTemplateId,template,totalCalls);};}(normalizedViews,view,"globalTemplate",template));}}var totalCalls=functionArray.length;for(var i=0;i<functionArray.length;i++){functionArray[i](totalCalls);}};var normalizeViews=function(){var normalizedViews={};var normalizedViewCount=0;if(!Alpaca.normalizedViews){Alpaca.normalizedViews={};}self.normalizedViews=Alpaca.normalizedViews;for(var viewId in self.views){if(!Alpaca.normalizedViews[viewId]){var normalizedView=new Alpaca.NormalizedView(viewId);if(normalizedView.normalize()){normalizedViews[viewId]=normalizedView;normalizedViewCount++;}else{return Alpaca.throwErrorWithCallback("View normalization failed, cannot initialize Alpaca.  Please check the error logs.",errorCallback);}}}if(normalizedViewCount>0){compileTemplates(normalizedViews);}else{finalCallback(normalizedViews);}};normalizeViews();},getTemplateDescriptor:function(view,templateId,field){var descriptor={};var _template;var _templateType;if(view.templates&&view.templates[templateId]){_template=view.templates[templateId];_templateType="view";}if(field&&field.path){var path=field.path;if(view&&view.fields&&view.fields[path]&&view.fields[path].templates&&view.fields[path].templates[templateId]){_template=view.fields[path].templates[templateId];_templateType="field";}}if(templateId=="globalTemplate"){_template="globalTemplate";_templateType="global";}if(templateId=="layoutTemplate"){_template="layoutTemplate";_templateType="layout";}descriptor.template={};descriptor.template.id=templateId;descriptor.template.type=_templateType;descriptor.template.value=_template;var type=null;var template=_template;if(Alpaca.isObject(template)){type=template.type;template=template.template;}if(!type){type="text/x-jquery-tmpl";}var engine=Alpaca.TemplateEngineRegistry.find(type);if(!engine){return Alpaca.throwDefaultError("Cannot find template engine for type: "+type);}descriptor.engine={};descriptor.engine.type=type;descriptor.engine.id=engine.id;var compiledTemplateId=null;if(_templateType=="view"){compiledTemplateId="view-"+templateId;}else{if(_templateType=="field"){compiledTemplateId="field-"+field.path+"-"+templateId;}else{if(_templateType=="layout"){compiledTemplateId="layoutTemplate";}else{if(_templateType=="global"){compiledTemplateId="globalTemplate";}}}}descriptor.compiledTemplateId=compiledTemplateId;var cacheKey=view.compiledTemplates[compiledTemplateId];if(!cacheKey||!engine.isCached(cacheKey)){return null;}descriptor.cache={};descriptor.cache.key=cacheKey;return descriptor;},tmpl:function(templateDescriptor,model){var html=Alpaca.tmplHtml(templateDescriptor,model);return Alpaca.safeDomParse(html);},tmplHtml:function(templateDescriptor,model){if(!model){model={};}var engineType=templateDescriptor.engine.type;var compiledTemplateId=templateDescriptor.compiledTemplateId;var engine=Alpaca.TemplateEngineRegistry.find(engineType);if(!engine){return Alpaca.throwDefaultError("Cannot find template engine for type: "+engineType);}var cacheKey=templateDescriptor.cache.key;var html=engine.execute(cacheKey,model,function(err){return Alpaca.throwDefaultError("The compiled template: "+compiledTemplateId+" failed to execute: "+JSON.stringify(err));});return html;}});Alpaca.DEBUG=0;Alpaca.INFO=1;Alpaca.WARN=2;Alpaca.ERROR=3;Alpaca.logLevel=Alpaca.WARN;Alpaca.logDebug=function(obj){Alpaca.log(Alpaca.DEBUG,obj);};Alpaca.logInfo=function(obj){Alpaca.log(Alpaca.INFO,obj);};Alpaca.logWarn=function(obj){Alpaca.log(Alpaca.WARN,obj);};Alpaca.logError=function(obj){Alpaca.log(Alpaca.ERROR,obj);};Alpaca.LOG_METHOD_MAP={0:"debug",1:"info",2:"warn",3:"error"};Alpaca.log=function(level,obj){if(Alpaca.logLevel<=level){var method=Alpaca.LOG_METHOD_MAP[level];if(typeof console!=="undefined"&&console[method]){if("debug"==method){console.debug(obj);}else{if("info"==method){console.info(obj);}else{if("warn"==method){console.warn(obj);}else{if("error"==method){console.error(obj);}else{console.log(obj);}}}}}}};Alpaca.checked=function(el,value){return Alpaca.attrProp(el,"checked",value);};Alpaca.attrProp=function(el,name,value){if(!(typeof(value)==="undefined")){if($(el).prop){$(el).prop(name,value);}else{if(value){$(el).attr(name,value);}else{$(el).removeAttr(name);}}}if($(el).prop){return $(el).prop(name);}return $(el).attr(name);};Alpaca.loadRefSchemaOptions=function(topField,referenceId,callback){if(!referenceId){callback();}else{if(referenceId=="#"){callback(topField.schema,topField.options);}else{if(referenceId.indexOf("#/")==0){var defId=referenceId.substring(2);var tokens=defId.split("/");var defSchema=topField.schema;for(var i=0;i<tokens.length;i++){var token=tokens[i];if(defSchema[token]){defSchema=defSchema[token];}else{if(defSchema.properties&&defSchema.properties[token]){defSchema=defSchema.properties[token];}else{if(defSchema.definitions&&defSchema.definitions[token]){defSchema=defSchema.definitions[token];}else{defSchema=null;break;}}}}var defOptions=topField.options;for(var i=0;i<tokens.length;i++){var token=tokens[i];if(defOptions[token]){defOptions=defOptions[token];}else{if(defOptions.fields&&defOptions.fields[token]){defOptions=defOptions.fields[token];}else{if(defOptions.definitions&&defOptions.definitions[token]){defOptions=defOptions.definitions[token];}else{defOptions=null;break;}}}}callback(defSchema,defOptions);}else{if(referenceId.indexOf("#")==0){var resolution=Alpaca.resolveReference(topField.schema,topField.options,referenceId);if(resolution){callback(resolution.schema,resolution.options);}else{callback();}}else{var referenceParts=Alpaca.pathParts(referenceId);topField.connector.loadReferenceSchema(referenceParts.path,function(schema){topField.connector.loadReferenceOptions(referenceParts.path,function(options){if(referenceParts.id){var resolution=Alpaca.resolveReference(schema,options,referenceParts.id);if(resolution){schema=resolution.schema;options=resolution.options;}}callback(schema,options);},function(){callback(schema);});},function(){callback();});}}}}};Alpaca.DEFAULT_ERROR_CALLBACK=function(error){if(error&&error.message){Alpaca.logError(error.message);throw new Error("Alpaca caught an error with the default error handler: "+error.message);}};Alpaca.defaultErrorCallback=Alpaca.DEFAULT_ERROR_CALLBACK;Alpaca.throwDefaultError=function(message){if(message&&Alpaca.isObject(message)){message=JSON.stringify(message);}var err={"message":message};Alpaca.defaultErrorCallback(err);};Alpaca.throwErrorWithCallback=function(message,errorCallback){if(message&&Alpaca.isObject(message)){message=JSON.stringify(message);}var err={"message":message};if(errorCallback){errorCallback(err);}else{Alpaca.defaultErrorCallback(err);}};Alpaca.resolveReference=function(schema,options,referenceId){if(schema.id==referenceId){var result={};if(schema){result.schema=schema;}if(options){result.options=options;}return result;}else{if(schema&&schema.properties){for(var propertyId in schema.properties){var subSchema=schema.properties[propertyId];var subOptions=null;if(options&&options.fields&&options.fields[propertyId]){subOptions=options.fields[propertyId];}var x=Alpaca.resolveReference(subSchema,subOptions,referenceId);if(x){return x;}}}}return null;};$.alpaca=window.Alpaca=Alpaca;$.fn.alpaca=function(){var args=Alpaca.makeArray(arguments);var newArgs=[].concat(this,args);return Alpaca.apply(this,newArgs);};$.fn.outerHTML=function(nocloning){if(nocloning){return $("<div></div>").append(this).html();}else{return $("<div></div>").append(this.clone()).html();}};$.fn.swapWith=function(to){return this.each(function(){var copy_to=$(to).clone();var copy_from=$(this).clone();$(to).replaceWith(copy_from);$(this).replaceWith(copy_to);});};$.fn.attrProp=function(name,value){return Alpaca.attrProp($(this),name,value);};$.event.special.destroyed={remove:function(o){if(o.handler){o.handler();}}};Alpaca.CountersMap={};Alpaca.Counters=function(name){if(Alpaca.Counters[name]){return Alpaca.Counters[name];}var types={};var all={count:0,total:0,avg:0,touches:0};var counters={increment:function(type,amount){if(!types[type]){types[type]={count:0,total:0,avg:0,touches:0};}types[type].count++;types[type].total+=amount;types[type].avg=types[type].total/types[type].count;types[type].touches++;all.count++;all.total+=amount;all.avg=all.total/all.count;all.touches++;},read:function(type){return types[type];},each:function(f){for(var type in types){f(type,types[type]);}},all:function(){return all;}};Alpaca.Counters[name]=counters;return counters;};Alpaca.collectTiming=false;Alpaca.pathParts=function(resource){if(typeof(resource)!="string"){return resource;}var resourcePath=resource;var resourceId=null;var i=resourcePath.indexOf("#");if(i>-1){resourceId=resourcePath.substring(i+1);resourcePath=resourcePath.substring(0,i);}if(Alpaca.endsWith(resourcePath,"/")){resourcePath=resourcePath.substring(0,resourcePath.length-1);}var parts={};parts.path=resourcePath;if(resourceId){parts.id=resourceId;}return parts;};Alpaca.resolveField=function(containerField,propertyIdOrReferenceId){var resolvedField=null;if(typeof(propertyIdOrReferenceId)=="string"){if(propertyIdOrReferenceId.indexOf("#/")==0&&propertyId.length>2){}else{if(propertyIdOrReferenceId=="#"||propertyIdOrReferenceId=="#/"){resolvedField=containerField;}else{if(propertyIdOrReferenceId.indexOf("#")==0){var topField=containerField;while(topField.parent){topField=topField.parent;}var referenceId=propertyIdOrReferenceId.substring(1);resolvedField=Alpaca.resolveFieldByReference(topField,referenceId);}else{resolvedField=containerField.childrenByPropertyId[propertyIdOrReferenceId];}}}}return resolvedField;};Alpaca.resolveFieldByReference=function(field,referenceId){if(field.schema&&field.schema.id==referenceId){return field;}else{if(field.children&&field.children.length>0){for(var i=0;i<field.children.length;i++){var child=field.children[i];var resolved=Alpaca.resolveFieldByReference(child,referenceId);if(resolved){return resolved;}}}}return null;};Alpaca.anyEquality=function(first,second){var values={};if(typeof(first)=="object"||typeof(first)=="array"){for(var k in first){values[first[k]]=true;}}else{values[first]=true;}var result=false;if(typeof(second)=="object"||typeof(second)=="array"){for(var k in second){var v=second[k];if(values[v]){result=true;break;}}}else{result=values[second];}return result;};Alpaca.series=function(funcs,callback){async.series(funcs,function(){callback();});};Alpaca.parallel=function(funcs,callback){async.parallel(funcs,function(){callback();});};Alpaca.nextTick=function(f){async.nextTick(function(){f();});};Alpaca.compileValidationContext=function(field){var chain=[];var parent=field;do{if(!parent.isValidationParticipant()){parent=null;}if(parent){chain.push(parent);}if(parent){parent=parent.parent;}}while(parent);chain.reverse();var context=[];var f=function(chain,context){if(!chain||chain.length==0){return;}var current=chain[0];var entry={};entry.id=current.getId();entry.field=current;entry.path=current.path;var beforeStatus=current.isValid();if(current.isContainer()){beforeStatus=current.isValid(true);}entry.before=beforeStatus;if(chain.length>1){var childChain=chain.slice(0);childChain.shift();f(childChain,context);}var previouslyValidated=current._previouslyValidated;current.validate();current._validateCustomValidator(function(){var afterStatus=current.isValid();if(current.isContainer()){afterStatus=current.isValid(true);}entry.after=afterStatus;entry.validated=false;entry.invalidated=false;if(!beforeStatus&&afterStatus){entry.validated=true;}else{if(beforeStatus&&!afterStatus){entry.invalidated=true;}else{if(!previouslyValidated&&!afterStatus){entry.invalidated=true;}}}entry.container=current.isContainer();entry.valid=entry.after;context.push(entry);});};f(chain,context);return context;};Alpaca.updateValidationStateForContext=function(context){for(var i=0;i<context.length;i++){var entry=context[i];var field=entry.field;field.getStyleInjection("removeError",field.getEl());field.getEl().removeClass("alpaca-field-invalid alpaca-field-invalid-hidden alpaca-field-valid");var showMessages=false;if(entry.valid){field.getEl().addClass("alpaca-field-valid");}else{if(!field.options.readonly){if(!field.hideInitValidationError){field.getStyleInjection("error",field.getEl());field.getEl().addClass("alpaca-field-invalid");showMessages=true;}else{field.getEl().addClass("alpaca-field-invalid-hidden");}}else{Alpaca.logWarn("The field (id="+field.getId()+", title="+field.getTitle()+", path="+field.path+") is invalid and also read-only");}}if(entry.validated){Alpaca.later(25,this,function(){field.trigger("validated");});}else{if(entry.invalidated){Alpaca.later(25,this,function(){field.trigger("invalidated");});}}if(field.options.showMessages){if(!field.initializing){if(!field.options.readonly){var messages=[];for(var messageId in field.validation){if(!field.validation[messageId]["status"]){messages.push(field.validation[messageId]["message"]);}}field.displayMessage(messages,field.valid);}}}if(showMessages){field.showHiddenMessages();}}};Alpaca.fieldApplyChildren=function(field,fn){var f=function(field,fn){if(field.children&&field.children.length>0){for(var i=0;i<field.children.length;i++){fn(field.children[i]);}}};f(field,fn);};(function(){var async={};var root,previous_async;root=this;if(root!=null){previous_async=root.async;}async.noConflict=function(){root.async=previous_async;return async;};function only_once(fn){var called=false;return function(){if(called){throw new Error("Callback was already called.");}called=true;fn.apply(root,arguments);};}var _each=function(arr,iterator){if(arr.forEach){return arr.forEach(iterator);}for(var i=0;i<arr.length;i+=1){iterator(arr[i],i,arr);}};var _map=function(arr,iterator){if(arr.map){return arr.map(iterator);}var results=[];_each(arr,function(x,i,a){results.push(iterator(x,i,a));});return results;};var _reduce=function(arr,iterator,memo){if(arr.reduce){return arr.reduce(iterator,memo);}_each(arr,function(x,i,a){memo=iterator(memo,x,i,a);});return memo;};var _keys=function(obj){if(Object.keys){return Object.keys(obj);}var keys=[];for(var k in obj){if(obj.hasOwnProperty(k)){keys.push(k);}}return keys;};if(typeof process==="undefined"||!(process.nextTick)){if(typeof setImmediate==="function"){async.nextTick=function(fn){setImmediate(fn);};async.setImmediate=async.nextTick;}else{async.nextTick=function(fn){setTimeout(fn,0);};async.setImmediate=async.nextTick;}}else{async.nextTick=process.nextTick;if(typeof setImmediate!=="undefined"){async.setImmediate=function(fn){setImmediate(fn);};}else{async.setImmediate=async.nextTick;}}async.each=function(arr,iterator,callback){callback=callback||function(){};if(!arr.length){return callback();}var completed=0;_each(arr,function(x){iterator(x,only_once(function(err){if(err){callback(err);callback=function(){};}else{completed+=1;if(completed>=arr.length){callback(null);}}}));});};async.forEach=async.each;async.eachSeries=function(arr,iterator,callback){callback=callback||function(){};if(!arr.length){return callback();}var completed=0;var iterate=function(){iterator(arr[completed],function(err){if(err){callback(err);callback=function(){};}else{completed+=1;if(completed>=arr.length){callback(null);}else{iterate();}}});};iterate();};async.forEachSeries=async.eachSeries;async.eachLimit=function(arr,limit,iterator,callback){var fn=_eachLimit(limit);fn.apply(null,[arr,iterator,callback]);};async.forEachLimit=async.eachLimit;var _eachLimit=function(limit){return function(arr,iterator,callback){callback=callback||function(){};if(!arr.length||limit<=0){return callback();}var completed=0;var started=0;var running=0;(function replenish(){if(completed>=arr.length){return callback();}while(running<limit&&started<arr.length){started+=1;running+=1;iterator(arr[started-1],function(err){if(err){callback(err);callback=function(){};}else{completed+=1;running-=1;if(completed>=arr.length){callback();}else{replenish();}}});}})();};};var doParallel=function(fn){return function(){var args=Array.prototype.slice.call(arguments);return fn.apply(null,[async.each].concat(args));};};var doParallelLimit=function(limit,fn){return function(){var args=Array.prototype.slice.call(arguments);return fn.apply(null,[_eachLimit(limit)].concat(args));};};var doSeries=function(fn){return function(){var args=Array.prototype.slice.call(arguments);return fn.apply(null,[async.eachSeries].concat(args));};};var _asyncMap=function(eachfn,arr,iterator,callback){var results=[];arr=_map(arr,function(x,i){return{index:i,value:x};});eachfn(arr,function(x,callback){iterator(x.value,function(err,v){results[x.index]=v;callback(err);});},function(err){callback(err,results);});};async.map=doParallel(_asyncMap);async.mapSeries=doSeries(_asyncMap);async.mapLimit=function(arr,limit,iterator,callback){return _mapLimit(limit)(arr,iterator,callback);};var _mapLimit=function(limit){return doParallelLimit(limit,_asyncMap);};async.reduce=function(arr,memo,iterator,callback){async.eachSeries(arr,function(x,callback){iterator(memo,x,function(err,v){memo=v;callback(err);});},function(err){callback(err,memo);});};async.inject=async.reduce;async.foldl=async.reduce;async.reduceRight=function(arr,memo,iterator,callback){var reversed=_map(arr,function(x){return x;}).reverse();async.reduce(reversed,memo,iterator,callback);};async.foldr=async.reduceRight;var _filter=function(eachfn,arr,iterator,callback){var results=[];arr=_map(arr,function(x,i){return{index:i,value:x};});eachfn(arr,function(x,callback){iterator(x.value,function(v){if(v){results.push(x);}callback();});},function(err){callback(_map(results.sort(function(a,b){return a.index-b.index;}),function(x){return x.value;}));});};async.filter=doParallel(_filter);async.filterSeries=doSeries(_filter);async.select=async.filter;async.selectSeries=async.filterSeries;var _reject=function(eachfn,arr,iterator,callback){var results=[];arr=_map(arr,function(x,i){return{index:i,value:x};});eachfn(arr,function(x,callback){iterator(x.value,function(v){if(!v){results.push(x);}callback();});},function(err){callback(_map(results.sort(function(a,b){return a.index-b.index;}),function(x){return x.value;}));});};async.reject=doParallel(_reject);async.rejectSeries=doSeries(_reject);var _detect=function(eachfn,arr,iterator,main_callback){eachfn(arr,function(x,callback){iterator(x,function(result){if(result){main_callback(x);main_callback=function(){};}else{callback();}});},function(err){main_callback();});};async.detect=doParallel(_detect);async.detectSeries=doSeries(_detect);async.some=function(arr,iterator,main_callback){async.each(arr,function(x,callback){iterator(x,function(v){if(v){main_callback(true);main_callback=function(){};}callback();});},function(err){main_callback(false);});};async.any=async.some;async.every=function(arr,iterator,main_callback){async.each(arr,function(x,callback){iterator(x,function(v){if(!v){main_callback(false);main_callback=function(){};}callback();});},function(err){main_callback(true);});};async.all=async.every;async.sortBy=function(arr,iterator,callback){async.map(arr,function(x,callback){iterator(x,function(err,criteria){if(err){callback(err);}else{callback(null,{value:x,criteria:criteria});}});},function(err,results){if(err){return callback(err);}else{var fn=function(left,right){var a=left.criteria,b=right.criteria;return a<b?-1:a>b?1:0;};callback(null,_map(results.sort(fn),function(x){return x.value;}));}});};async.auto=function(tasks,callback){callback=callback||function(){};var keys=_keys(tasks);if(!keys.length){return callback(null);}var results={};var listeners=[];var addListener=function(fn){listeners.unshift(fn);};var removeListener=function(fn){for(var i=0;i<listeners.length;i+=1){if(listeners[i]===fn){listeners.splice(i,1);return;}}};var taskComplete=function(){_each(listeners.slice(0),function(fn){fn();});};addListener(function(){if(_keys(results).length===keys.length){callback(null,results);callback=function(){};}});_each(keys,function(k){var task=(tasks[k] instanceof Function)?[tasks[k]]:tasks[k];var taskCallback=function(err){var args=Array.prototype.slice.call(arguments,1);if(args.length<=1){args=args[0];}if(err){var safeResults={};_each(_keys(results),function(rkey){safeResults[rkey]=results[rkey];});safeResults[k]=args;callback(err,safeResults);callback=function(){};}else{results[k]=args;async.setImmediate(taskComplete);}};var requires=task.slice(0,Math.abs(task.length-1))||[];var ready=function(){return _reduce(requires,function(a,x){return(a&&results.hasOwnProperty(x));},true)&&!results.hasOwnProperty(k);};if(ready()){task[task.length-1](taskCallback,results);}else{var listener=function(){if(ready()){removeListener(listener);task[task.length-1](taskCallback,results);}};addListener(listener);}});};async.waterfall=function(tasks,callback){callback=callback||function(){};if(tasks.constructor!==Array){var err=new Error("First argument to waterfall must be an array of functions");return callback(err);}if(!tasks.length){return callback();}var wrapIterator=function(iterator){return function(err){if(err){callback.apply(null,arguments);callback=function(){};}else{var args=Array.prototype.slice.call(arguments,1);var next=iterator.next();if(next){args.push(wrapIterator(next));}else{args.push(callback);}async.setImmediate(function(){iterator.apply(null,args);});}};};wrapIterator(async.iterator(tasks))();};var _parallel=function(eachfn,tasks,callback){callback=callback||function(){};if(tasks.constructor===Array){eachfn.map(tasks,function(fn,callback){if(fn){fn(function(err){var args=Array.prototype.slice.call(arguments,1);if(args.length<=1){args=args[0];}callback.call(null,err,args);});}},callback);}else{var results={};eachfn.each(_keys(tasks),function(k,callback){tasks[k](function(err){var args=Array.prototype.slice.call(arguments,1);if(args.length<=1){args=args[0];}results[k]=args;callback(err);});},function(err){callback(err,results);});}};async.parallel=function(tasks,callback){_parallel({map:async.map,each:async.each},tasks,callback);};async.parallelLimit=function(tasks,limit,callback){_parallel({map:_mapLimit(limit),each:_eachLimit(limit)},tasks,callback);};async.series=function(tasks,callback){callback=callback||function(){};if(tasks.constructor===Array){async.mapSeries(tasks,function(fn,callback){if(fn){fn(function(err){var args=Array.prototype.slice.call(arguments,1);if(args.length<=1){args=args[0];}callback.call(null,err,args);});}},callback);}else{var results={};async.eachSeries(_keys(tasks),function(k,callback){tasks[k](function(err){var args=Array.prototype.slice.call(arguments,1);if(args.length<=1){args=args[0];}results[k]=args;callback(err);});},function(err){callback(err,results);});}};async.iterator=function(tasks){var makeCallback=function(index){var fn=function(){if(tasks.length){tasks[index].apply(null,arguments);}return fn.next();};fn.next=function(){return(index<tasks.length-1)?makeCallback(index+1):null;};return fn;};return makeCallback(0);};async.apply=function(fn){var args=Array.prototype.slice.call(arguments,1);return function(){return fn.apply(null,args.concat(Array.prototype.slice.call(arguments)));};};var _concat=function(eachfn,arr,fn,callback){var r=[];eachfn(arr,function(x,cb){fn(x,function(err,y){r=r.concat(y||[]);cb(err);});},function(err){callback(err,r);});};async.concat=doParallel(_concat);async.concatSeries=doSeries(_concat);async.whilst=function(test,iterator,callback){if(test()){iterator(function(err){if(err){return callback(err);}async.whilst(test,iterator,callback);});}else{callback();}};async.doWhilst=function(iterator,test,callback){iterator(function(err){if(err){return callback(err);}if(test()){async.doWhilst(iterator,test,callback);}else{callback();}});};async.until=function(test,iterator,callback){if(!test()){iterator(function(err){if(err){return callback(err);}async.until(test,iterator,callback);});}else{callback();}};async.doUntil=function(iterator,test,callback){iterator(function(err){if(err){return callback(err);}if(!test()){async.doUntil(iterator,test,callback);}else{callback();}});};async.queue=function(worker,concurrency){if(concurrency===undefined){concurrency=1;}function _insert(q,data,pos,callback){if(data.constructor!==Array){data=[data];}_each(data,function(task){var item={data:task,callback:typeof callback==="function"?callback:null};if(pos){q.tasks.unshift(item);}else{q.tasks.push(item);}if(q.saturated&&q.tasks.length===concurrency){q.saturated();}async.setImmediate(q.process);});}var workers=0;var q={tasks:[],concurrency:concurrency,saturated:null,empty:null,drain:null,push:function(data,callback){_insert(q,data,false,callback);},unshift:function(data,callback){_insert(q,data,true,callback);},process:function(){if(workers<q.concurrency&&q.tasks.length){var task=q.tasks.shift();if(q.empty&&q.tasks.length===0){q.empty();}workers+=1;var next=function(){workers-=1;if(task.callback){task.callback.apply(task,arguments);}if(q.drain&&q.tasks.length+workers===0){q.drain();}q.process();};var cb=only_once(next);worker(task.data,cb);}},length:function(){return q.tasks.length;},running:function(){return workers;}};return q;};async.cargo=function(worker,payload){var working=false,tasks=[];var cargo={tasks:tasks,payload:payload,saturated:null,empty:null,drain:null,push:function(data,callback){if(data.constructor!==Array){data=[data];}_each(data,function(task){tasks.push({data:task,callback:typeof callback==="function"?callback:null});if(cargo.saturated&&tasks.length===payload){cargo.saturated();}});async.setImmediate(cargo.process);},process:function process(){if(working){return;}if(tasks.length===0){if(cargo.drain){cargo.drain();}return;}var ts=typeof payload==="number"?tasks.splice(0,payload):tasks.splice(0);var ds=_map(ts,function(task){return task.data;});if(cargo.empty){cargo.empty();}working=true;worker(ds,function(){working=false;var args=arguments;_each(ts,function(data){if(data.callback){data.callback.apply(null,args);}});process();});},length:function(){return tasks.length;},running:function(){return working;}};return cargo;};var _console_fn=function(name){return function(fn){var args=Array.prototype.slice.call(arguments,1);fn.apply(null,args.concat([function(err){var args=Array.prototype.slice.call(arguments,1);if(typeof console!=="undefined"){if(err){if(console.error){console.error(err);}}else{if(console[name]){_each(args,function(x){console[name](x);});}}}}]));};};async.log=_console_fn("log");async.dir=_console_fn("dir");async.memoize=function(fn,hasher){var memo={};var queues={};hasher=hasher||function(x){return x;};var memoized=function(){var args=Array.prototype.slice.call(arguments);var callback=args.pop();var key=hasher.apply(null,args);if(key in memo){callback.apply(null,memo[key]);}else{if(key in queues){queues[key].push(callback);}else{queues[key]=[callback];fn.apply(null,args.concat([function(){memo[key]=arguments;var q=queues[key];delete queues[key];for(var i=0,l=q.length;i<l;i++){q[i].apply(null,arguments);}}]));}}};memoized.memo=memo;memoized.unmemoized=fn;return memoized;};async.unmemoize=function(fn){return function(){return(fn.unmemoized||fn).apply(null,arguments);};};async.times=function(count,iterator,callback){var counter=[];for(var i=0;i<count;i++){counter.push(i);}return async.map(counter,iterator,callback);};async.timesSeries=function(count,iterator,callback){var counter=[];for(var i=0;i<count;i++){counter.push(i);}return async.mapSeries(counter,iterator,callback);};async.compose=function(){var fns=Array.prototype.reverse.call(arguments);return function(){var that=this;var args=Array.prototype.slice.call(arguments);var callback=args.pop();async.reduce(fns,args,function(newargs,fn,cb){fn.apply(that,newargs.concat([function(){var err=arguments[0];var nextargs=Array.prototype.slice.call(arguments,1);cb(err,nextargs);}]));},function(err,results){callback.apply(that,[err].concat(results));});};};var _applyEach=function(eachfn,fns){var go=function(){var that=this;var args=Array.prototype.slice.call(arguments);var callback=args.pop();return eachfn(fns,function(fn,cb){fn.apply(that,args.concat([cb]));},callback);};if(arguments.length>2){var args=Array.prototype.slice.call(arguments,2);return go.apply(this,args);}else{return go;}};async.applyEach=doParallel(_applyEach);async.applyEachSeries=doSeries(_applyEach);async.forever=function(fn,callback){function next(err){if(err){if(callback){return callback(err);}throw err;}fn(next);}next();};root.async=async;}());})(jQuery);(function(){Alpaca.TemplateEngineRegistry=function(){var registry={};return{register:function(id,engine){registry[id]=engine;},find:function(idOrType){var engine=null;if(registry[idOrType]){engine=registry[idOrType];}else{for(var id in registry){var supportedMimetypes=registry[id].supportedMimetypes();for(var i=0;i<supportedMimetypes.length;i++){if(idOrType.toLowerCase()==supportedMimetypes[i].toLowerCase()){engine=registry[id];break;}}}}return engine;},ids:function(){var ids=[];for(var id in registry){ids.push(id);}return ids;}};}();})();(function($){if(typeof(Alpaca.TemplateCache)=="undefined"){Alpaca.TemplateCache={};}Alpaca.AbstractTemplateEngine=Base.extend({constructor:function(id){this.base();this.id=id;this.cleanMarkup=function(html){var dom=Alpaca.safeDomParse(html);if($(dom).length==1){if($(dom)[0].nodeName.toLowerCase()=="script"){html=$(dom).html();}}return html;};},compile:function(cacheKey,template,callback){var self=this;var type="html";if(Alpaca.isString(template)){if(template.indexOf("./")===0||template.indexOf("/")===0||template.indexOf("../")===0){type="uri";}else{if(template.indexOf("#")===0||template.indexOf(".")===0||template.indexOf("[")===0){type="selector";}}}else{}if(type=="selector"){self._compile(cacheKey,template,callback);}else{if(type=="uri"){var fileExtension=self.fileExtension();var url=template;if(url.indexOf("."+fileExtension)===-1){url+="."+fileExtension;}$.ajax({"url":url,"dataType":"html","success":function(html){html=self.cleanMarkup(html);self._compile(cacheKey,html,callback);},"failure":function(http){callback(http,null);}});}else{if(type=="html"){var html=template;if(html instanceof jQuery){html=Alpaca.safeDomParse(template).outerHTML();}self._compile(cacheKey,html,callback);}else{callback(new Error("Template engine cannot determine how to handle type: "+type));}}}},_compile:function(cacheKey,html,callback){if(Alpaca.isEmpty(html)){html="";}html=Alpaca.trim(html);if(html.toLowerCase().indexOf("<script")===0){}else{html="<script type='"+this.supportedMimetypes()[0]+"'>"+html+"<\/script>";}Alpaca.logDebug("Compiling template: "+this.id+", cacheKey: "+cacheKey+", template: "+html);this.doCompile(cacheKey,html,callback);},doCompile:function(cacheKey,html,callback){},execute:function(cacheKey,model,callback){Alpaca.logDebug("Executing template for cache key: "+cacheKey);var dom=this.doExecute(cacheKey,model,callback);var strip_script=function(dom){if($(dom).length==1){if($(dom)[0].nodeName.toLowerCase()=="script"){return $(dom).html();}}return html;};dom=strip_script(dom);return dom;},doExecute:function(cacheKey,model,callback){},fileExtension:function(){return"html";},supportedMimetypes:function(){return[];},isCached:function(cacheKey){}});})(jQuery);(function($){Alpaca.JQueryTemplateEngine=Alpaca.AbstractTemplateEngine.extend({fileExtension:function(){return"html";},supportedMimetypes:function(){return["text/x-jquery-template","text/x-jquery-tmpl"];},doCompile:function(cacheKey,html,callback){try{$.template(cacheKey,html);}catch(e){callback(e);return;}Alpaca.TemplateCache[cacheKey]=html;callback();},doExecute:function(cacheKey,model,callback){var self=this;var html=null;try{var dom=$.tmpl(cacheKey,model);var _html=dom.outerHTML();var i=-1;do{i=_html.indexOf("_tmplitem=");if(i>-1){var j=_html.indexOf(" ",i);if(j==-1){j=_html.indexOf(">",i);}if(j==-1){callback({"message":"Should have found closing whitespace or '>' for _tmplitem attribute"});return;}_html=_html.substring(0,i)+_html.substring(j);}}while(i>-1);dom=Alpaca.safeDomParse(_html);html=dom;}catch(e){callback({"message":e.message});return null;}return html;},isCached:function(cacheKey){return(Alpaca.TemplateCache[cacheKey]?true:false);}});Alpaca.TemplateEngineRegistry.register("tmpl",new Alpaca.JQueryTemplateEngine("tmpl"));})(jQuery);(function($){Alpaca.EJSTemplateEngine=Alpaca.AbstractTemplateEngine.extend({fileExtension:function(){return"ejs";},supportedMimetypes:function(){return["text/x-ejs-template","text/x-ejs-tmpl"];},doCompile:function(cacheKey,html,callback){var ejs=null;try{ejs=new EJS({name:cacheKey,text:html});}catch(e){callback(e);return;}Alpaca.TemplateCache[cacheKey]=ejs;callback();},doExecute:function(cacheKey,model,callback){var ejs=Alpaca.TemplateCache[cacheKey];var html=null;try{html=ejs.render(model);}catch(e){callback(e);return null;}return html;},isCached:function(cacheKey){return(Alpaca.TemplateCache[cacheKey]?true:false);}});Alpaca.TemplateEngineRegistry.register("ejs",new Alpaca.EJSTemplateEngine("ejs"));})(jQuery);(function($){Alpaca.HandlebarsTemplateEngine=Alpaca.AbstractTemplateEngine.extend({fileExtension:function(){return"html";},supportedMimetypes:function(){return["text/x-handlebars-template","text/x-handlebars-tmpl"];},doCompile:function(cacheKey,html,callback){var template=null;try{template=Handlebars.compile(html);}catch(e){callback(e);return;}Alpaca.TemplateCache[cacheKey]=template;callback();},doExecute:function(cacheKey,model,callback){var template=Alpaca.TemplateCache[cacheKey];var html=null;try{html=template(model);}catch(e){callback(e);return null;}return html;},isCached:function(cacheKey){return(Alpaca.TemplateCache[cacheKey]?true:false);}});Alpaca.TemplateEngineRegistry.register("handlebars",new Alpaca.HandlebarsTemplateEngine("handlebars"));})(jQuery);(function($){var Alpaca=$.alpaca;Alpaca.styleInjections={};Alpaca.registerView({"id":"VIEW_BASE","title":"Abstract base view","description":"Foundation view which provides an abstract view from which all other views extend.","messages":{"countries":{"afg":"Afghanistan","ala":"Aland Islands","alb":"Albania","dza":"Algeria","asm":"American Samoa","and":"Andorra","ago":"Angola","aia":"Anguilla","ata":"Antarctica","atg":"Antigua and Barbuda","arg":"Argentina","arm":"Armenia","abw":"Aruba","aus":"Australia","aut":"Austria","aze":"Azerbaijan","bhs":"Bahamas","bhr":"Bahrain","bgd":"Bangladesh","brb":"Barbados","blr":"Belarus","bel":"Belgium","blz":"Belize","ben":"Benin","bmu":"Bermuda","btn":"Bhutan","bol":"Bolivia","bih":"Bosnia and Herzegovina","bwa":"Botswana","bvt":"Bouvet Island","bra":"Brazil","iot":"British Indian Ocean Territory","brn":"Brunei Darussalam","bgr":"Bulgaria","bfa":"Burkina Faso","bdi":"Burundi","khm":"Cambodia","cmr":"Cameroon","can":"Canada","cpv":"Cape Verde","cym":"Cayman Islands","caf":"Central African Republic","tcd":"Chad","chl":"Chile","chn":"China","cxr":"Christmas Island","cck":"Cocos (Keeling), Islands","col":"Colombia","com":"Comoros","cog":"Congo","cod":"Congo, the Democratic Republic of the","cok":"Cook Islands","cri":"Costa Rica","hrv":"Croatia","cub":"Cuba","cyp":"Cyprus","cze":"Czech Republic","civ":"Cote d'Ivoire","dnk":"Denmark","dji":"Djibouti","dma":"Dominica","dom":"Dominican Republic","ecu":"Ecuador","egy":"Egypt","slv":"El Salvador","gnq":"Equatorial Guinea","eri":"Eritrea","est":"Estonia","eth":"Ethiopia","flk":"Falkland Islands (Malvinas),","fro":"Faroe Islands","fji":"Fiji","fin":"Finland","fra":"France","guf":"French Guiana","pyf":"French Polynesia","atf":"French Southern Territories","gab":"Gabon","gmb":"Gambia","geo":"Georgia","deu":"Germany","gha":"Ghana","gib":"Gibraltar","grc":"Greece","grl":"Greenland","grd":"Grenada","glp":"Guadeloupe","gum":"Guam","gtm":"Guatemala","ggy":"Guernsey","gin":"Guinea","gnb":"Guinea-Bissau","guy":"Guyana","hti":"Haiti","hmd":"Heard Island and McDonald Islands","vat":"Holy See (Vatican City State),","hnd":"Honduras","hkg":"Hong Kong","hun":"Hungary","isl":"Iceland","ind":"India","idn":"Indonesia","irn":"Iran, Islamic Republic of","irq":"Iraq","irl":"Ireland","imn":"Isle of Man","isr":"Israel","ita":"Italy","jam":"Jamaica","jpn":"Japan","jey":"Jersey","jor":"Jordan","kaz":"Kazakhstan","ken":"Kenya","kir":"Kiribati","prk":"Korea, Democratic People's Republic of","kor":"Korea, Republic of","kwt":"Kuwait","kgz":"Kyrgyzstan","lao":"Lao People's Democratic Republic","lva":"Latvia","lbn":"Lebanon","lso":"Lesotho","lbr":"Liberia","lby":"Libyan Arab Jamahiriya","lie":"Liechtenstein","ltu":"Lithuania","lux":"Luxembourg","mac":"Macao","mkd":"Macedonia, the former Yugoslav Republic of","mdg":"Madagascar","mwi":"Malawi","mys":"Malaysia","mdv":"Maldives","mli":"Mali","mlt":"Malta","mhl":"Marshall Islands","mtq":"Martinique","mrt":"Mauritania","mus":"Mauritius","myt":"Mayotte","mex":"Mexico","fsm":"Micronesia, Federated States of","mda":"Moldova, Republic of","mco":"Monaco","mng":"Mongolia","mne":"Montenegro","msr":"Montserrat","mar":"Morocco","moz":"Mozambique","mmr":"Myanmar","nam":"Namibia","nru":"Nauru","npl":"Nepal","nld":"Netherlands","ant":"Netherlands Antilles","ncl":"New Caledonia","nzl":"New Zealand","nic":"Nicaragua","ner":"Niger","nga":"Nigeria","niu":"Niue","nfk":"Norfolk Island","mnp":"Northern Mariana Islands","nor":"Norway","omn":"Oman","pak":"Pakistan","plw":"Palau","pse":"Palestinian Territory, Occupied","pan":"Panama","png":"Papua New Guinea","pry":"Paraguay","per":"Peru","phl":"Philippines","pcn":"Pitcairn","pol":"Poland","prt":"Portugal","pri":"Puerto Rico","qat":"Qatar","rou":"Romania","rus":"Russian Federation","rwa":"Rwanda","reu":"Reunion","blm":"Saint Barthelemy","shn":"Saint Helena","kna":"Saint Kitts and Nevis","lca":"Saint Lucia","maf":"Saint Martin (French part)","spm":"Saint Pierre and Miquelon","vct":"Saint Vincent and the Grenadines","wsm":"Samoa","smr":"San Marino","stp":"Sao Tome and Principe","sau":"Saudi Arabia","sen":"Senegal","srb":"Serbia","syc":"Seychelles","sle":"Sierra Leone","sgp":"Singapore","svk":"Slovakia","svn":"Slovenia","slb":"Solomon Islands","som":"Somalia","zaf":"South Africa","sgs":"South Georgia and the South Sandwich Islands","esp":"Spain","lka":"Sri Lanka","sdn":"Sudan","sur":"Suriname","sjm":"Svalbard and Jan Mayen","swz":"Swaziland","swe":"Sweden","che":"Switzerland","syr":"Syrian Arab Republic","twn":"Taiwan, Province of China","tjk":"Tajikistan","tza":"Tanzania, United Republic of","tha":"Thailand","tls":"Timor-Leste","tgo":"Togo","tkl":"Tokelau","ton":"Tonga","tto":"Trinidad and Tobago","tun":"Tunisia","tur":"Turkey","tkm":"Turkmenistan","tca":"Turks and Caicos Islands","tuv":"Tuvalu","uga":"Uganda","ukr":"Ukraine","are":"United Arab Emirates","gbr":"United Kingdom","usa":"United States","umi":"United States Minor Outlying Islands","ury":"Uruguay","uzb":"Uzbekistan","vut":"Vanuatu","ven":"Venezuela","vnm":"Viet Nam","vgb":"Virgin Islands, British","vir":"Virgin Islands, U.S.","wlf":"Wallis and Futuna","esh":"Western Sahara","yem":"Yemen","zmb":"Zambia","zwe":"Zimbabwe"},"empty":"","required":"This field is required","valid":"","invalid":"This field is invalid","months":["January","February","March","April","May","June","July","August","September","October","November","December"],"timeUnits":{SECOND:"seconds",MINUTE:"minutes",HOUR:"hours",DAY:"days",MONTH:"months",YEAR:"years"}}});Alpaca.EmptyViewTemplates={};})(jQuery);(function($){var Alpaca=$.alpaca;Alpaca.styleInjections={};var displayTemplates=Alpaca.Create(Alpaca.EmptyViewTemplates,{"controlField":'<div class="alpaca-data-container">{{if options.label}}<div class="alpaca-data-label">${options.label}</div>{{/if}}<div class="alpaca-data">&nbsp;${data}</div></div>',"fieldSetOuterEl":'<div class="ui-widget ui-widget-content">{{html this.html}}</div>',"fieldSetLegend":'{{if options.label}}<div class="{{if options.labelClass}}${options.labelClass}{{/if}}">${options.label}</div>{{/if}}',"fieldSetItemsContainer":"<div>{{html this.html}}</div>","fieldSet":'{{wrap(null, {}) Alpaca.fieldTemplate(this,"fieldSetOuterEl",true)}}{{html Alpaca.fieldTemplate(this,"fieldSetLegend")}}{{wrap(null, {}) Alpaca.fieldTemplate(this,"fieldSetItemsContainer",true)}}{{/wrap}}{{/wrap}}',"controlFieldContainer":"<div>{{html this.html}}</div>"});var editTemplates=Alpaca.Create(Alpaca.EmptyViewTemplates,{"controlFieldOuterEl":"<span>{{html this.html}}</span>","controlFieldMessage":'<div><span class="ui-icon ui-icon-alert"></span><span class="alpaca-controlfield-message-text">${message}</span></div>',"controlFieldLabel":'{{if options.label}}<div class="{{if options.labelClass}}${options.labelClass}{{/if}}"><div>${options.label}</div></div>{{/if}}',"controlFieldHelper":'{{if options.helper}}<div class="{{if options.helperClass}}${options.helperClass}{{/if}}"><span class="ui-icon ui-icon-info"></span><span class="alpaca-controlfield-helper-text">${options.helper}</span></div>{{/if}}',"controlFieldContainer":"<div>{{html this.html}}</div>","controlField":'{{wrap(null, {}) Alpaca.fieldTemplate(this,"controlFieldOuterEl",true)}}{{html Alpaca.fieldTemplate(this,"controlFieldLabel")}}{{wrap(null, {}) Alpaca.fieldTemplate(this,"controlFieldContainer",true)}}{{html Alpaca.fieldTemplate(this,"controlFieldHelper")}}{{/wrap}}{{/wrap}}',"fieldSetOuterEl":"<fieldset>{{html this.html}}</fieldset>","fieldSetMessage":'<div><span class="ui-icon ui-icon-alert" style="float: left; margin-right: .3em;"></span><span>${message}</span></div>',"fieldSetLegend":'{{if options.label}}<legend class="{{if options.labelClass}}${options.labelClass}{{/if}}">${options.label}</legend>{{/if}}',"fieldSetHelper":'{{if options.helper}}<div class="{{if options.helperClass}}${options.helperClass}{{/if}}">${options.helper}</div>{{/if}}',"fieldSetItemsContainer":"<div>{{html this.html}}</div>","fieldSet":'{{wrap(null, {}) Alpaca.fieldTemplate(this,"fieldSetOuterEl",true)}}{{html Alpaca.fieldTemplate(this,"fieldSetLegend")}}{{html Alpaca.fieldTemplate(this,"fieldSetHelper")}}{{wrap(null, {}) Alpaca.fieldTemplate(this,"fieldSetItemsContainer",true)}}{{/wrap}}{{/wrap}}',"fieldSetItemContainer":"<div></div>","formFieldsContainer":"<div>{{html this.html}}</div>","formButtonsContainer":'<div>{{if options.buttons}}{{each(k,v) options.buttons}}<button data-key="${k}" class="alpaca-form-button alpaca-form-button-${k}" {{each(k1,v1) v}}${k1}="${v1}"{{/each}}>${v.value}</button>{{/each}}{{/if}}</div>',"form":'<form>{{html Alpaca.fieldTemplate(this,"formFieldsContainer")}}{{html Alpaca.fieldTemplate(this,"formButtonsContainer")}}</form>',"wizardStep":'<div class="alpaca-clear"></div>',"wizardNavBar":"<div></div>","wizardPreButton":"<button>Back</button>","wizardNextButton":"<button>Next</button>","wizardDoneButton":"<button>Done</button>","wizardStatusBar":'<ol id="${id}">{{each(i,v) titles}}<li id="stepDesc${i}"><div><strong><span>${v.title}</span>${v.description}</strong></div></li>{{/each}}</ol>'});Alpaca.registerView({"id":"VIEW_WEB_DISPLAY","parent":"VIEW_BASE","title":"Default Web Display View","description":"Default web edit view which goes though field hierarchy.","type":"view","platform":"web","displayReadonly":true,"templates":displayTemplates});Alpaca.registerView({"id":"VIEW_WEB_EDIT","parent":"VIEW_BASE","title":"Default Web Edit View","description":"Default web edit view which goes though field hierarchy.","type":"edit","platform":"web","displayReadonly":true,"templates":editTemplates});Alpaca.registerView({"id":"VIEW_WEB_CREATE","parent":"VIEW_WEB_EDIT","title":"Default Web Create View","description":"Default web create view which doesn't bind initial data.","type":"create","displayReadonly":false});})(jQuery);(function($){var Alpaca=$.alpaca;var displayTemplates=Alpaca.Create(Alpaca.EmptyViewTemplates,{"controlFieldOuterEl":'<span class="alpaca-view-web-list">{{html this.html}}</span>',"controlFieldMessage":'<div><span class="ui-icon ui-icon-alert"></span><span class="alpaca-controlfield-message-text">${message}</span></div>',"controlFieldLabel":'{{if options.label}}<label for="${id}" class="{{if options.labelClass}}${options.labelClass}{{/if}}">${options.label}</label>{{/if}}',"controlFieldHelper":'{{if options.helper}}<div class="{{if options.helperClass}}${options.helperClass}{{/if}}"><span class="ui-icon ui-icon-info"></span><span class="alpaca-controlfield-helper-text">${options.helper}</span></div>{{/if}}',"controlFieldContainer":"<div>{{html this.html}}</div>","controlField":'{{wrap(null, {}) Alpaca.fieldTemplate(this,"controlFieldOuterEl",true)}}{{html Alpaca.fieldTemplate(this,"controlFieldLabel")}}{{wrap(null, {}) Alpaca.fieldTemplate(this,"controlFieldContainer",true)}}{{html Alpaca.fieldTemplate(this,"controlFieldHelper")}}{{/wrap}}{{/wrap}}',"fieldSetOuterEl":'<fieldset class="alpaca-view-web-list">{{html this.html}}</fieldset>',"fieldSetMessage":'<div><span class="ui-icon ui-icon-alert alpaca-fieldset-message-list-view"></span><span>${message}</span></div>',"fieldSetLegend":'{{if options.label}}<legend class="{{if options.labelClass}}${options.labelClass}{{/if}}">${options.label}</legend>{{/if}}',"fieldSetHelper":'{{if options.helper}}<div class="{{if options.helperClass}}${options.helperClass}{{/if}}">${options.helper}</div>{{/if}}',"fieldSetItemsContainer":"<ol>{{html this.html}}</ol>","fieldSet":'{{wrap(null, {}) Alpaca.fieldTemplate(this,"fieldSetOuterEl",true)}}{{html Alpaca.fieldTemplate(this,"fieldSetLegend")}}{{html Alpaca.fieldTemplate(this,"fieldSetHelper")}}{{wrap(null, {}) Alpaca.fieldTemplate(this,"fieldSetItemsContainer",true)}}{{/wrap}}{{/wrap}}',"fieldSetItemContainer":'<li style="list-style:none;"></li>',"itemLabel":'{{if options.itemLabel}}<label for="${id}" class="alpaca-controlfield-label alpaca-controlfield-label-list-view"><span class="alpaca-controlfield-item-label-list-view">${options.itemLabel}{{if index}} <span class="alpaca-item-label-counter">${index}</span></span>{{/if}}</label>{{/if}}'});var editTemplates=Alpaca.Create(Alpaca.EmptyViewTemplates,{"controlFieldOuterEl":'<span class="alpaca-view-web-list">{{html this.html}}</span>',"controlFieldMessage":'<div><span class="ui-icon ui-icon-alert"></span><span class="alpaca-controlfield-message-text">${message}</span></div>',"controlFieldLabel":'{{if options.label}}<label for="${id}" class="{{if options.labelClass}}${options.labelClass}{{/if}}">${options.label}</label>{{/if}}',"controlFieldHelper":'{{if options.helper}}<div class="{{if options.helperClass}}${options.helperClass}{{/if}}"><span class="ui-icon ui-icon-info"></span><span class="alpaca-controlfield-helper-text">${options.helper}</span></div>{{/if}}',"controlFieldContainer":"<div>{{html this.html}}</div>","controlField":'{{wrap(null, {}) Alpaca.fieldTemplate(this,"controlFieldOuterEl",true)}}{{html Alpaca.fieldTemplate(this,"controlFieldLabel")}}{{wrap(null, {}) Alpaca.fieldTemplate(this,"controlFieldContainer",true)}}{{html Alpaca.fieldTemplate(this,"controlFieldHelper")}}{{/wrap}}{{/wrap}}',"fieldSetOuterEl":'<fieldset class="alpaca-view-web-list">{{html this.html}}</fieldset>',"fieldSetMessage":'<div><span class="ui-icon ui-icon-alert alpaca-fieldset-message-list-view"></span><span>${message}</span></div>',"fieldSetLegend":'{{if options.label}}<legend class="{{if options.labelClass}}${options.labelClass}{{/if}}">${options.label}</legend>{{/if}}',"fieldSetHelper":'{{if options.helper}}<div class="{{if options.helperClass}}${options.helperClass}{{/if}}">${options.helper}</div>{{/if}}',"fieldSetItemsContainer":"<ol>{{html this.html}}</ol>","fieldSet":'{{wrap(null, {}) Alpaca.fieldTemplate(this,"fieldSetOuterEl",true)}}{{html Alpaca.fieldTemplate(this,"fieldSetLegend")}}{{html Alpaca.fieldTemplate(this,"fieldSetHelper")}}{{wrap(null, {}) Alpaca.fieldTemplate(this,"fieldSetItemsContainer",true)}}{{/wrap}}{{/wrap}}',"fieldSetItemContainer":'<li style="list-style:none;"></li>',"itemLabel":'{{if options.itemLabel}}<label for="${id}" class="alpaca-controlfield-label alpaca-controlfield-label-list-view"><span class="alpaca-controlfield-item-label-list-view">${options.itemLabel}{{if index}} <span class="alpaca-item-label-counter">${index}</span></span>{{/if}}</label>{{/if}}'});Alpaca.registerView({"id":"VIEW_WEB_DISPLAY_LIST","parent":"VIEW_WEB_DISPLAY","title":"Web Display View List Style","description":"Web display view based on list styles.","legendStyle":"link","templates":displayTemplates,"styles":{},"fields":{"/":{"templates":{"fieldSetItemsContainer":'<ol class="alpaca-fieldset-itemscontainer-list-view-top">{{html this.html}}</ol>',"fieldSetItemContainer":'<li class="alpaca-fieldset-itemcontainer-list-view-top"></li>'}}}});Alpaca.registerView({"id":"VIEW_WEB_EDIT_LIST","parent":"VIEW_WEB_EDIT","title":"Web Edit View List Style","description":"Web edit view based on list styles.","legendStyle":"link","templates":editTemplates,"styles":{},"fields":{"/":{"templates":{"fieldSetItemsContainer":'<ol class="alpaca-fieldset-itemscontainer-list-view-top">{{html this.html}}</ol>',"fieldSetItemContainer":'<li class="alpaca-fieldset-itemcontainer-list-view-top"></li>'}}}});Alpaca.registerView({"id":"VIEW_WEB_CREATE_LIST","parent":"VIEW_WEB_CREATE","title":"Web Create View List Style","description":"Web create view based on list styles.","legendStyle":"link","templates":editTemplates,"styles":{},"fields":{"/":{"templates":{"fieldSetItemsContainer":'<ol class="alpaca-fieldset-itemscontainer-list-view-top">{{html this.html}}</ol>',"fieldSetItemContainer":'<li class="alpaca-fieldset-itemcontainer-list-view-top"></li>'}}}});})(jQuery);(function($){var Alpaca=$.alpaca;Alpaca.styleInjections["jquery-ui"]={"field":function(targetDiv){targetDiv.addClass("ui-widget");},"required":function(targetDiv){$('<span class="ui-icon ui-icon-star"></span>').prependTo(targetDiv);},"error":function(targetDiv){targetDiv.addClass("ui-state-error");},"errorMessage":function(targetDiv){targetDiv.addClass("ui-state-error-text");},"removeError":function(targetDiv){targetDiv.removeClass("ui-state-error");},"container":function(targetDiv){targetDiv.addClass("ui-widget-content");},"wizardStatusBar":function(targetDiv){targetDiv.addClass("ui-widget-header ui-corner-all");},"wizardCurrentStep":function(targetDiv){targetDiv.addClass("ui-state-highlight ui-corner-all");},"wizardUnCurrentStep":function(targetDiv){targetDiv.removeClass("ui-state-highlight ui-corner-all");},"containerExpandedIcon":"ui-icon-circle-arrow-s","containerCollapsedIcon":"ui-icon-circle-arrow-e","commonIcon":"ui-icon","addIcon":"ui-icon-circle-plus","removeIcon":"ui-icon-circle-minus","upIcon":"ui-icon-circle-arrow-n","downIcon":"ui-icon-circle-arrow-s","wizardPreIcon":"ui-icon-triangle-1-w","wizardNextIcon":"ui-icon-triangle-1-e","wizardDoneIcon":"ui-icon-triangle-1-e","buttonBeautifier":function(button,iconClass,withText){button.addClass("ui-button ui-widget ui-state-default ui-corner-all");if(withText){button.addClass("ui-button-text-icon-primary");}else{button.addClass("ui-button-icon-only");}var buttonText=button.html();button.attr("title",buttonText);button.empty().append('<span class="ui-button-icon-primary ui-icon alpaca-fieldset-legend-button '+iconClass+'"></span><span class="ui-button-text">'+buttonText+"</span>");button.hover(function(){if(!button.hasClass("alpaca-fieldset-array-item-toolbar-disabled")){$(this).addClass("ui-state-hover");}},function(){if(!button.hasClass("alpaca-fieldset-array-item-toolbar-disabled")){$(this).removeClass("ui-state-hover");}});}};Alpaca.registerView({"id":"VIEW_JQUERYUI_DISPLAY","parent":"VIEW_WEB_DISPLAY","title":"Web Display View for jQuery UI","description":"Web Display View for jQuery UI","style":"jquery-ui","ui":"jquery-ui"});Alpaca.registerView({"id":"VIEW_JQUERYUI_EDIT","parent":"VIEW_WEB_EDIT","title":"Web Edit View for jQuery UI","description":"Web Edit View for jQuery UI","style":"jquery-ui","ui":"jquery-ui"});Alpaca.registerView({"id":"VIEW_JQUERYUI_CREATE","parent":"VIEW_WEB_CREATE","title":"Web Create View for jQuery UI","description":"Web Create View for jQuery UI","style":"jquery-ui","ui":"jquery-ui"});Alpaca.registerView({"id":"VIEW_JQUERYUI_EDIT_LIST","parent":"VIEW_WEB_EDIT_LIST","title":"JQuery UI Edit View List Style","description":"JQuery UI edit view based on list styles.","style":"jquery-ui","ui":"jquery-ui"});Alpaca.registerView({"id":"VIEW_JQUERYUI_CREATE_LIST","parent":"VIEW_WEB_CREATE_LIST","title":"JQuery UI Create View List Style","description":"JQuery UI create view based on list styles.","style":"jquery-ui","ui":"jquery-ui"});})(jQuery);(function($){var Alpaca=$.alpaca;var displayTemplates=Alpaca.Create(Alpaca.EmptyViewTemplates,{controlField:'<ul data-role="listview"><li>{{if options.label}}<h4>${options.label}</h4>{{/if}}<p><strong>${data}</strong></p></li></ul>',fieldSetOuterEl:'<fieldset data-role="collapsible" id="${id}" data-collapsed="{{if options.collapsed}}true{{else}}false{{/if}}">{{html this.html}}</fieldset>',fieldSetMessage:"<div>* ${message}</div>",fieldSetLegend:'{{if options.label}}<legend for="${id}" class="{{if options.labelClass}}${options.labelClass}{{/if}}">${options.label}</legend>{{/if}}',fieldSetHelper:'{{if options.helper}}<h3 class="{{if options.helperClass}}${options.helperClass}{{/if}}">${options.helper}</h3>{{/if}}',fieldSetItemsContainer:'<div data-role="controlgroup">{{html this.html}}</div>',fieldSet:'{{wrap(null, {}) Alpaca.fieldTemplate(this,"fieldSetOuterEl",true)}}{{html Alpaca.fieldTemplate(this,"fieldSetLegend")}}{{html Alpaca.fieldTemplate(this,"fieldSetHelper")}}{{wrap(null, {}) Alpaca.fieldTemplate(this,"fieldSetItemsContainer",true)}}{{/wrap}}{{/wrap}}',fieldSetItemContainer:"<div></div>"});var editTemplates=Alpaca.Create(Alpaca.EmptyViewTemplates,{controlFieldOuterEl:'<div data-role="fieldcontain">{{html this.html}}</div>',controlFieldMessage:"<div>* ${message}</div>",controlFieldLabel:'{{if options.label}}<label for="${id}" class="{{if options.labelClass}}${options.labelClass}{{/if}}">${options.label}</label>{{/if}}',controlFieldHelper:'{{if options.helper}}<div class="{{if options.helperClass}}${options.helperClass}{{/if}}">${options.helper}</div>{{/if}}',controlFieldContainer:'<div data-replace="true">{{html this.html}}</div>',controlField:'{{wrap(null, {}) Alpaca.fieldTemplate(this,"controlFieldOuterEl",true)}}{{html Alpaca.fieldTemplate(this,"controlFieldLabel")}}{{wrap(null, {}) Alpaca.fieldTemplate(this,"controlFieldContainer",true)}}{{/wrap}}{{html Alpaca.fieldTemplate(this,"controlFieldHelper")}}{{/wrap}}',fieldSetOuterEl:'<fieldset id="${id}" data-collapsed="{{if options.collapsed}}true{{else}}false{{/if}}">{{html this.html}}</fieldset>',fieldSetMessage:"<div>* ${message}</div>",fieldSetLegend:'{{if options.label}}<legend for="${id}" class="{{if options.labelClass}}${options.labelClass}{{/if}}">${options.label}</legend>{{/if}}',fieldSetHelper:'{{if options.helper}}<h3 class="{{if options.helperClass}}${options.helperClass}{{/if}}">${options.helper}</h3>{{/if}}',fieldSetItemsContainer:'<div data-role="controlgroup">{{html this.html}}</div>',fieldSet:'{{wrap(null, {}) Alpaca.fieldTemplate(this,"fieldSetOuterEl",true)}}{{html Alpaca.fieldTemplate(this,"fieldSetLegend")}}{{html Alpaca.fieldTemplate(this,"fieldSetHelper")}}{{wrap(null, {}) Alpaca.fieldTemplate(this,"fieldSetItemsContainer",true)}}{{/wrap}}{{/wrap}}',fieldSetItemContainer:"<div></div>",formFieldsContainer:'<div data-role="content">{{html this.html}}</div>',form:'<form>{{html Alpaca.fieldTemplate(this,"formFieldsContainer")}}{{html Alpaca.fieldTemplate(this,"formButtonsContainer")}}</form>',controlFieldRadio:'<fieldset data-role="controlgroup" class="alpaca-radio-fieldset" id="${id}">{{each selectOptions}}<input type="radio" {{if options.readonly}}readonly="readonly"{{/if}} name="${name}" id="${id}-${$index}" value="${value}" {{if value == data}}checked="checked"{{/if}}/><label for="${id}-${$index}">${text}</label>{{/each}}</fieldset>',controlFieldCheckbox:'<fieldset data-role="controlgroup" class="alpaca-radio-fieldset" id="${id}-0"><input type="checkbox" id="${id}-1" name="${id}-1" {{if options.readonly}}readonly="readonly"{{/if}} {{if name}}name="${name}"{{/if}} {{each options.data}}data-${fieldId}="${value}"{{/each}}/>{{if options.rightLabel}}<label for="${id}-1">${options.rightLabel}</label>{{else}}{{if options.label}}<label for="${id}-1">${options.label}?</label>{{/if}}{{/if}}</fieldset>',arrayItemToolbar:'<div class="alpaca-fieldset-array-item-toolbar" data-role="controlgroup" data-type="horizontal" data-mini="true"><span class="alpaca-fieldset-array-item-toolbar-add" data-role="button" data-icon="add" data-iconpos="notext">Add</span><span class="alpaca-fieldset-array-item-toolbar-remove" data-role="button" data-icon="delete" data-iconpos="notext">Delete</span><span class="alpaca-fieldset-array-item-toolbar-up" data-role="button" data-icon="arrow-u" data-iconpos="notext">Up</span><span class="alpaca-fieldset-array-item-toolbar-down" data-role="button" data-icon="arrow-d" data-iconpos="notext">Down</span></div>',arrayToolbar:'<div class="alpaca-fieldset-array-toolbar" data-role="controlgroup"  data-mini="true"><span class="alpaca-fieldset-array-toolbar-icon alpaca-fieldset-array-toolbar-add" data-role="button" data-icon="add" data-inline="true" title="Add">Add</span></div>'});Alpaca.styleInjections["jquery-mobile"]={"array":function(containerElem){if(containerElem){if(containerElem.find('[data-role="fieldcontain"]').fieldcontain){containerElem.find('[data-role="fieldcontain"]').fieldcontain();containerElem.find('[data-role="fieldcontain"]').find("[type='radio'], [type='checkbox']").checkboxradio();containerElem.find('[data-role="fieldcontain"]').find("button, [data-role='button'], [type='button'], [type='submit'], [type='reset'], [type='image']").not(".ui-nojs").button();containerElem.find('[data-role="fieldcontain"]').find("input, textarea").not("[type='radio'], [type='checkbox'], button, [type='button'], [type='submit'], [type='reset'], [type='image']").textinput();containerElem.find('[data-role="fieldcontain"]').find("input, select").filter("[data-role='slider'], [data-type='range']").slider();containerElem.find('[data-role="fieldcontain"]').find("select:not([data-role='slider'])").selectmenu();containerElem.find('[data-role="button"]').buttonMarkup();containerElem.find('[data-role="controlgroup"]').controlgroup();}}}};Alpaca.registerView({"id":"VIEW_MOBILE_DISPLAY","parent":"VIEW_WEB_DISPLAY","title":"Mobile DISPLAY View","description":"Mobile display view using JQuery Mobile Library","type":"view","platform":"mobile","style":"jquery-mobile","ui":"mobile","legendStyle":"link","toolbarStyle":"link","buttonType":"link","templates":displayTemplates,"messages":{required:"Required Field",invalid:"Invalid Field"},"render":function(field,renderedCallback){var self=this;field.render(field.view,function(field){refreshPageForField(field.getEl());if(renderedCallback){renderedCallback.call(self,field);}});}});Alpaca.registerView({"id":"VIEW_MOBILE_EDIT","parent":"VIEW_WEB_EDIT","title":"Mobile Edit View","description":"Mobile edit view using JQuery Mobile Library","type":"edit","platform":"mobile","style":"jquery-mobile","ui":"mobile","legendStyle":"link","toolbarStyle":"link","buttonType":"link","toolbarSticky":true,"templates":editTemplates,"messages":{required:"Required Field",invalid:"Invalid Field"},"render":function(field,renderedCallback){var self=this;field.render(function(field){refreshPageForField(field.getEl());if(renderedCallback){renderedCallback.call(self,field);}});}});var refreshPageForField=function(fieldEl){var el=fieldEl;while(!Alpaca.isEmpty(el)&&el.attr("data-role")!=="page"){el=el.parent();}if(!Alpaca.isEmpty(el)){$(el).trigger("pagecreate");}};Alpaca.registerView({"id":"VIEW_MOBILE_CREATE","parent":"VIEW_MOBILE_EDIT","title":"Default Mobile Create View","description":"Default mobile create view which doesn't bind initial data.","type":"create","displayReadonly":false});})(jQuery);(function($){var Alpaca=$.alpaca;var editTemplates=Alpaca.Create(Alpaca.EmptyViewTemplates,{"controlFieldOuterEl":'<div class="form-group">{{html this.html}}</div>',"controlFieldMessage":'<span class="glyphicon glyphicon-exclamation-sign"></span><span class="help-block alpaca-controlfield-message-text">${message}</span>',"controlFieldLabel":'{{if options.label}}<label class="{{if options.labelClass}}${options.labelClass}{{/if}} control-label" for="${id}">${options.label}</label>{{/if}}',"controlFieldHelper":'<p class="{{if options.helperClass}}${options.helperClass}{{/if}}">{{if options.helper}}<i class="glyphicon glyphicon-info-sign alpaca-helper-icon"></i>${options.helper}</p>{{/if}}',"controlFieldContainer":"<div>{{html this.html}}</div>","controlField":'{{wrap(null, {}) Alpaca.fieldTemplate(this,"controlFieldOuterEl",true)}}{{html Alpaca.fieldTemplate(this,"controlFieldLabel")}}{{wrap(null, {}) Alpaca.fieldTemplate(this,"controlFieldContainer",true)}}{{html Alpaca.fieldTemplate(this,"controlFieldHelper")}}{{/wrap}}{{/wrap}}',"fieldSetOuterEl":"<fieldset>{{html this.html}}</fieldset>","fieldSetMessage":'<span class="glyphicon glyphicon-exclamation-sign"></span><span class="help-block alpaca-controlfield-message-text">${message}</span>',"fieldSetLegend":'{{if options.label}}<legend class="{{if options.labelClass}}${options.labelClass}{{/if}}">${options.label}</legend>{{/if}}',"fieldSetHelper":'{{if options.helper}}<p class="{{if options.helperClass}}${options.helperClass}{{/if}}"><i class="glyphicon glyphicon-info-sign alpaca-helper-icon"></i>${options.helper}</p>{{/if}}',"fieldSetItemsContainer":"<div>{{html this.html}}</div>","fieldSet":'{{wrap(null, {}) Alpaca.fieldTemplate(this,"fieldSetOuterEl",true)}}{{html Alpaca.fieldTemplate(this,"fieldSetLegend")}}{{html Alpaca.fieldTemplate(this,"fieldSetHelper")}}{{wrap(null, {}) Alpaca.fieldTemplate(this,"fieldSetItemsContainer",true)}}{{/wrap}}{{/wrap}}',"fieldSetItemContainer":"<div></div>","formFieldsContainer":"<div>{{html this.html}}</div>","formButtonsContainer":'<div>{{if options.buttons}}{{each(k,v) options.buttons}}<button data-key="${k}" class="alpaca-form-button alpaca-form-button-${k} btn btn-default" {{each(k1,v1) v}}${k1}="${v1}"{{/each}}>${v.value}</button>{{/each}}{{/if}}</div>',"form":'<form role="form">{{html Alpaca.fieldTemplate(this,"formFieldsContainer")}}{{html Alpaca.fieldTemplate(this,"formButtonsContainer")}}</form>',"wizardStep":'<div class="alpaca-clear"></div>',"wizardNavBar":"<div></div>","wizardPreButton":"<button>Back</button>","wizardNextButton":"<button>Next</button>","wizardDoneButton":"<button>Done</button>","wizardStatusBar":'<ol id="${id}">{{each(i,v) titles}}<li id="stepDesc${i}"><div><strong><span>${v.title}</span>${v.description}</strong></div></li>{{/each}}</ol>',"controlFieldCheckbox":'<div class="checkbox" id="${id}">{{if options.rightLabel}}<label for="${id}_checkbox">{{/if}}<input id="${id}_checkbox" type="checkbox" {{if options.readonly}}readonly="readonly"{{/if}} {{if name}}name="${name}"{{/if}} {{each(i,v) options.data}}data-${i}="${v}"{{/each}}/>{{if options.rightLabel}}${options.rightLabel}</label>{{/if}}</div>',"controlFieldCheckboxMultiple":'<div id="${id}">{{each(i,o) checkboxOptions}}<div class="checkbox"><label for="${id}_checkbox_${i}"><input type="checkbox" id="${id}_checkbox_${i}" {{if options.readonly}}readonly="readonly"{{/if}} {{if name}}name="${name}"{{/if}} data-checkbox-value="${o.value}" data-checkbox-index="${i}"/>${o.text}</label></div>{{/each}}</div>',"controlFieldRadio":'{{if !required && !removeDefaultNone}}<div class="radio"><input type="radio" {{if options.readonly}}readonly="readonly"{{/if}} name="${name}" id="${id}_radio_nonevalue" value=""/><label for="${id}_radio_nonevalue">None</label></div>{{/if}}{{each selectOptions}}<div class="radio"><input type="radio" {{if options.readonly}}readonly="readonly"{{/if}} name="${name}" value="${value}" id="${id}_radio_${$index}" {{if value == data}}checked="checked"{{/if}}/><label for="${id}_radio_${$index}">${text}</label></div>{{/each}}',"itemLabel":'{{if options.itemLabel}}<div class="alpaca-controlfield-label"><div>${options.itemLabel}{{if index}} <span class="alpaca-item-label-counter">${index}</span>{{/if}}</div></div>{{/if}}',"arrayToolbar":'<div class="alpaca-fieldset-array-toolbar btn-group"><button class="alpaca-fieldset-array-toolbar-icon alpaca-fieldset-array-toolbar-add btn btn-default">${addItemLabel}</button></span>',"arrayItemToolbar":'<div class="alpaca-fieldset-array-item-toolbar btn-group btn-group-sm">{{each(k,v) buttons}}<button class="alpaca-fieldset-array-item-toolbar-icon alpaca-fieldset-array-item-toolbar-${v.feature} btn btn-default btn-sm">${v.label}</button>{{/each}}</div>'});var displayTemplates=Alpaca.Create(editTemplates,{"fieldSetOuterEl":"<fieldset disabled>{{html this.html}}</fieldset>"});Alpaca.styleInjections["bootstrap"]={"field":function(targetDiv){$(targetDiv).find("input").addClass("form-control");$(targetDiv).find("textarea").addClass("form-control");$(targetDiv).find("select").addClass("form-control");$(targetDiv).find("input[type=checkbox]").removeClass("form-control");$(targetDiv).find("input[type=file]").removeClass("form-control");$(targetDiv).find("input[type=radio]").removeClass("form-control");$(targetDiv).find("input[type=radio]").parent().parent().addClass("radio");if($(targetDiv).parents("form").hasClass("form-inline")){$(targetDiv).find("input[type=checkbox]").parent().addClass("checkbox-inline");$(targetDiv).find("input[type=radio]").parent().addClass("radio-inline");}},"commonIcon":"","addIcon":"glyphicon glyphicon-plus-sign","removeIcon":"glyphicon glyphicon-minus-sign","upIcon":"glyphicon glyphicon-chevron-up","downIcon":"glyphicon glyphicon-chevron-down","containerExpandedIcon":"glyphicon glyphicon-circle-arrow-down","containerCollapsedIcon":"glyphicon glyphicon-circle-arrow-right","wizardPreIcon":"glyphicon glyphicon-chevron-left","wizardNextIcon":"glyphicon glyphicon-chevron-right","wizardDoneIcon":"glyphicon glyphicon-ok","required":function(targetDiv){$('<span class="glyphicon glyphicon-star"></span>&nbsp;').prependTo(targetDiv);},"error":function(targetDiv){targetDiv.addClass("has-error");},"removeError":function(targetDiv){targetDiv.removeClass("has-error");},"wizardStatusBar":function(targetDiv){targetDiv.addClass("ui-widget-header ui-corner-all");},"wizardCurrentStep":function(targetDiv){targetDiv.addClass("ui-state-highlight ui-corner-all");},"wizardUnCurrentStep":function(targetDiv){targetDiv.removeClass("ui-state-highlight ui-corner-all");},"buttonBeautifier":function(button,iconClass,withText){var buttonText=button.html();button.attr("title",buttonText);button.empty().append('<b class="alpaca-fieldset-legend-button '+iconClass+'"></b>');var addedButtonText=withText?buttonText:null;if(addedButtonText){button.append('<span class="alpaca-fieldset-legend-button-text">'+addedButtonText+"</span>");}}};var renderFunction=function(field,renderedCallback){var self=this;field.render(function(field){if(renderedCallback){renderedCallback.call(self,field);}});};Alpaca.registerView({"id":"VIEW_BOOTSTRAP_DISPLAY","parent":"VIEW_WEB_DISPLAY","title":"Display View for Bootstrap","description":"Display View for Bootstrap","style":"bootstrap","ui":"bootstrap","templates":displayTemplates,"render":renderFunction,"type":"view"});Alpaca.registerView({"id":"VIEW_BOOTSTRAP_EDIT","parent":"VIEW_WEB_EDIT","title":"Edit View for Bootstrap","description":"Edit View for Bootstrap","style":"bootstrap","ui":"bootstrap","templates":editTemplates,"render":renderFunction,"type":"edit"});Alpaca.registerView({"id":"VIEW_BOOTSTRAP_CREATE","parent":"VIEW_WEB_CREATE","title":"Create View for Bootstrap","description":"Create View for Bootstrap","style":"bootstrap","ui":"bootstrap","templates":editTemplates,"render":renderFunction,"type":"create"});})(jQuery);(function($){var Alpaca=$.alpaca;Alpaca.registerView({"id":"VIEW_WEB_EDIT_TABLE","parent":"VIEW_WEB_EDIT","title":"Web Edit View Table Style","description":"Web edit view based on table styles.","type":"edit","displayReadonly":true,"collapsible":false,"legendStyle":"link","templates":{"controlFieldOuterEl":null,"controlFieldLabel":'<td>{{if options.label}}<label for="${id}" class="{{if options.labelClass}}${options.labelClass}{{/if}}">${options.label}</label>{{/if}}</td>',"controlFieldContainer":'<td data-control="append">{{html this.html}}</td>',"controlFieldMessage":'<div><span class="ui-icon ui-icon-alert"></span><span class="alpaca-controlfield-message-text">${message}</span></div>',"controlFieldHelper":'{{if options.helper}}<div class="{{if options.helperClass}}${options.helperClass}{{/if}}"><span class="ui-icon ui-icon-info"></span><span class="alpaca-controlfield-helper-text">${options.helper}</span></div>{{/if}}',"controlField":'{{html Alpaca.fieldTemplate(this,"controlFieldLabel")}}'+'{{wrap(null, {}) Alpaca.fieldTemplate(this,"controlFieldContainer",true)}}'+'{{html Alpaca.fieldTemplate(this,"controlFieldHelper")}}'+"{{/wrap}}","fieldSetOuterEl":'<fieldset class="alpaca-view-web-edit-table">{{html this.html}}</fieldset>',"fieldSetMessage":'<div><span class="ui-icon ui-icon-alert alpaca-fieldset-message-table-view"></span><span>${message}</span></div>',"fieldSetLegend":'{{if options.label}}<legend class="{{if options.labelClass}}${options.labelClass}{{/if}}">${options.label}</legend>{{/if}}',"fieldSetHelper":'{{if options.helper}}<div class="{{if options.helperClass}}${options.helperClass}{{/if}}">${options.helper}</div>{{/if}}',"fieldSetItemsContainer":"<table><tbody>{{html this.html}}</tbody></table>","fieldSet":'{{wrap(null, {}) Alpaca.fieldTemplate(this,"fieldSetOuterEl",true)}}{{html Alpaca.fieldTemplate(this,"fieldSetLegend")}}{{html Alpaca.fieldTemplate(this,"fieldSetHelper")}}{{wrap(null, {}) Alpaca.fieldTemplate(this,"fieldSetItemsContainer",true)}}{{/wrap}}{{/wrap}}',"fieldSetItemContainer":"<tr></tr>","itemLabel":'{{if options.itemLabel}}<label for="${id}" class="alpaca-controlfield-label alpaca-controlfield-label-list-view"><span class="alpaca-controlfield-item-label-list-view">${options.itemLabel}{{if index}} <span class="alpaca-item-label-counter">${index}</span></span>{{/if}}</label>{{/if}}'},"styles":{},"fields":{"/":{"templates":{"fieldSetItemsContainer":'<table class="alpaca-fieldset-itemscontainer-list-view-top">{{html this.html}}</table>',"fieldSetItemContainer":'<tr class="alpaca-fieldset-itemscontainer-list-view-top"></tr>'}}}});Alpaca.registerView({"id":"VIEW_WEB_CREATE_TABLE","parent":"VIEW_WEB_EDIT_TABLE","title":"Default Web Create View Table Stle","description":"Default web create view (Table Style) which doesn't bind initial data.","type":"create","displayReadonly":false});})(jQuery);(function($){var Alpaca=$.alpaca;Alpaca.registerView({"id":"VIEW_WEB_EDIT_YAML","parent":"VIEW_WEB_EDIT","title":"Web Edit View List Style","description":"Web edit list styled to look like a YAML editor.","type":"edit","displayReadonly":true,"collapsible":true,"legendStyle":"link","templates":{"controlFieldOuterEl":'<span class="alpaca-view-web-edit-yaml" title="${options.helper}">{{html this.html}}</span>',"controlFieldMessage":'<div><span class="ui-icon ui-icon-alert"></span><span class="alpaca-controlfield-message-text">${message}</span></div>',"controlFieldLabel":'{{if options.label}}<label for="${id}" class="{{if options.labelClass}}${options.labelClass}{{/if}}">${options.label}:</label>{{/if}}',"controlFieldHelper":'<span style="display:none" />',"controlFieldContainer":"<div>{{html this.html}}</div>","controlField":'{{wrap(null, {}) Alpaca.fieldTemplate(this,"controlFieldOuterEl",true)}}{{html Alpaca.fieldTemplate(this,"controlFieldLabel")}}{{wrap(null, {}) Alpaca.fieldTemplate(this,"controlFieldContainer",true)}}{{html Alpaca.fieldTemplate(this,"controlFieldHelper")}}{{/wrap}}{{/wrap}}',"fieldSetOuterEl":'<fieldset class="alpaca-view-web-edit-yaml">{{html this.html}}</fieldset>',"fieldSetMessage":'<div><span class="ui-icon ui-icon-alert alpaca-fieldset-message-list-view"></span><span>${message}</span></div>',"fieldSetLegend":'{{if options.label}}<legend class="{{if options.labelClass}}${options.labelClass}{{/if}}">${options.label}</legend>{{/if}}',"fieldSetHelper":'{{if options.helper}}<div class="{{if options.helperClass}}${options.helperClass}{{/if}}">${options.helper}</div>{{/if}}',"fieldSetItemsContainer":"<ol>{{html this.html}}</ol>","fieldSet":'{{wrap(null, {}) Alpaca.fieldTemplate(this,"fieldSetOuterEl",true)}}{{html Alpaca.fieldTemplate(this,"fieldSetLegend")}}{{html Alpaca.fieldTemplate(this,"fieldSetHelper")}}{{wrap(null, {}) Alpaca.fieldTemplate(this,"fieldSetItemsContainer",true)}}{{/wrap}}{{/wrap}}',"fieldSetItemContainer":'<li style="list-style:none;"></li>',"itemLabel":'{{if options.itemLabel}}<label for="${id}" class="alpaca-controlfield-label alpaca-controlfield-label-list-view"><span class="alpaca-controlfield-item-label-list-view">${options.itemLabel}{{if index}} <span class="alpaca-item-label-counter">${index}</span></span>{{/if}}</label>{{/if}}'},"styles":{},"fields":{"/":{"templates":{"fieldSetItemsContainer":'<ol class="alpaca-fieldset-itemscontainer-list-view-top">{{html this.html}}</ol>',"fieldSetItemContainer":'<li class="alpaca-fieldset-itemcontainer-list-view-top"></li>'}}}});})(jQuery);(function($){var Alpaca=$.alpaca;Alpaca.registerView({"id":"VIEW_WEB_EDIT_INLINE","parent":"VIEW_WEB_EDIT","title":"Default Web Edit with fields inlining capabilities","description":"Edit template with form fields inlining capabilities, via options.inline level to display some forms parts inline. Useful to display for example an ArrayField containing ObjectField items in a compact manner.","type":"edit","platform":"web","style":"jquery-ui","displayReadonly":true,"templates":{"fieldSetOuterEl":'<fieldset class="{{if options.inline}}alpaca-inline{{/if}}">{{html this.html}}</fieldset>',"fieldSetItemContainer":'<div class="alpaca-inline-item-container"></div>',"arrayItemToolbar":'<div class="alpaca-fieldset-array-item-toolbar" data-role="controlgroup" data-type="horizontal" data-mini="true">'+'<span class="alpaca-fieldset-array-item-toolbar-add" data-role="button" data-icon="add" data-iconpos="notext">Add</span>'+'<span class="alpaca-fieldset-array-item-toolbar-remove" data-role="button" data-icon="delete" data-iconpos="notext">Delete</span>'+'<span class="alpaca-fieldset-array-item-toolbar-up" data-role="button" data-icon="arrow-u" data-iconpos="notext">Up</span>'+'<span class="alpaca-fieldset-array-item-toolbar-down" data-role="button" data-icon="arrow-d" data-iconpos="notext">Down</span></div>'}});})(jQuery);(function($){var Alpaca=$.alpaca;Alpaca.registerView({"id":"VIEW_WEB_EDIT","templates":{"twoColumnLayout":'<div class="alpaca-layout-two-column-mask">'+"{{if options.label}}<h3>${options.label}</h3>{{/if}}"+"{{if options.helper}}<h4>${options.helper}</h4>{{/if}}"+'<div class="alpaca-layout-two-column-left alpaca-layout-region"  id="leftcolumn"></div>'+'<div class="alpaca-layout-two-column-right alpaca-layout-region" id="rightcolumn"></div>'+"</div>"}});Alpaca.registerView({"id":"VIEW_WEB_EDIT_LAYOUT_TWO_COLUMN","parent":"VIEW_WEB_EDIT","title":"Web Edit View with Two-Column Layout","description":"Web edit default view with two-column layout.","layout":{"template":"twoColumnLayout"}});Alpaca.registerView({"id":"VIEW_WEB_EDIT_LIST_LAYOUT_TWO_COLUMN","parent":"VIEW_WEB_EDIT_LIST","title":"Web List Edit View with Two-Column Layout","description":"Web edit list view with two-column layout.","layout":{"template":"twoColumnLayout"}});})(jQuery);(function($){var Alpaca=$.alpaca;Alpaca.NormalizedView=Base.extend({constructor:function(viewId){this.id=viewId;},normalize:function(){var viewObject=Alpaca.views[this.id];if(!viewObject){Alpaca.logError("View compilation failed - view not found: "+this.id);return false;}var chain=[];var current=viewObject;while(current){chain.push(current);var parentId=current.parent;if(parentId){var parent=Alpaca.views[current.parent];if(!parent){Alpaca.logError("View compilation failed - cannot find parent view: "+parentId+" for view: "+current.id);return false;}current=parent;}else{current=null;}}chain=chain.reverse();var setScalar=function(target,source,propertyId){var value=source[propertyId];var currentValue=target[propertyId];if(!Alpaca.isUndefined(currentValue)&&!Alpaca.isUndefined(value)){Alpaca.logDebug("View property: "+propertyId+" already has value: "+currentValue+" and overwriting to: "+value);}if(!Alpaca.isUndefined(value)){target[propertyId]=value;}};var setFunction=function(target,source,propertyId){var value=source[propertyId];var currentValue=target[propertyId];if(!Alpaca.isUndefined(currentValue)&&!Alpaca.isUndefined(value)){Alpaca.logDebug("View property: "+propertyId+" already has function, overwriting");}if(!Alpaca.isUndefined(value)){target[propertyId]=value;}};var mergeMap=function(target,source,propertyId){var sourceMap=source[propertyId];if(sourceMap){if(!target[propertyId]){target[propertyId]={};}Alpaca.mergeObject2(sourceMap,target[propertyId]);}};for(var i=0;i<chain.length;i++){var element=chain[i];setScalar(this,element,"type");setScalar(this,element,"displayReadonly");setScalar(this,element,"platform");setScalar(this,element,"device");setScalar(this,element,"style");setScalar(this,element,"ui");setScalar(this,element,"collapsible");setScalar(this,element,"legendStyle");setScalar(this,element,"toolbarStyle");setScalar(this,element,"buttonStyle");setScalar(this,element,"toolbarSticky");setScalar(this,element,"globalTemplate");setFunction(this,element,"render");setFunction(this,element,"postRender");mergeMap(this,element,"styles");mergeMap(this,element,"templates");mergeMap(this,element,"messages");mergeMap(this,element,"wizard");mergeMap(this,element,"fields");mergeMap(this,element,"layout");mergeMap(this,element,"compiledTemplates");}Alpaca.logDebug("View compilation complete for view: "+this.id);Alpaca.logDebug("Final view: ");Alpaca.logDebug(JSON.stringify(this,null,"   "));return true;}});})(jQuery);(function($){var Alpaca=$.alpaca;Alpaca.RuntimeView=Base.extend({constructor:function(viewId,field){this.field=field;this.setView(viewId);},setView:function(viewId){if(!viewId){this.id="VIEW_WEB_EDIT";return;}var normalizedView=Alpaca.getNormalizedView(viewId);if(!normalizedView){throw new Error("Runtime view for view id: "+viewId+" could not find a normalized view");}for(var k in normalizedView){if(normalizedView.hasOwnProperty(k)){this[k]=normalizedView[k];}}},getWizard:function(){return this.getViewParam("wizard");},getGlobalTemplateDescriptor:function(){return this.getTemplateDescriptor("globalTemplate");},getLayout:function(){var templateDescriptor=this.getTemplateDescriptor("layoutTemplate");return{"templateDescriptor":templateDescriptor,"bindings":this.getViewParam(["layout","bindings"],true)};},getStyles:function(){return this.styles;},getTemplateDescriptor:function(templateId){return Alpaca.getTemplateDescriptor(this,templateId);},getMessage:function(messageId){var messageForLocale=this.getViewParam(["messages",Alpaca.defaultLocale,messageId]);return Alpaca.isEmpty(messageForLocale)?this.getViewParam(["messages",messageId]):messageForLocale;},getViewParam:function(configId,topLevelOnly){var fieldPath=this.field.path;if(this.fields&&this.fields[fieldPath]){var configVal=this._getConfigVal(this.fields[fieldPath],configId);if(!Alpaca.isEmpty(configVal)){return configVal;}}if(fieldPath&&fieldPath.indexOf("[")!=-1&&fieldPath.indexOf("]")!=-1){fieldPath=fieldPath.replace(/\[\d+\]/g,"[*]");if(this.fields&&this.fields[fieldPath]){var configVal=this._getConfigVal(this.fields[fieldPath],configId);if(!Alpaca.isEmpty(configVal)){return configVal;}}}if(!Alpaca.isEmpty(topLevelOnly)&&topLevelOnly&&this.field.path!="/"){return null;}return this._getConfigVal(this,configId);},_getConfigVal:function(configVal,configId){if(Alpaca.isArray(configId)){for(var i=0;i<configId.length&&!Alpaca.isEmpty(configVal);i++){configVal=configVal[configId[i]];}}else{if(!Alpaca.isEmpty(configVal)){configVal=configVal[configId];}}return configVal;},getInjectedStyle:function(id){var injectedStyle=null;var injections={};if(this.style){var _injections=Alpaca.styleInjections[this.style];if(_injections){Alpaca.mergeObject(_injections,injections);}}return injectedStyle[id];},tmpl:function(templateDescriptor,model){return Alpaca.tmpl(templateDescriptor,model);}});})(jQuery);(function($){var Alpaca=$.alpaca;Alpaca.Field=Base.extend({constructor:function(container,data,options,schema,viewId,connector,errorCallback){var self=this;this.initializing=true;this.container=container;this.parent=null;this.data=data;this.options=options;this.schema=schema;this.connector=connector;this.errorCallback=function(err){if(errorCallback){errorCallback(err);}else{Alpaca.defaultErrorCallback.call(self,err);}};this.singleLevelRendering=false;this.view=new Alpaca.RuntimeView(viewId,this);var noOptions=false;if(!this.options){this.options={};noOptions=true;}this.id=this.options.id;this.type=this.options.type;if(!this.id){this.id=Alpaca.generateId();}var noSchema=false;if(!this.schema){this.schema={};noSchema=true;}if(!this.options.label&&this.schema.title!==null){this.options.label=this.schema.title;}if(!this.options.helper&&this.schema.description!==null){this.options.helper=this.schema.description;}if(Alpaca.isEmpty(this.options.readonly)&&!Alpaca.isEmpty(this.schema.readonly)){this.options.readonly=this.schema.readonly;}if(Alpaca.isValEmpty(this.data)&&!Alpaca.isEmpty(this.schema["default"])){this.data=this.schema["default"];this.showingDefaultData=true;}this.path="/";this.validation={};this._events={};this.isDisplayOnly=function(){return(self.view.type=="view");};if(this.schema&&this.schema.id&&this.schema.id.indexOf("#")==0){this.schema.id=this.schema.id.substring(1);}this._previouslyValidated=false;},getDefaultFieldTemplateId:function(){return"controlField";},setDefaultTemplateDescriptor:function(){var viewTemplateDescriptor=this.view.getTemplateDescriptor(this.getDefaultFieldTemplateId());var globalTemplateDescriptor=this.view.getGlobalTemplateDescriptor();var layout=this.view.getLayout();var trip=false;if(!this.parent){if(globalTemplateDescriptor){this.setTemplateDescriptor(globalTemplateDescriptor);this.singleLevelRendering=true;trip=true;}else{if(layout&&layout.templateDescriptor){this.setTemplateDescriptor(layout.templateDescriptor);trip=true;}}}if(!trip&&viewTemplateDescriptor){this.setTemplateDescriptor(viewTemplateDescriptor);}},setup:function(){if(!this.initializing){this.data=this.getValue();}this.setDefaultTemplateDescriptor();if(Alpaca.isUndefined(this.schema.required)){this.schema.required=false;}if(Alpaca.isUndefined(this.options.validate)){this.options.validate=true;}if(Alpaca.isUndefined(this.options.disabled)){this.options.disabled=false;}if(Alpaca.isUndefined(this.options.showMessages)){this.options.showMessages=true;}},on:function(name,fn){Alpaca.logDebug("Adding listener for event: "+name);this._events[name]=fn;return this;},triggerWithPropagation:function(name,event){this.trigger.call(this,name,event);if(this.parent){this.parent.triggerWithPropagation.call(this.parent,name,event);}},trigger:function(name,event){var handler=this._events[name];var ret=null;if(typeof(handler)=="function"){Alpaca.logDebug("Firing event: "+name);try{ret=handler.call(this,event);}catch(e){Alpaca.logDebug("The event handler caught an exception: "+name);}}return ret;},bindData:function(){if(!Alpaca.isEmpty(this.data)){this.setValue(this.data);}},render:function(view,callback){if(view&&(Alpaca.isString(view)||Alpaca.isObject(view))){this.view.setView(view);}else{if(Alpaca.isEmpty(callback)&&Alpaca.isFunction(view)){callback=view;}}if(this.options.label===null&&this.propertyId){this.options.label=this.propertyId;}if(this.options.name){this.name=this.options.name;}if(!this.name){if(this.parent&&this.parent.name&&this.path){var lastSegment=this.path.substring(this.path.lastIndexOf("/")+1);if(lastSegment.indexOf("[")!=-1&&lastSegment.indexOf("]")!=-1){lastSegment=lastSegment.substring(lastSegment.indexOf("[")+1,lastSegment.indexOf("]"));}if(lastSegment){this.name=this.parent.name+"_"+lastSegment;this.nameCalculated=true;}}else{if(this.path){this.name=this.path.replace(/\//g,"").replace(/\[/g,"_").replace(/\]/g,"");this.nameCalculated=true;}}}this.setup();this._render(callback);},_render:function(callback){var _this=this;if(this.getEl()){this.getEl().remove();}if(this.options.renderForm){if(!this.options.form){this.options.form={};}this.options.form.viewType=this.view.type;var form=this.form;if(!form){form=new Alpaca.Form(this.container,this.options.form,this.view.id,this.connector,this.errorCallback);}form.render(function(form){_this._processRender(form.formFieldsContainer,function(){_this.getEl().appendTo(form.formFieldsContainer);form.topControl=_this;if(_this.view.type&&_this.view.type!="view"){form.initEvents();}_this.form=form;_this.postRender(function(){if(callback&&Alpaca.isFunction(callback)){callback(_this);}});});});}else{this._processRender(this.container,function(){_this.getEl().appendTo(_this.container);_this.postRender(function(){if(callback&&Alpaca.isFunction(callback)){callback(_this);}});});}},_processRender:function(parentEl,onSuccess){var _this=this;var templateDescriptor=this.getTemplateDescriptor();var theData=this.data;if(this.isDisplayOnly()&&typeof(theData)=="object"){theData=JSON.stringify(theData);}if(Alpaca.collectTiming){var t1=new Date().getTime();}var renderedDomElement=_this.view.tmpl(templateDescriptor,{"id":this.getId(),"options":this.options,"schema":this.schema,"data":theData,"view":this.view,"path":this.path,"name":this.name});if(Alpaca.collectTiming){var t2=new Date().getTime();var counters=Alpaca.Counters("tmpl");counters.increment(this.type,(t2-t1));}renderedDomElement.appendTo(parentEl);var newEl=renderedDomElement;if(renderedDomElement.size()>1){renderedDomElement.each(function(k,v){if($(this).attr("data-control")=="append"){newEl=$(this);}});}this.setEl(newEl);if(!this.singleLevelRendering){if(!this.isDisplayOnly()||(!this.isControlField)){this.renderField(function(){if(onSuccess){onSuccess(this);}});}else{if(onSuccess){onSuccess(this);}}}else{if(onSuccess){onSuccess(this);}}},renderField:function(onSuccess){},getStyleInjection:function(key,targetDiv,arg1,arg2){if(this.view.style&&Alpaca.styleInjections[this.view.style]&&Alpaca.styleInjections[this.view.style][key]){Alpaca.styleInjections[this.view.style][key].call(this,targetDiv,arg1,arg2);}},postRender:function(callback){if(this.view.type!="view"){this.getStyleInjection("field",this.getEl());this.getEl().addClass("alpaca-field");if(this.getEl().attr("id")===null){this.getEl().attr("id",this.getId()+"-field-outer");}if(Alpaca.isEmpty(this.getEl().attr("alpaca-field-id"))){this.getEl().attr("alpaca-field-id",this.getId());}if(this.schema.required){this.getEl().addClass("alpaca-field-required");}else{this.getEl().addClass("alpaca-field-optional");}if(this.options.readonly){this.getEl().addClass("alpaca-field-readonly");$(":input",this.getEl()).attr("readonly","readonly");$("select",this.getEl()).attr("disabled","disabled");$(":radio",this.getEl()).attr("disabled","disabled");$(":checkbox",this.getEl()).attr("disabled","disabled");}var applyFieldClass=function(el,thing){if(thing){var i=0;var tokens=null;if(Alpaca.isArray(thing)){for(i=0;i<thing.length;i++){el.addClass(thing[i]);}}else{if(thing.indexOf(",")>-1){tokens=thing.split(",");for(i=0;i<tokens.length;i++){el.addClass(tokens[i]);}}else{if(thing.indexOf(" ")>-1){tokens=thing.split(" ");for(i=0;i<tokens.length;i++){el.addClass(tokens[i]);}}else{el.addClass(thing);}}}}};applyFieldClass(this.getEl(),this.options["fieldClass"]);var customStyles=this.view.getStyles();if(customStyles){for(var styleClass in customStyles){$(styleClass,this.container).css(customStyles[styleClass]);}}if(this.labelDiv&&this.schema.required){this.getStyleInjection("required",this.labelDiv);}if(this.options.disabled){this.disable();}if(this.view.type&&this.view.type=="edit"){this.bindData();}else{if(this.showingDefaultData){this.bindData();}}if(this.view.type=="create"){Alpaca.logDebug("Skipping data binding for field: "+this.id+" since view mode is 'create'");}if(this.view.type&&this.view.type!="view"){this.initEvents();}}if(this.options.hidden){this.getEl().hide();}this.initializing=false;var defaultHideInitValidationError=(this.view.type=="create");this.hideInitValidationError=Alpaca.isValEmpty(this.options.hideInitValidationError)?defaultHideInitValidationError:this.options.hideInitValidationError;if(!this.view.displayReadonly){$(".alpaca-field-readonly",this.getEl()).hide();}if(this.options.postRender){this.options.postRender.call(this,function(){callback();});}else{callback();}},getEl:function(){return this.outerEl;},setEl:function(outerEl){this.outerEl=outerEl;},getId:function(){return this.id;},getParent:function(){return this.parent;},isTopLevel:function(){return Alpaca.isEmpty(this.parent);},getValue:function(){return this.data;},setValue:function(value){this.data=value;this.triggerUpdate();},setDefault:function(){},getTemplateDescriptor:function(){return this.templateDescriptor;},setTemplateDescriptor:function(templateDescriptor){this.templateDescriptor=templateDescriptor;},displayMessage:function(messages,beforeStatus){var _this=this;_this.getEl().children(".alpaca-controlfield-message-element").remove();if(messages&&messages.length>0){$.each(messages,function(index,message){if(message.length>0){var messageTemplateDescriptor=_this.view.getTemplateDescriptor("controlFieldMessage");if(messageTemplateDescriptor){_this.messageElement=_this.view.tmpl(messageTemplateDescriptor,{"message":message});_this.getStyleInjection("errorMessage",_this.messageElement);if(_this.hideInitValidationError){_this.messageElement.addClass("alpaca-controlfield-message-hidden");}else{_this.messageElement.addClass("alpaca-controlfield-message");}_this.messageElement.addClass("alpaca-controlfield-message-element");_this.messageElement.attr("id",_this.getId()+"-field-message-"+index);if($(".alpaca-controlfield-message-container",_this.getEl()).length){_this.messageElement.appendTo($(".alpaca-controlfield-message-container",_this.getEl()));}else{_this.messageElement.appendTo(_this.getEl());}}_this.getStyleInjection("addErrorMessage",_this.getEl(),message);}});}},refreshValidationState:function(children){if(children){var f=function(field,contexts){if(field.children&&field.children.length>0){for(var i=0;i<field.children.length;i++){if(field.children[i].isValidationParticipant()){f(field.children[i],contexts);}}}if(typeof(contexts)=="object"){var context=Alpaca.compileValidationContext(field);contexts.push(context);}return contexts;};var contexts=f(this,[]);var mergedMap={};var mergedContext=[];for(var i=0;i<contexts.length;i++){var context=contexts[i];var mIndex=mergedContext.length;for(var j=0;j<context.length;j++){var entry=context[j];var existing=mergedMap[entry.id];if(!existing){var newEntry={};newEntry.id=entry.id;newEntry.path=entry.path;newEntry.container=entry.container;newEntry.field=entry.field;newEntry.validated=entry.validated;newEntry.invalidated=entry.invalidated;newEntry.valid=entry.valid;mergedContext.splice(mIndex,0,newEntry);mergedMap[newEntry.id]=newEntry;}else{if(entry.validated&&!existing.invalidated){existing.validated=true;existing.invalidated=false;existing.valid=entry.valid;}if(entry.invalidated){existing.invalidated=true;existing.validated=false;existing.valid=entry.valid;}}}}mergedContext.reverse();Alpaca.updateValidationStateForContext(mergedContext);}else{var context=Alpaca.compileValidationContext(this);Alpaca.updateValidationStateForContext(context);}},showHiddenMessages:function(){var hiddenDiv=$(".alpaca-field-invalid-hidden",this.outerEl);hiddenDiv.removeClass("alpaca-field-invalid-hidden");this.getStyleInjection("error",hiddenDiv);hiddenDiv.addClass("alpaca-field-invalid");$(".alpaca-controlfield-message-hidden",this.outerEl).removeClass("alpaca-controlfield-message-hidden").addClass("alpaca-controlfield-message");},validate:function(validateChildren){var status=true;if(!this.initializing&&this.options.validate){if(this.children&&validateChildren){for(var i=0;i<this.children.length;i++){var child=this.children[i];if(child.isValidationParticipant()){child.validate(validateChildren);}}}status=this.handleValidate();if(!status&&Alpaca.logLevel==Alpaca.DEBUG){var messages=[];for(var messageId in this.validation){if(!this.validation[messageId]["status"]){messages.push(this.validation[messageId]["message"]);}}Alpaca.logDebug("Validation failure for field (id="+this.getId()+", path="+this.path+"), messages: "+JSON.stringify(messages));}}this._previouslyValidated=true;return status;},handleValidate:function(){var valInfo=this.validation;var status=this._validateOptional();valInfo["notOptional"]={"message":status?"":this.view.getMessage("notOptional"),"status":status};status=this._validateDisallow();valInfo["disallowValue"]={"message":status?"":Alpaca.substituteTokens(this.view.getMessage("disallowValue"),[this.schema["disallow"].join(",")]),"status":status};return valInfo["notOptional"]["status"]&&valInfo["disallowValue"]["status"];},_validateCustomValidator:function(callback){var _this=this;if(this.options.validator&&Alpaca.isFunction(this.options.validator)){this.options.validator(this,function(valInfo){_this.validation["custom"]=valInfo;callback();});}else{callback();}},_validateOptional:function(){if(this.schema.required&&this.isEmpty()){return false;}return true;},_validateDisallow:function(){if(!Alpaca.isValEmpty(this.schema.disallow)){var val=this.getValue();var disallow=this.schema.disallow;if(Alpaca.isArray(disallow)){var isAllowed=true;$.each(disallow,function(index,value){if((Alpaca.isObject(val)||Alpaca.isArray(val))&&Alpaca.isString(value)){value=Alpaca.parseJSON(value);}if(Alpaca.compareObject(val,value)){isAllowed=false;}});return isAllowed;}else{if((Alpaca.isObject(val)||Alpaca.isArray(val))&&Alpaca.isString(disallow)){disallow=Alpaca.parseJSON(disallow);}return !Alpaca.compareObject(val,disallow);}}return true;},triggerUpdate:function(){this.getEl().trigger("fieldupdate");},disable:function(){},enable:function(){},focus:function(){},destroy:function(){if(Alpaca&&Alpaca.fieldInstances){if(Alpaca.fieldInstances[this.getId()]){delete Alpaca.fieldInstances[this.getId()];}}this.getEl().remove();},show:function(){if(this.options&&this.options.hidden){return;}else{this.getEl().css({"display":""});this.onShow();}},onShow:function(){},hide:function(){this.getEl().css({"display":"none"});this.onHide();},onHide:function(){},isValidationParticipant:function(){return this.isShown();},isShown:function(){return this.isVisible();},isVisible:function(){return !this.isHidden();},isHidden:function(){return"none"==this.getEl().css("display");},print:function(){if(this.container.printArea){this.container.printArea();}},onDependentReveal:function(){},onDependentConceal:function(){},reload:function(){this.initializing=true;if(!Alpaca.isEmpty(this.callback)){this.callback(this,this.renderedCallback);}else{this.render(this.renderedCallback);}},clear:function(){var newValue=null;if(this.data){newValue=this.data;}this.setValue(newValue);},isEmpty:function(){return Alpaca.isValEmpty(this.getValue());},isValid:function(checkChildren){if(checkChildren&&this.children){for(var i=0;i<this.children.length;i++){var child=this.children[i];if(child.isValidationParticipant()){if(!child.isValid(checkChildren)){return false;}}}}if($.isEmptyObject(this.validation)){return true;}else{for(var key in this.validation){if(!this.validation[key].status){return false;}}return true;}},initEvents:function(){var _this=this;if(this.field){this.field.change(function(e){_this.onChange.call(_this,e);_this.trigger("change",e);});this.field.focus(function(e){_this.onFocus.call(_this,e);_this.trigger("focus",e);});this.field.blur(function(e){_this.onBlur.call(_this,e);_this.trigger("blur",e);});this.field.mouseover(function(e){_this.onMouseOver.call(_this,e);_this.trigger("mouseover",e);});this.field.mouseout(function(e){_this.onMouseOut.call(_this,e);_this.trigger("mouseout",e);});$.each(this.options,function(key,func){if(Alpaca.startsWith(key,"onField")&&Alpaca.isFunction(func)){var event=key.substring(7).toLowerCase();_this.field.on(event,function(e){func.call(_this,e);});}});}},onFocus:function(e){this.getEl().removeClass("alpaca-field-empty");this.getEl().addClass("alpaca-field-focused");},onBlur:function(e){this.getEl().removeClass("alpaca-field-focused");this.refreshValidationState();},onChange:function(e){this.data=this.getValue();this.triggerUpdate();},onMouseOver:function(e){},onMouseOut:function(e){},getControlByPath:function(path){var parentControl=this;if(path){var pathArray=path.split("/");for(var i=0;i<pathArray.length;i++){if(!Alpaca.isValEmpty(pathArray[i])){if(parentControl&&parentControl.childrenByPropertyId){if(parentControl.childrenByPropertyId[pathArray[i]]){parentControl=parentControl.childrenByPropertyId[pathArray[i]];}else{return null;}}else{return null;}}else{return null;}}return parentControl;}},getFieldType:function(){},getType:function(){},isContainer:function(){return false;},getTitle:function(){},getDescription:function(){},getSchemaOfSchema:function(){var schemaOfSchema={"title":this.getTitle(),"description":this.getDescription(),"type":"object","properties":{"title":{"title":"Title","description":"Short description of the property.","type":"string"},"description":{"title":"Description","description":"Detailed description of the property.","type":"string"},"readonly":{"title":"Readonly","description":"Property will be readonly if true.","type":"boolean","default":false},"required":{"title":"Required","description":"Property value must be set if true.","type":"boolean","default":false},"default":{"title":"Default","description":"Default value of the property.","type":"any"},"type":{"title":"Type","description":"Data type of the property.","type":"string","readonly":true},"format":{"title":"Format","description":"Data format of the property.","type":"string"},"disallow":{"title":"Disallowed Values","description":"List of disallowed values for the property.","type":"array"},"dependencies":{"title":"Dependencies","description":"List of property dependencies.","type":"array"}}};if(this.getType&&!Alpaca.isValEmpty(this.getType())){schemaOfSchema.properties.type["default"]=this.getType();schemaOfSchema.properties.type["enum"]=[this.getType()];}return schemaOfSchema;},getOptionsForSchema:function(){return{"fields":{"title":{"helper":"Field short description","type":"text"},"description":{"helper":"Field detailed description","type":"textarea"},"readonly":{"helper":"Field will be read only if checked","rightLabel":"This field is read-only","type":"checkbox"},"required":{"helper":"Field value must be set if checked","rightLabel":"This field is required","type":"checkbox"},"default":{"helper":"Field default value","type":"textarea"},"type":{"helper":"Field data type","type":"text"},"format":{"type":"select","dataSource":function(field,callback){for(var key in Alpaca.defaultFormatFieldMapping){field.selectOptions.push({"value":key,"text":key});}if(callback){callback();}}},"disallow":{"helper":"Disallowed values for the field","itemLabel":"Value","type":"array"},"dependencies":{"helper":"Field Dependencies","multiple":true,"size":3,"type":"select","dataSource":function(field,callback){if(field.parent&&field.parent.schemaParent&&field.parent.schemaParent.parent){for(var key in field.parent.schemaParent.parent.childrenByPropertyId){if(key!=field.parent.schemaParent.propertyId){field.selectOptions.push({"value":key,"text":key});}}}if(callback){callback();}}}}};},getSchemaOfOptions:function(){var schemaOfOptions={"title":"Options for "+this.getTitle(),"description":this.getDescription()+" (Options)","type":"object","properties":{"renderForm":{},"form":{},"id":{"title":"Field Id","description":"Unique field id. Auto-generated if not provided.","type":"string"},"type":{"title":"Field Type","description":"Field type.","type":"string","default":this.getFieldType(),"readonly":true},"validate":{"title":"Validation","description":"Field validation is required if true.","type":"boolean","default":true},"showMessages":{"title":"Show Messages","description":"Display validation messages if true.","type":"boolean","default":true},"disabled":{"title":"Disabled","description":"Field will be disabled if true.","type":"boolean","default":false},"readonly":{"title":"Readonly","description":"Field will be readonly if true.","type":"boolean","default":false},"hidden":{"title":"Hidden","description":"Field will be hidden if true.","type":"boolean","default":false},"label":{"title":"Label","description":"Field label.","type":"string"},"helper":{"title":"Helper","description":"Field help message.","type":"string"},"fieldClass":{"title":"CSS class","description":"Specifies one or more CSS classes that should be applied to the dom element for this field once it is rendered.  Supports a single value, comma-delimited values, space-delimited values or values passed in as an array.","type":"string"},"hideInitValidationError":{"title":"Hide Initial Validation Errors","description":"Hide initial validation errors if true.","type":"boolean","default":false},"focus":{"title":"Focus","description":"If true, the initial focus for the form will be set to the first child element (usually the first field in the form).  If a field name or path is provided, then the specified child field will receive focus.  For example, you might set focus to 'name' (selecting the 'name' field) or you might set it to 'client/name' which picks the 'name' field on the 'client' object.","type":"checkbox","default":true},"optionLabels":{"title":"Enumerated Value Labels","description":"An array of string labels for items in the enum array","type":"array"}}};if(this.isTopLevel()){schemaOfOptions.properties.renderForm={"title":"Render Form","description":"Render a FORM tag as the container for the rest of fields if true.","type":"boolean","default":false};schemaOfOptions.properties.form={"title":"Form","description":"Options for rendering the FORM tag.","type":"object","dependencies":"renderForm","properties":{"attributes":{"title":"Form Attributes","description":"List of attributes for the FORM tag.","type":"object","properties":{"id":{"title":"Id","description":"Unique form id. Auto-generated if not provided.","type":"string"},"action":{"title":"Action","description":"Form submission endpoint","type":"string"},"method":{"title":"Method","description":"Form submission method","enum":["post","get"],"type":"string"},"rubyrails":{"title":"Ruby On Rails","description":"Ruby on Rails Name Standard","enum":["true","false"],"type":"string"},"name":{"title":"Name","description":"Form name","type":"string"},"focus":{"title":"Focus","description":"Focus Setting","type":"any"}}},"buttons":{"title":"Form Buttons","description":"Configuration for form-bound buttons","type":"object","properties":{"submit":{"type":"object","title":"Submit Button","required":false},"reset":{"type":"object","title":"Reset button","required":false}}},"toggleSubmitValidState":{"title":"Toggle Submit Valid State","description":"Toggle the validity state of the Submit button","type":"boolean","default":true}}};}else{delete schemaOfOptions.properties.renderForm;delete schemaOfOptions.properties.form;}return schemaOfOptions;},getOptionsForOptions:function(){var optionsForOptions={"type":"object","fields":{"id":{"type":"text","readonly":true},"type":{"type":"text"},"validate":{"rightLabel":"Enforce validation","type":"checkbox"},"showMessages":{"rightLabel":"Show validation messages","type":"checkbox"},"disabled":{"rightLabel":"Disable this field","type":"checkbox"},"hidden":{"type":"checkbox","rightLabel":"Hide this field"},"label":{"type":"text"},"helper":{"type":"textarea"},"fieldClass":{"type":"text"},"hideInitValidationError":{"rightLabel":"Hide initial validation errors","type":"checkbox"},"focus":{"type":"checkbox","rightLabel":"Auto-focus first child field"},"optionLabels":{"type":"array","items":{"type":"string"}}}};if(this.isTopLevel()){optionsForOptions.fields.renderForm={"type":"checkbox","rightLabel":"Yes"};optionsForOptions.fields.form={"type":"object","dependencies":{"renderForm":true},"fields":{"attributes":{"type":"object","fields":{"id":{"type":"text","readonly":true},"action":{"type":"text"},"method":{"type":"select"},"name":{"type":"text"}}}}};}return optionsForOptions;}});Alpaca.registerMessages({"disallowValue":"{0} are disallowed values.","notOptional":"This field is not optional."});})(jQuery);(function($){var Alpaca=$.alpaca;Alpaca.ControlField=Alpaca.Field.extend({constructor:function(container,data,options,schema,view,connector,errorCallback){this.base(container,data,options,schema,view,connector,errorCallback);this.isControlField=true;},setDefault:function(){var defaultData=Alpaca.isEmpty(this.schema["default"])?"":this.schema["default"];this.setValue(defaultData);},renderField:function(onSuccess){if(onSuccess){onSuccess();}},injectField:function(element){var containerElem=$(".alpaca-controlfield-container",this.outerEl);if(containerElem.length){this.fieldContainer=containerElem;}else{this.fieldContainer=this.outerEl;}var parentNode=$(".alpaca-field-container-field",this.fieldContainer);if(parentNode.length>0){if(parentNode.attr("data-replace")=="true"){parentNode.replaceWith(element);}else{element.appendTo(parentNode);}}else{if(this.fieldContainer.attr("data-replace")=="true"){this.fieldContainer.replaceWith(element);}else{element.prependTo(this.fieldContainer);}}},postRender:function(callback){var self=this;var labelDiv=$(".alpaca-controlfield-label",this.outerEl);if(labelDiv.length){this.labelDiv=labelDiv;}var helperDiv=$(".alpaca-controlfield-helper",this.outerEl);if(helperDiv.length){this.helperDiv=helperDiv;}this.base(function(){self.outerEl.addClass("alpaca-controlfield");callback();});},_validateEnum:function(){if(this.schema["enum"]){var val=this.data;if(!this.schema.required&&Alpaca.isValEmpty(val)){return true;}if($.inArray(val,this.schema["enum"])>-1){return true;}else{return false;}}else{return true;}},handleValidate:function(){var baseStatus=this.base();var valInfo=this.validation;var status=this._validateEnum();valInfo["invalidValueOfEnum"]={"message":status?"":Alpaca.substituteTokens(this.view.getMessage("invalidValueOfEnum"),[this.schema["enum"].join(",")]),"status":status};return baseStatus&&valInfo["invalidValueOfEnum"]["status"];},initEvents:function(){this.base();var _this=this;if(this.field){this.field.keypress(function(e){_this.onKeyPress.call(_this,e);_this.trigger("keypress",e);});this.field.keyup(function(e){_this.onKeyUp.call(_this,e);_this.trigger("keyup",e);});this.field.keydown(function(e){_this.onKeyDown.call(_this,e);_this.trigger("keydown",e);});this.field.click(function(e){_this.onClick.call(_this,e);_this.trigger("click",e);});}},onKeyPress:function(e){var self=this;var wasValid=this.isValid();if(!wasValid){window.setTimeout(function(){self.refreshValidationState();},50);}},onKeyDown:function(e){},onKeyUp:function(e){},onClick:function(e){},getSchemaOfSchema:function(){return Alpaca.merge(this.base(),{"properties":{"enum":{"title":"Enumerated Values","description":"List of specific values for this property","type":"array"}}});},getOptionsForSchema:function(){return Alpaca.merge(this.base(),{"fields":{"enum":{"itemLabel":"Value","type":"array"}}});},getSchemaOfOptions:function(){return Alpaca.merge(this.base(),{"properties":{"name":{"title":"Field Name","description":"Field Name.","type":"string"}}});},getOptionsForOptions:function(){return Alpaca.merge(this.base(),{"fields":{"name":{"type":"text"}}});}});Alpaca.registerMessages({"invalidValueOfEnum":"This field should have one of the values in {0}."});})(jQuery);(function($){var Alpaca=$.alpaca;Alpaca.ContainerField=Alpaca.Field.extend({constructor:function(container,data,options,schema,view,connector,errorCallback){this.base(container,data,options,schema,view,connector,errorCallback);},setup:function(){this.base();var collapsible=true;if(!Alpaca.isEmpty(this.view.collapsible)){collapsible=this.view.collapsible;}if(!Alpaca.isEmpty(this.options.collapsible)){collapsible=this.options.collapsible;}this.options.collapsible=collapsible;var legendStyle="button";if(!Alpaca.isEmpty(this.view.legendStyle)){legendStyle=this.view.legendStyle;}if(!Alpaca.isEmpty(this.options.legendStyle)){legendStyle=this.options.legendStyle;}this.options.legendStyle=legendStyle;this.lazyLoading=false;if(!Alpaca.isEmpty(this.options.lazyLoading)){this.lazyLoading=this.options.lazyLoading;if(this.lazyLoading){this.options.collapsed=true;}}this.children=[];this.childrenById=[];this.childrenByPropertyId=[];this.expandedIcon="";this.collapsedIcon="";this.commonIcon="";this.addIcon="";this.removeIcon="";this.upIcon="";this.downIcon="";if(this.view.style&&Alpaca.styleInjections[this.view.style]){if(Alpaca.styleInjections[this.view.style]["commonIcon"]){this.commonIcon=Alpaca.styleInjections[this.view.style]["commonIcon"];}if(Alpaca.styleInjections[this.view.style]["containerExpandedIcon"]){this.expandedIcon=Alpaca.styleInjections[this.view.style]["containerExpandedIcon"];}if(Alpaca.styleInjections[this.view.style]["containerCollapsedIcon"]){this.collapsedIcon=Alpaca.styleInjections[this.view.style]["containerCollapsedIcon"];}if(Alpaca.styleInjections[this.view.style]["buttonBeautifier"]){this.buttonBeautifier=Alpaca.styleInjections[this.view.style]["buttonBeautifier"];}if(Alpaca.styleInjections[this.view.style]["addIcon"]){this.addIcon=Alpaca.styleInjections[this.view.style]["addIcon"];}if(Alpaca.styleInjections[this.view.style]["removeIcon"]){this.removeIcon=Alpaca.styleInjections[this.view.style]["removeIcon"];}if(Alpaca.styleInjections[this.view.style]["upIcon"]){this.upIcon=Alpaca.styleInjections[this.view.style]["upIcon"];}if(Alpaca.styleInjections[this.view.style]["downIcon"]){this.downIcon=Alpaca.styleInjections[this.view.style]["downIcon"];}}},getDefaultFieldTemplateId:function(){return"fieldSet";},setDefaultTemplateDescriptor:function(){this.base();},addChild:function(child,index){if(!Alpaca.isEmpty(index)){this.children.splice(index,0,child);}else{this.children.push(child);}this.childrenById[child.getId()]=child;if(child.propertyId){this.childrenByPropertyId[child.propertyId]=child;}child.parent=this;},initEvents:function(){var _this=this;if(this.labelDiv){if(this.options.collapsible){this.labelDiv.addClass("legend-expanded");this.fieldSetDiv.addClass("fieldset-expanded");var initIcon=this.expandedIcon;if(!Alpaca.isEmpty(this.options.collapsed)&&this.options.collapsed){initIcon=this.collapsedIcon;this.labelDiv.nextAll(".alpaca-fieldset-helper").slideToggle(500);this.labelDiv.nextAll(".alpaca-fieldset-items-container").slideToggle(500);this.labelDiv.nextAll(".alpaca-fieldset-array-toolbar").slideToggle(500);this.fieldSetDiv.toggleClass("fieldset-expanded");this.fieldSetDiv.toggleClass("fieldset-collapsed");this.labelDiv.toggleClass("legend-expanded");this.labelDiv.toggleClass("legend-collapsed");}if(this.options.legendStyle=="link"){$('<span class="'+this.commonIcon+" "+initIcon+' alpaca-fieldset-legend-link"></span>').prependTo(this.labelDiv);this.labelDiv.click(function(){_this.fieldSetDiv.toggleClass("fieldset-collapsed");_this.fieldSetDiv.toggleClass("fieldset-expanded");$(this).toggleClass("legend-collapsed");$(this).toggleClass("legend-expanded");$(".alpaca-fieldset-legend-link",this).toggleClass(_this.collapsedIcon).toggleClass(_this.expandedIcon);$(this).nextAll(".alpaca-fieldset-helper").slideToggle(500);$(this).nextAll(".alpaca-fieldset-items-container").slideToggle(500);$(this).nextAll(".alpaca-fieldset-array-toolbar").slideToggle(500);});}if(this.options.legendStyle=="button"){if(this.buttonBeautifier){this.buttonBeautifier.call(this,this.labelDiv,initIcon,true);}this.labelDiv.click(function(){_this.fieldSetDiv.toggleClass("fieldset-collapsed");_this.fieldSetDiv.toggleClass("fieldset-expanded");$(this).toggleClass("legend-collapsed");$(this).toggleClass("legend-expanded");$(".alpaca-fieldset-legend-button",this).toggleClass(_this.collapsedIcon).toggleClass(_this.expandedIcon);$(this).nextAll(".alpaca-fieldset-helper").slideToggle(500);$(this).nextAll(".alpaca-fieldset-items-container").slideToggle(500);$(this).nextAll(".alpaca-fieldset-array-toolbar").slideToggle(500);});}}}},clear:function(stopUpdateTrigger){Alpaca.each(this.children,function(){this.clear(false);});if(!stopUpdateTrigger){this.triggerUpdate();}},setDefault:function(){if(Alpaca.isEmpty(this.schema["default"])){Alpaca.each(this.children,function(){this.setDefault();});}else{this.setValue(this.schema["default"]);}},destroy:function(){if(this.form){this.form.destroy(true);delete this.form;}Alpaca.each(this.children,function(){this.destroy();});this.base();},renderItemContainer:function(insertAfterId,parent,propertyId){var _this=this;var itemContainerTemplateDescriptor=this.view.getTemplateDescriptor("fieldSetItemContainer");if(itemContainerTemplateDescriptor){var containerElem=_this.view.tmpl(itemContainerTemplateDescriptor,{});if(containerElem.attr("data-replace")=="true"){return this.fieldContainer;}else{if(insertAfterId){$("#"+insertAfterId+"-item-container",this.outerEl).after(containerElem);}else{var appendToContainer=this.fieldContainer;var bindings=this.view.getLayout().bindings;if(bindings){var binding=bindings[propertyId];if(binding&&$("#"+binding,appendToContainer).length>0){appendToContainer=$("#"+binding,appendToContainer);}}containerElem.appendTo(appendToContainer);}}return containerElem;}else{return this.fieldContainer;}},renderField:function(onSuccess){var _this=this;this.getStyleInjection("container",this.outerEl);var labelDiv=$(".alpaca-fieldset-legend",this.outerEl);if(labelDiv.length){this.labelDiv=labelDiv;}else{this.outerEl.addClass("alpaca-fieldset-no-legend");}var fieldSetDiv=$(".alpaca-fieldset",this.outerEl);if(fieldSetDiv.length){this.fieldSetDiv=fieldSetDiv;}else{this.fieldSetDiv=this.outerEl;}var fieldContainer=$(".alpaca-fieldset-items-container",this.outerEl);if(fieldContainer.length){this.fieldContainer=fieldContainer;}else{this.fieldContainer=this.outerEl;}var asyncHandler=false;if(!this.singleLevelRendering&&!this.lazyLoading){asyncHandler=true;this.renderItems(function(){if(onSuccess){onSuccess();}});}if(this.lazyLoading){if(this.labelDiv){asyncHandler=true;$(this.labelDiv).click(function(){if(_this.lazyLoading){_this.renderItems(function(){_this.lazyLoading=false;if(onSuccess){onSuccess();}});}});}}if(!asyncHandler){if(onSuccess){onSuccess();}}},onDependentReveal:function(){for(var i=0;i<this.children.length;i++){this.children[i].onDependentReveal();}},onDependentConceal:function(){for(var i=0;i<this.children.length;i++){this.children[i].onDependentConceal();}},renderItems:function(onSuccess){},isContainer:function(){return true;},getSchemaOfOptions:function(){return Alpaca.merge(this.base(),{"properties":{"lazyLoading":{"title":"Lazy Loading","description":"Child fields will only be rendered when the fieldset is expanded if this option is set true.","type":"boolean","default":false},"collapsible":{"title":"Collapsible","description":"Field set is collapsible if true.","type":"boolean","default":true},"collapsed":{"title":"Collapsed","description":"Field set is initially collapsed if true.","type":"boolean","default":false},"legendStyle":{"title":"Legend Style","description":"Field set legend style.","type":"string","enum":["button","link"],"default":"button"}}});},getOptionsForOptions:function(){return Alpaca.merge(this.base(),{"fields":{"lazyLoading":{"rightLabel":"Lazy loading child fields ?","helper":"Lazy loading will be enabled if checked.","type":"checkbox"},"collapsible":{"rightLabel":"Field set collapsible ?","helper":"Field set is collapsible if checked.","type":"checkbox"},"collapsed":{"rightLabel":"Field set initially collapsed ?","description":"Field set is initially collapsed if checked.","type":"checkbox"},"legendStyle":{"type":"select"}}});}});})(jQuery);(function($){var Alpaca=$.alpaca;Alpaca.Connector=Base.extend({constructor:function(id){this.id=id;this.isUri=function(resource){return !Alpaca.isEmpty(resource)&&Alpaca.isUri(resource);};var ONE_HOUR=3600000;this.cache=new ajaxCache("URL",true,ONE_HOUR);},connect:function(onSuccess,onError){if(onSuccess&&Alpaca.isFunction(onSuccess)){onSuccess();}},loadTemplate:function(source,onSuccess,onError){if(!Alpaca.isEmpty(source)){if(Alpaca.isUri(source)){this.loadUri(source,false,function(loadedData){if(onSuccess&&Alpaca.isFunction(onSuccess)){onSuccess(loadedData);}},function(loadError){if(onError&&Alpaca.isFunction(onError)){onError(loadError);}});}else{onSuccess(source);}}else{onError({"message":"Empty data source.","reason":"TEMPLATE_LOADING_ERROR"});}},loadData:function(resource,successCallback,errorCallback){return this._handleLoadJsonResource(resource,successCallback,errorCallback);},loadSchema:function(resource,successCallback,errorCallback){return this._handleLoadJsonResource(resource,successCallback,errorCallback);},loadOptions:function(resource,successCallback,errorCallback){return this._handleLoadJsonResource(resource,successCallback,errorCallback);},loadView:function(resource,successCallback,errorCallback){return this._handleLoadJsonResource(resource,successCallback,errorCallback);},loadAll:function(resources,onSuccess,onError){var dataSource=resources.dataSource;var schemaSource=resources.schemaSource;var optionsSource=resources.optionsSource;var viewSource=resources.viewSource;if(!schemaSource){schemaSource=resources.schema;}if(!optionsSource){optionsSource=resources.options;}if(!viewSource){viewSource=resources.view;}var loaded={};var loadCounter=0;var invocationCount=0;var successCallback=function(){if(loadCounter===invocationCount){if(onSuccess&&Alpaca.isFunction(onSuccess)){onSuccess(loaded.data,loaded.options,loaded.schema,loaded.view);}}};var errorCallback=function(loadError){if(onError&&Alpaca.isFunction(onError)){onError(loadError);}};if(dataSource){invocationCount++;}if(schemaSource){invocationCount++;}if(optionsSource){invocationCount++;}if(viewSource){invocationCount++;}if(invocationCount===0){successCallback();return;}if(dataSource){this.loadData(dataSource,function(data){loaded.data=data;loadCounter++;successCallback();},errorCallback);}if(schemaSource){this.loadSchema(schemaSource,function(schema){loaded.schema=schema;loadCounter++;successCallback();},errorCallback);}if(optionsSource){this.loadOptions(optionsSource,function(options){loaded.options=options;loadCounter++;successCallback();},errorCallback);}if(viewSource){this.loadView(viewSource,function(view){loaded.view=view;loadCounter++;successCallback();},errorCallback);}},loadJson:function(uri,onSuccess,onError){this.loadUri(uri,true,onSuccess,onError);},loadUri:function(uri,isJson,onSuccess,onError){var self=this;var ajaxConfigs={"url":uri,"type":"get","success":function(jsonDocument){self.cache.put(uri,jsonDocument);if(onSuccess&&Alpaca.isFunction(onSuccess)){onSuccess(jsonDocument);}},"error":function(jqXHR,textStatus,errorThrown){if(onError&&Alpaca.isFunction(onError)){onError({"message":"Unable to load data from uri : "+uri,"stage":"DATA_LOADING_ERROR","details":{"jqXHR":jqXHR,"textStatus":textStatus,"errorThrown":errorThrown}});}}};if(isJson){ajaxConfigs.dataType="json";}else{ajaxConfigs.dataType="text";}var cachedDocument=self.cache.get(uri);if(cachedDocument!==false&&onSuccess&&Alpaca.isFunction(onSuccess)){onSuccess(cachedDocument);}else{$.ajax(ajaxConfigs);}},loadReferenceSchema:function(resource,successCallback,errorCallback){return this._handleLoadJsonResource(resource,successCallback,errorCallback);},loadReferenceOptions:function(resource,successCallback,errorCallback){return this._handleLoadJsonResource(resource,successCallback,errorCallback);},_handleLoadJsonResource:function(resource,successCallback,errorCallback){if(this.isUri(resource)){this.loadJson(resource,function(loadedResource){successCallback(loadedResource);},errorCallback);}else{successCallback(resource);}}});Alpaca.registerConnectorClass("default",Alpaca.Connector);
/*!
     * ajax-cache JavaScript Library v0.2.1
     * http://code.google.com/p/ajax-cache/
     *
     * Includes few JSON methods (open source)
     * http://www.json.org/js.html
     *
     * Date: 2010-08-03
     */
function ajaxCache(type,on,lifetime){if(on){this.on=true;}else{this.on=false;}if(lifetime!=null){this.defaultLifetime=lifetime;}this.type=type;switch(this.type){case"URL":this.put=this.put_url;break;case"GET":this.put=this.put_GET;break;}}ajaxCache.prototype.on=false;ajaxCache.prototype.type;ajaxCache.prototype.defaultLifetime=1800000;ajaxCache.prototype.items=Object();ajaxCache.prototype.put_url=function(url,response,lifetime){if(lifetime==null){lifetime=this.defaultLifetime;}var key=this.make_key(url);this.items[key]=Object();this.items[key].key=key;this.items[key].url=url;this.items[key].response=response;this.items[key].expire=(new Date().getTime())+lifetime;return true;};ajaxCache.prototype.put_GET=function(url,data,response,lifetime){if(lifetime==null){lifetime=this.defaultLifetime;}var key=this.make_key(url,[data]);this.items[key]=Object();this.items[key].key=key;this.items[key].url=url;this.items[key].data=data;this.items[key].response=response;this.items[key].expire=(new Date().getTime())+lifetime;return true;};ajaxCache.prototype.get=function(url,params){var key=this.make_key(url,params);if(this.items[key]==null){return false;}if(this.items[key].expire<(new Date().getTime())){return false;}return this.items[key].response;};ajaxCache.prototype.make_key=function(url,params){var key=url;switch(this.type){case"URL":break;case"GET":key+=this.stringify(params[0]);break;}return key;};ajaxCache.prototype.flush=function(){cache.items=Object();return true;};ajaxCache.prototype.stringify=function(value,replacer,space){var i;gap="";indent="";if(typeof space==="number"){for(i=0;i<space;i+=1){indent+=" ";}}else{if(typeof space==="string"){indent=space;}}rep=replacer;if(replacer&&typeof replacer!=="function"&&(typeof replacer!=="object"||typeof replacer.length!=="number")){throw new Error("JSON.stringify");}return this.str("",{"":value});};ajaxCache.prototype.quote=function(string){var escapable=/[\\\"\x00-\x1f\x7f-\x9f\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g;escapable.lastIndex=0;return escapable.test(string)?'"'+string.replace(escapable,function(a){var c=meta[a];return typeof c==="string"?c:"\\u"+("0000"+a.charCodeAt(0).toString(16)).slice(-4);})+'"':'"'+string+'"';};ajaxCache.prototype.str=function(key,holder){var i,k,v,length,mind=gap,partial,value=holder[key];if(value&&typeof value==="object"&&typeof value.toJSON==="function"){value=value.toJSON(key);}if(typeof rep==="function"){value=rep.call(holder,key,value);}switch(typeof value){case"string":return this.quote(value);case"number":return isFinite(value)?String(value):"null";case"boolean":case"null":return String(value);case"object":if(!value){return"null";}gap+=indent;partial=[];if(Object.prototype.toString.apply(value)==="[object Array]"){length=value.length;for(i=0;i<length;i+=1){partial[i]=this.str(i,value)||"null";}v=partial.length===0?"[]":gap?"[\n"+gap+partial.join(",\n"+gap)+"\n"+mind+"]":"["+partial.join(",")+"]";gap=mind;return v;}if(rep&&typeof rep==="object"){length=rep.length;for(i=0;i<length;i+=1){k=rep[i];if(typeof k==="string"){v=this.str(k,value);if(v){partial.push(this.quote(k)+(gap?": ":":")+v);}}}}else{for(k in value){if(Object.hasOwnProperty.call(value,k)){v=this.str(k,value);if(v){partial.push(this.quote(k)+(gap?": ":":")+v);}}}}v=partial.length===0?"{}":gap?"{\n"+gap+partial.join(",\n"+gap)+"\n"+mind+"}":"{"+partial.join(",")+"}";gap=mind;return v;}};})(jQuery);(function($){var Alpaca=$.alpaca;Alpaca.Form=Base.extend({constructor:function(container,options,viewId,connector,errorCallback){var _this=this;this.container=container;this.parent=null;this.connector=connector;this.errorCallback=errorCallback;this.options=options;if(this.options.attributes){this.attributes=this.options.attributes;}else{this.attributes={};}if(this.options.buttons){if(this.options.buttons.submit){if(!this.options.buttons.submit.type){this.options.buttons.submit.type="submit";}if(!this.options.buttons.submit.name){this.options.buttons.submit.name="submit";}if(!this.options.buttons.submit.value){this.options.buttons.submit.value="Submit";}}if(this.options.buttons.reset){if(!this.options.buttons.reset.type){this.options.buttons.reset.type="reset";}if(!this.options.buttons.reset.name){this.options.buttons.reset.name="reset";}if(!this.options.buttons.reset.value){this.options.buttons.reset.value="Reset";}}}if(this.attributes.id){this.id=this.attributes.id;}else{this.id=Alpaca.generateId();this.attributes.id=this.id;}if(this.options.buttons&&this.options.buttons.submit&&Alpaca.isUndefined(this.options.toggleSubmitValidState)){this.options.toggleSubmitValidState=true;}this.viewType=options.viewType;this.view=new Alpaca.RuntimeView(viewId,this);},render:function(onSuccess){var _this=this;this.templateDescriptor=this.view.getTemplateDescriptor("form");if(this.outerEl){this.outerEl.remove();}this.processRender(this.container,function(){_this.outerEl.appendTo(_this.container);_this.outerEl.addClass("alpaca-form");if(onSuccess){onSuccess(_this);}});},isFormValid:function(){this.topControl.validate(true);var valid=this.topControl.isValid(true);this.refreshValidationState(true);return valid;},validate:function(children){return this.topControl.validate(children);},enableSubmitButton:function(){$(".alpaca-form-button-submit").attrProp("disabled",false);if($.mobile){try{$(".alpaca-form-button-submit").button("refresh");}catch(e){}}},disableSubmitButton:function(){$(".alpaca-form-button-submit").attrProp("disabled",true);if($.mobile){try{$(".alpaca-form-button-submit").button("refresh");}catch(e){}}},adjustSubmitButtonState:function(){this.disableSubmitButton();var x=this.isFormValid();if(this.isFormValid()){this.enableSubmitButton();}},processRender:function(parentEl,onSuccess){var _this=this;var templateDescriptor=this.getTemplateDescriptor();var context={id:this.getId(),options:this.options,view:this.view};var renderedDomElement=_this.view.tmpl(templateDescriptor,context,{});renderedDomElement.appendTo(parentEl);this.outerEl=renderedDomElement;if(Alpaca.isEmpty(this.outerEl.attr("id"))){this.outerEl.attr("id",this.getId()+"-form-outer");}if(Alpaca.isEmpty(this.outerEl.attr("alpaca-field-id"))){this.outerEl.attr("alpaca-field-id",this.getId());}if($(".alpaca-form-fields-container",this.outerEl)){this.formFieldsContainer=$(".alpaca-form-fields-container",this.outerEl);}else{this.formFieldsContainer=this.outerEl;}this.field=$("form",this.container);if(this.field){this.field.attr(this.attributes);}this.buttons={};$.each($(".alpaca-form-button",this.container),function(k,v){$(v).mousedown(function(){var _this=$(this);_this.attr("button-pushed","true");setTimeout(function(){if(_this.attr("button-pushed")&&_this.attr("button-pushed")=="true"){_this.click();}},150);});$(v).click(function(){$(this).removeAttr("button-pushed");});_this.buttons[$(v).attr("data-key")]=$(v);});onSuccess();},getEl:function(){return this.outerEl;},getId:function(){return this.id;},getType:function(){return this.type;},getParent:function(){return this.parent;},getValue:function(){return this.topControl.getValue();},setValue:function(value){this.topControl.setValue(value);},initEvents:function(){var _this=this;if(this.field){var v=this.getValue();$(this.field).submit(v,function(e){return _this.onSubmit(e,_this);});}if(this.options.toggleSubmitValidState){$(_this.topControl.getEl()).bind("fieldupdate",function(){_this.adjustSubmitButtonState();});this.adjustSubmitButtonState();}},onSubmit:function(e,form){if(this.submitHandler){e.stopPropagation();var v=this.submitHandler(e,form);if(Alpaca.isUndefined(v)){v=false;}return v;}},registerSubmitHandler:function(func){if(Alpaca.isFunction(func)){this.submitHandler=func;}},refreshValidationState:function(children){this.topControl.refreshValidationState(children);},disable:function(){this.topControl.disable();},enable:function(){this.topControl.enable();},focus:function(){this.topControl.focus();},destroy:function(skipParent){this.getEl().remove();if(!skipParent&&this.parent){this.parent.destroy();}},show:function(){this.getEl().css({"display":""});},hide:function(){this.getEl().css({"display":"none"});},clear:function(stopUpdateTrigger){this.topControl.clear(stopUpdateTrigger);},isEmpty:function(){return this.topControl.isEmpty();},getTemplateDescriptor:function(){return this.templateDescriptor;},setTemplateDescriptor:function(templateDescriptor){this.templateDescriptor=templateDescriptor;}});})(jQuery);(function($){var Alpaca=$.alpaca;Alpaca.Fields.TextField=Alpaca.ControlField.extend({constructor:function(container,data,options,schema,view,connector,errorCallback){this.base(container,data,options,schema,view,connector,errorCallback);},setup:function(){this.base();if(!this.options.size){this.options.size=40;}this.controlFieldTemplateDescriptor=this.view.getTemplateDescriptor("controlFieldText");},destroy:function(){this.base();if(this.field&&this.field.typeahead&&this.options.typeahead){$(this.field).typeahead("destroy");}},renderField:function(onSuccess){var _this=this;if(this.controlFieldTemplateDescriptor){this.field=_this.view.tmpl(this.controlFieldTemplateDescriptor,{"id":this.getId(),"name":this.name,"options":this.options});this.injectField(this.field);}if(onSuccess){onSuccess();}},postRender:function(callback){var self=this;this.base(function(){if(self.field){if(self.field&&self.field.mask&&self.options.maskString){self.field.mask(self.options.maskString);}if(self.field&&self.field.typeahead&&self.options.typeahead){var tConfig=self.options.typeahead.config;if(!tConfig){tConfig={};}var tDatasets=self.options.typeahead.datasets;if(!tDatasets){tDatasets={};}if(!tDatasets.name){tDatasets.name=self.getId();}var tEvents=self.options.typeahead.events;if(!tEvents){tEvents={};}if(tDatasets.type=="local"||tDatasets.type=="remote"||tDatasets.type=="prefetch"){var bloodHoundConfig={datumTokenizer:function(d){return Bloodhound.tokenizers.whitespace(d.value);},queryTokenizer:Bloodhound.tokenizers.whitespace};if(tDatasets.type=="local"){var local=[];for(var i=0;i<tDatasets.source.length;i++){var localElement=tDatasets.source[i];if(typeof(localElement)=="string"){localElement={"value":localElement};}local.push(localElement);}bloodHoundConfig.local=local;}if(tDatasets.type=="prefetch"){bloodHoundConfig.prefetch={url:tDatasets.source};if(tDatasets.filter){bloodHoundConfig.prefetch.filter=tDatasets.filter;}}if(tDatasets.type=="remote"){bloodHoundConfig.remote={url:tDatasets.source};if(tDatasets.filter){bloodHoundConfig.remote.filter=tDatasets.filter;}if(tDatasets.replace){bloodHoundConfig.remote.replace=tDatasets.replace;}}var engine=new Bloodhound(bloodHoundConfig);engine.initialize();tDatasets.source=engine.ttAdapter();}if(tDatasets.templates){for(var k in tDatasets.templates){var template=tDatasets.templates[k];if(typeof(template)=="string"){tDatasets.templates[k]=Handlebars.compile(template);}}}$(self.field).typeahead(tConfig,tDatasets);$(self.field).on("typeahead:autocompleted",function(event,datum){self.setValue(datum.value);});$(self.field).on("typeahead:selected",function(event,datum){self.setValue(datum.value);});if(tEvents){if(tEvents.autocompleted){$(self.field).on("typeahead:autocompleted",function(event,datum){tEvents.autocompleted(event,datum);});}if(tEvents.selected){$(self.field).on("typeahead:selected",function(event,datum){tEvents.selected(event,datum);});}}var fi=$(self.field);$(self.field).change(function(){var value=$(this).val();var newValue=$(fi).typeahead("val");if(newValue!=value){$(fi).typeahead("val",newValue);}});}if(self.fieldContainer){self.fieldContainer.addClass("alpaca-controlfield-text");}}callback();});},getValue:function(){var value=null;if(this.field){value=this.field.val();}else{value=this.base();}return value;},setValue:function(value){if(this.field){if(Alpaca.isEmpty(value)){this.field.val("");if(this.field&&this.field.typeahead&&this.options.typeahead){$(this.field).typeahead("val","");}}else{this.field.val(value);if(this.field&&this.field.typeahead&&this.options.typeahead){$(this.field).typeahead("val",value);}}}this.base(value);},handleValidate:function(){var baseStatus=this.base();var valInfo=this.validation;var status=this._validatePattern();valInfo["invalidPattern"]={"message":status?"":Alpaca.substituteTokens(this.view.getMessage("invalidPattern"),[this.schema.pattern]),"status":status};status=this._validateMaxLength();valInfo["stringTooLong"]={"message":status?"":Alpaca.substituteTokens(this.view.getMessage("stringTooLong"),[this.schema.maxLength]),"status":status};status=this._validateMinLength();valInfo["stringTooShort"]={"message":status?"":Alpaca.substituteTokens(this.view.getMessage("stringTooShort"),[this.schema.minLength]),"status":status};return baseStatus&&valInfo["invalidPattern"]["status"]&&valInfo["stringTooLong"]["status"]&&valInfo["stringTooShort"]["status"];},_validatePattern:function(){if(this.schema.pattern){var val=this.getValue();if(val===""&&this.options.allowOptionalEmpty&&!this.schema.required){return true;}if(Alpaca.isEmpty(val)){val="";}if(!val.match(this.schema.pattern)){return false;}}return true;},_validateMinLength:function(){if(!Alpaca.isEmpty(this.schema.minLength)){var val=this.getValue();if(val===""&&this.options.allowOptionalEmpty&&!this.schema.required){return true;}if(Alpaca.isEmpty(val)){val="";}if(val.length<this.schema.minLength){return false;}}return true;},_validateMaxLength:function(){if(!Alpaca.isEmpty(this.schema.maxLength)){var val=this.getValue();if(val===""&&this.options.allowOptionalEmpty&&!this.schema.required){return true;}if(Alpaca.isEmpty(val)){val="";}if(val.length>this.schema.maxLength){return false;}}return true;},disable:function(){if(this.field){this.field.disabled=true;}},enable:function(){if(this.field){this.field.disabled=false;}},focus:function(){if(this.field){this.field.focus();}},getSchemaOfSchema:function(){return Alpaca.merge(this.base(),{"properties":{"minLength":{"title":"Minimal Length","description":"Minimal length of the property value.","type":"number"},"maxLength":{"title":"Maximum Length","description":"Maximum length of the property value.","type":"number"},"pattern":{"title":"Pattern","description":"Regular expression for the property value.","type":"string"}}});},getOptionsForSchema:function(){return Alpaca.merge(this.base(),{"fields":{"default":{"helper":"Field default value","type":"text"},"minLength":{"type":"integer"},"maxLength":{"type":"integer"},"pattern":{"type":"text"}}});},getSchemaOfOptions:function(){return Alpaca.merge(this.base(),{"properties":{"size":{"title":"Field Size","description":"Field size.","type":"number","default":40},"maskString":{"title":"Mask Expression","description":"Expression for the field mask. Field masking will be enabled if not empty.","type":"string"},"placeholder":{"title":"Field Placeholder","description":"Field placeholder.","type":"string"},"typeahead":{"title":"Type Ahead","description":"Provides configuration for the $.typeahead plugin if it is available.  For full configuration options, see: https://github.com/twitter/typeahead.js"},"allowOptionalEmpty":{"title":"Allow Optional Empty","description":"Allows this non-required field to validate when the value is empty"}}});},getOptionsForOptions:function(){return Alpaca.merge(this.base(),{"fields":{"size":{"type":"integer"},"maskString":{"helper":"a - an alpha character;9 - a numeric character;* - an alphanumeric character","type":"text"},"typeahead":{"type":"object"},"allowOptionalEmpty":{"type":"checkbox"}}});},getTitle:function(){return"Single-Line Text";},getDescription:function(){return"Text field for single-line text.";},getType:function(){return"string";},getFieldType:function(){return"text";}});Alpaca.registerTemplate("controlFieldText",'<input type="text" id="${id}" {{if options.placeholder}}placeholder="${options.placeholder}"{{/if}} {{if options.size}}size="${options.size}"{{/if}} {{if options.readonly}}readonly="readonly"{{/if}} {{if name}}name="${name}"{{/if}} {{each(i,v) options.data}}data-${i}="${v}"{{/each}}/>');Alpaca.registerMessages({"invalidPattern":"This field should have pattern {0}","stringTooShort":"This field should contain at least {0} numbers or characters","stringTooLong":"This field should contain at most {0} numbers or characters"});Alpaca.registerFieldClass("text",Alpaca.Fields.TextField);Alpaca.registerDefaultSchemaFieldMapping("string","text");})(jQuery);(function($){var Alpaca=$.alpaca;Alpaca.Fields.TextAreaField=Alpaca.Fields.TextField.extend({constructor:function(container,data,options,schema,view,connector,errorCallback){this.base(container,data,options,schema,view,connector,errorCallback);},setup:function(){this.base();if(!this.options.rows){this.options.rows=5;}if(!this.options.cols){this.options.cols=40;}this.controlFieldTemplateDescriptor=this.view.getTemplateDescriptor("controlFieldTextarea");},postRender:function(callback){var self=this;this.base(function(){if(self.fieldContainer){self.fieldContainer.addClass("alpaca-controlfield-textarea");}callback();});},handleValidate:function(){var baseStatus=this.base();var valInfo=this.validation;var status=this._validateWordCount();valInfo["wordLimitExceeded"]={"message":status?"":Alpaca.substituteTokens(this.view.getMessage("wordLimitExceeded"),[this.options.wordlimit]),"status":status};return baseStatus&&valInfo["wordLimitExceeded"]["status"];},_validateWordCount:function(){if(this.options.wordlimit&&this.options.wordlimit>-1){var val=this.data;if(val){var wordcount=val.split(" ").length;if(wordcount>this.options.wordlimit){return false;}}}return true;},setValue:function(value){$(this.field).val(value);this.base(value);},getValue:function(){return $(this.field).val();},getSchemaOfOptions:function(){return Alpaca.merge(this.base(),{"properties":{"rows":{"title":"Rows","description":"Number of rows","type":"number","default":5},"cols":{"title":"Columns","description":"Number of columns","type":"number","default":40},"wordlimit":{"title":"Word Limit","description":"Limits the number of words allowed in the text area.","type":"number","default":-1}}});},getOptionsForOptions:function(){return Alpaca.merge(this.base(),{"fields":{"rows":{"type":"integer"},"cols":{"type":"integer"},"wordlimit":{"type":"integer"}}});},getTitle:function(){return"Multi-Line Text";},getDescription:function(){return"Textarea field for multiple line text.";},getFieldType:function(){return"textarea";}});Alpaca.registerMessages({"wordLimitExceeded":"The maximum word limit of {0} has been exceeded."});Alpaca.registerTemplate("controlFieldTextarea",'<textarea id="${id}" {{if options.placeholder}}placeholder="${options.placeholder}"{{/if}} {{if options.rows}}rows="${options.rows}"{{/if}} {{if options.cols}}cols="${options.cols}"{{/if}} {{if options.readonly}}readonly="readonly"{{/if}} {{if name}}name="${name}"{{/if}} {{each options.data}}data-${fieldId}="${value}"{{/each}}/>');Alpaca.registerFieldClass("textarea",Alpaca.Fields.TextAreaField);})(jQuery);(function($){var Alpaca=$.alpaca;Alpaca.Fields.CheckBoxField=Alpaca.ControlField.extend({constructor:function(container,data,options,schema,view,connector,errorCallback){this.base(container,data,options,schema,view,connector,errorCallback);},setup:function(){var _this=this;_this.base();if(!this.options.rightLabel){this.options.rightLabel="";}if(typeof(_this.options.multiple)=="undefined"){if(_this.schema.type=="array"){_this.options.multiple=true;}else{if(typeof(_this.schema["enum"])!="undefined"){_this.options.multiple=true;}}}_this.checkboxOptions=[];if(_this.options.multiple){$.each(_this.getEnum(),function(index,value){var text=value;if(_this.options.optionLabels){if(!Alpaca.isEmpty(_this.options.optionLabels[index])){text=_this.options.optionLabels[index];}else{if(!Alpaca.isEmpty(_this.options.optionLabels[value])){text=_this.options.optionLabels[value];}}}_this.checkboxOptions.push({"value":value,"text":text});});}},getEnum:function(){var array=[];if(this.schema&&this.schema["enum"]){array=this.schema["enum"];}return array;},onClick:function(e){this.refreshValidationState();},renderField:function(onSuccess){var _this=this;var controlFieldTemplateDescriptor=null;if(this.options.multiple){controlFieldTemplateDescriptor=this.view.getTemplateDescriptor("controlFieldCheckboxMultiple");}else{controlFieldTemplateDescriptor=this.view.getTemplateDescriptor("controlFieldCheckbox");}if(controlFieldTemplateDescriptor){this.field=_this.view.tmpl(controlFieldTemplateDescriptor,{"id":this.getId(),"name":this.name,"options":this.options,"checkboxOptions":_this.checkboxOptions});this.injectField(this.field);if(this.data&&typeof(this.data)!="undefined"){this.setValue(this.data);}}if(onSuccess){onSuccess();}},postRender:function(callback){var self=this;this.base(function(){if(self.fieldContainer){self.fieldContainer.addClass("alpaca-controlfield-checkbox");}$(self.field).find("input:checkbox").change(function(evt){$(self.field).trigger("change");});callback();});},getValue:function(){var self=this;var value=null;if(!self.options.multiple){var input=$(self.field).find("input");if(input.length>0){value=Alpaca.checked($(input[0]));}}else{var values=[];for(var i=0;i<self.checkboxOptions.length;i++){var input=$(self.field).find("input[data-checkbox-index='"+i+"']");if(Alpaca.checked(input)){var v=$(input).attr("data-checkbox-value");values.push(v);}}if(self.schema.type=="array"){value=values;}else{if(self.schema.type=="string"){value=values.join(",");}}}return value;},setValue:function(value){var self=this;var applyScalarValue=function(value){if(Alpaca.isString(value)){value=(value==="true");}var input=$(self.field).find("input");if(input.length>0){Alpaca.checked($(input[0]),value);}};var applyMultiValue=function(values){if(typeof(values)=="string"){values=values.split(",");}for(var i=0;i<values.length;i++){values[i]=Alpaca.trim(values[i]);}for(var i=0;i<values.length;i++){var input=$(self.field).find("input[data-checkbox-value='"+values[i]+"']");if(input.length>0){Alpaca.checked($(input[0]),value);}}};var applied=false;if(!self.options.multiple){if(typeof(value)=="boolean"){applyScalarValue(value);applied=true;}else{if(typeof(value)=="string"){applyScalarValue(value);applied=true;}}}else{if(typeof(value)=="string"){applyMultiValue(value);applied=true;}else{if(Alpaca.isArray(value)){applyMultiValue(value);applied=true;}}}if(!applied){Alpaca.logError("CheckboxField cannot set value for schema.type="+self.schema.type+" and value="+value);}this.base(value);},_validateEnum:function(){var self=this;if(!self.options.multiple){return true;}var val=self.getValue();if(!self.schema.required&&Alpaca.isValEmpty(val)){return true;}if(typeof(val)=="string"){val=val.split(",");}return Alpaca.anyEquality(val,self.schema["enum"]);},disable:function(){$(this.field).find("input").each(function(){$(this).disabled=true;});},enable:function(){$(this.field).find("input").each(function(){$(this).disabled=false;});},getSchemaOfOptions:function(){return Alpaca.merge(this.base(),{"properties":{"rightLabel":{"title":"Option Label","description":"Optional right-hand side label for single checkbox field.","type":"string"},"multiple":{"title":"Multiple","description":"Whether to render multiple checkboxes for multi-valued type (such as an array or a comma-delimited string)","type":"boolean"}}});},getOptionsForOptions:function(){return Alpaca.merge(this.base(),{"fields":{"rightLabel":{"type":"text"},"multiple":{"type":"checkbox"}}});},getTitle:function(){return"Checkbox Field";},getDescription:function(){return"Checkbox Field for boolean (true/false), string ('true', 'false' or comma-delimited string of values) or data array.";},getType:function(){return"boolean";},getFieldType:function(){return"checkbox";}});Alpaca.registerTemplate("controlFieldCheckbox",'<span id="${id}">{{if options.rightLabel}}<label class="alpaca-controlfield-label" for="${id}_checkbox">{{/if}}<input id="${id}_checkbox" type="checkbox" {{if options.readonly}}readonly="readonly"{{/if}} {{if name}}name="${name}"{{/if}} {{each(i,v) options.data}}data-${i}="${v}"{{/each}}/>{{if options.rightLabel}}${options.rightLabel}</label>{{/if}}</span>');Alpaca.registerTemplate("controlFieldCheckboxMultiple",'<span id="${id}">{{each(i,o) checkboxOptions}}<span><label class="alpaca-controlfield-label" for="${id}_checkbox_${i}"><input type="checkbox" id="${id}_checkbox_${i}" {{if options.readonly}}readonly="readonly"{{/if}} {{if name}}name="${name}"{{/if}} data-checkbox-value="${o.value}" data-checkbox-index="${i}" />${text}</label></span>{{/each}}</span>');Alpaca.registerFieldClass("checkbox",Alpaca.Fields.CheckBoxField);Alpaca.registerDefaultSchemaFieldMapping("boolean","checkbox");})(jQuery);(function($){var Alpaca=$.alpaca;Alpaca.Fields.FileField=Alpaca.Fields.TextField.extend({constructor:function(container,data,options,schema,view,connector,errorCallback){this.base(container,data,options,schema,view,connector,errorCallback);},setup:function(){this.base();this.controlFieldTemplateDescriptor=this.view.getTemplateDescriptor("controlFieldFile");},setValue:function(value){var tmp=this.field;this.field=$(".alpaca-filefield-control",this.fieldContainer);this.base(value);this.field=tmp;},onChange:function(e){this.base(e);if(this.options.selectionHandler){this.processSelectionHandler(e.target.files);}},processSelectionHandler:function(files){if(files&&files.length>0){if(typeof(FileReader)!=="undefined"){var loadedData=[];var loadCount=0;var fileReader=new FileReader();fileReader.onload=(function(){var field=this;return function(event){var dataUri=event.target.result;loadedData.push(dataUri);loadCount++;if(loadCount===files.length){field.options.selectionHandler.call(field,files,loadedData);}};}).call(this);for(var i=0;i<files.length;i++){fileReader.readAsDataURL(files[i]);}}}},postRender:function(callback){var self=this;this.base(function(){if(self.fieldContainer){self.fieldContainer.addClass("alpaca-controlfield-file");}callback();});},getSchemaOfOptions:function(){return Alpaca.merge(this.base(),{"properties":{"selectionHandler":{"title":"Selection Handler","description":"Function that should be called when files are selected.  Requires HTML5.","type":"boolean","default":false}}});},getOptionsForOptions:function(){return Alpaca.merge(this.base(),{"fields":{"selectionHandler":{"type":"checkbox"}}});},getTitle:function(){return"File Field";},getDescription:function(){return"Field for uploading files.";},getFieldType:function(){return"file";}});Alpaca.registerTemplate("controlFieldFile",'<input type="file" id="${id}" {{if options.size}}size="${options.size}"{{/if}} {{if options.readonly}}readonly="readonly"{{/if}} {{if name}}name="${name}"{{/if}} {{each(i,v) options.data}}data-${i}="${v}"{{/each}}/>');Alpaca.registerFieldClass("file",Alpaca.Fields.FileField);})(jQuery);(function($){var Alpaca=$.alpaca;Alpaca.Fields.ListField=Alpaca.ControlField.extend({constructor:function(container,data,options,schema,view,connector,errorCallback){this.base(container,data,options,schema,view,connector,errorCallback);},setup:function(){var _this=this;_this.base();_this.selectOptions=[];if(_this.getEnum()){$.each(_this.getEnum(),function(index,value){var text=value;if(_this.options.optionLabels){if(!Alpaca.isEmpty(_this.options.optionLabels[index])){text=_this.options.optionLabels[index];}else{if(!Alpaca.isEmpty(_this.options.optionLabels[value])){text=_this.options.optionLabels[value];}}}_this.selectOptions.push({"value":value,"text":text});});}},getEnum:function(){if(this.schema&&this.schema["enum"]){return this.schema["enum"];}},getValue:function(val){var _this=this;if(Alpaca.isArray(val)){$.each(val,function(index,itemVal){$.each(_this.selectOptions,function(index2,selectOption){if(selectOption.value==itemVal){val[index]=selectOption.value;}});});}else{$.each(this.selectOptions,function(index,selectOption){if(selectOption.value==val){val=selectOption.value;}});}return val;},renderField:function(onSuccess){var _this=this;if(this.options.dataSource){if(Alpaca.isFunction(this.options.dataSource)){this.options.dataSource(this,function(values){if(Alpaca.isArray(values)){for(var i=0;i<values.length;i++){if(typeof(values[i])=="string"){_this.selectOptions.push({"text":values[i],"value":values[i]});}else{if(Alpaca.isObject(values[i])){_this.selectOptions.push(values[i]);}}}}else{if(Alpaca.isObject(values)){for(var k in values){_this.selectOptions.push({"text":k,"value":values[k]});}}}_this._renderField(onSuccess);});}else{if(Alpaca.isUri(this.options.dataSource)){$.ajax({url:this.options.dataSource,type:"get",dataType:"json",success:function(jsonDocument){var ds=jsonDocument;if(_this.options.dsTransformer&&Alpaca.isFunction(_this.options.dsTransformer)){ds=_this.options.dsTransformer(ds);}if(ds){if(Alpaca.isObject(ds)){$.each(ds,function(key,value){_this.selectOptions.push({"value":key,"text":value});});}else{if(Alpaca.isArray(ds)){$.each(ds,function(index,value){_this.selectOptions.push({"value":value.value,"text":value.text});});}}}_this._renderField(onSuccess);},"error":function(jqXHR,textStatus,errorThrown){_this.errorCallback({"message":"Unable to load data from uri : "+_this.options.dataSource,"stage":"DATASOURCE_LOADING_ERROR","details":{"jqXHR":jqXHR,"textStatus":textStatus,"errorThrown":errorThrown}});}});}else{var ds=this.options.dataSource;if(_this.options.dsTransformer&&Alpaca.isFunction(_this.options.dsTransformer)){ds=_this.options.dsTransformer(ds);}if(ds){if(Alpaca.isArray(ds)){$.each(ds,function(index,value){_this.selectOptions.push({"value":value,"text":value});});}if(Alpaca.isObject(ds)){for(var index in ds){_this.selectOptions.push({"value":index,"text":ds[index]});}}_this._renderField(onSuccess);}}}}else{this._renderField(onSuccess);}},getSchemaOfSchema:function(){return Alpaca.merge(this.base(),{"properties":{"enum":{"title":"Enumeration","description":"List of field value options","type":"array","required":true}}});},getSchemaOfOptions:function(){return Alpaca.merge(this.base(),{"properties":{"optionLabels":{"title":"Option Labels","description":"Labels for options. It can either be a map object or an array field that maps labels to items defined by enum schema property one by one.","type":"array"},"dataSource":{"title":"Option Datasource","description":"Datasource for generating list of options.  This can be a string or a function.  If a string, it is considered to be a URI to a service that produces a object containing key/value pairs or an array of elements of structure {'text': '', 'value': ''}.  This can also be a function that is called to produce the same list.","type":"string"},"removeDefaultNone":{"title":"Remove Default None","description":"If true, the default 'None' option will not be shown.","type":"boolean","default":false}}});},getOptionsForOptions:function(){return Alpaca.merge(this.base(),{"fields":{"optionLabels":{"itemLabel":"Label","type":"array"},"dataSource":{"type":"text"},"removeDefaultNone":{"type":"checkbox","rightLabel":"Remove Default None"}}});}});})(jQuery);(function($){var Alpaca=$.alpaca;Alpaca.Fields.RadioField=Alpaca.Fields.ListField.extend({constructor:function(container,data,options,schema,view,connector,errorCallback){this.base(container,data,options,schema,view,connector,errorCallback);},setup:function(){this.base();if(this.options.name){this.name=this.options.name;}else{if(!this.name){this.name=this.getId()+"-name";}}if(Alpaca.isUndefined(this.options.emptySelectFirst)){this.options.emptySelectFirst=false;}},getValue:function(){var val=this.base($("input:radio[name="+this.name+"]:checked",this.field).val());$.each(this.selectOptions,function(){if(String(this["value"])==val){val=this["value"];}});return val;},setValue:function(val){if(val!=this.getValue()){$.each($("input:radio[name="+this.name+"]",this.field),function(){if($(this).val()==val){$(this).attr("checked","checked");}else{$(this).removeAttr("checked");}});if(this.options.emptySelectFirst){if($("input:radio:checked",this.field).length===0){$("input:radio:first",this.field).attr("checked","checked");}}this.base(val);}},_renderField:function(onSuccess){var _this=this;var controlFieldTemplateDescriptor=this.view.getTemplateDescriptor("controlFieldRadio");if(controlFieldTemplateDescriptor){this.field=_this.view.tmpl(controlFieldTemplateDescriptor,{"id":this.getId(),"options":this.options,"selectOptions":this.selectOptions,"required":this.schema.required,"name":this.name,"data":this.data,"removeDefaultNone":this.options.removeDefaultNone});if(this.options.emptySelectFirst&&this.selectOptions&&this.selectOptions.length>0){this.data=this.selectOptions[0].value;if($("input:radio:checked",this.field).length===0){$("input:radio:first",this.field).attr("checked","checked");}}if(this.options.vertical){$(".alpaca-controlfield-radio-item",this.field).css("display","block");}this.injectField(this.field);}if(onSuccess){onSuccess();}},postRender:function(callback){var self=this;this.base(function(){if(self.fieldContainer){self.fieldContainer.addClass("alpaca-controlfield-radio");}callback();});},onClick:function(e){this.base(e);var _this=this;Alpaca.later(25,this,function(){var v=_this.getValue();_this.setValue(v);_this.refreshValidationState();});},getSchemaOfOptions:function(){return Alpaca.merge(this.base(),{"properties":{"name":{"title":"Field name","description":"Field name.","type":"string"},"emptySelectFirst":{"title":"Empty Select First","description":"If the data is empty, then automatically select the first item in the list.","type":"boolean","default":false},"vertical":{"title":"Position the radio selector items vertically","description":"When true, the radio selector items will be stacked vertically and not horizontally","type":"boolean","default":false}}});},getTitle:function(){return"Radio Group Field";},getDescription:function(){return"Radio Group Field with list of options.";},getFieldType:function(){return"radio";}});Alpaca.registerTemplate("controlFieldRadio",'<div id="${id}" class="alpaca-controlfield-radio">{{if !required && !removeDefaultNone}}<span class="alpaca-controlfield-radio-item"><input type="radio" {{if options.readonly}}readonly="readonly"{{/if}} name="${name}" id="${id}_radio_nonevalue" value=""/><label class="alpaca-controlfield-radio-label" for="${id}_radio_nonevalue">None</label></span>{{/if}}{{each selectOptions}}<span class="alpaca-controlfield-radio-item"><input type="radio" {{if options.readonly}}readonly="readonly"{{/if}} name="${name}" value="${value}" id="${id}_radio_${$index}" {{if value == data}}checked="checked"{{/if}}/><label class="alpaca-controlfield-radio-label" for="${id}_radio_${$index}">${text}</label></span>{{/each}}</div>');Alpaca.registerFieldClass("radio",Alpaca.Fields.RadioField);})(jQuery);(function($){var Alpaca=$.alpaca;Alpaca.Fields.SelectField=Alpaca.Fields.ListField.extend({constructor:function(container,data,options,schema,view,connector,errorCallback){this.base(container,data,options,schema,view,connector,errorCallback);},setup:function(){this.base();if(Alpaca.isUndefined(this.options.emptySelectFirst)){this.options.emptySelectFirst=false;}},getValue:function(){if(this.field){var val=this.field.val();if(!val){val=this.data;}return this.base(val);}},setValue:function(val){if(Alpaca.isArray(val)){if(!Alpaca.compareArrayContent(val,this.getValue())){if(!Alpaca.isEmpty(val)&&this.field){this.field.val(val);}this.base(val);}}else{if(val!=this.getValue()){if(!Alpaca.isEmpty(val)&&this.field){this.field.val(val);}this.base(val);}}},getEnum:function(){if(this.schema){if(this.schema["enum"]){return this.schema["enum"];}else{if(this.schema["type"]&&this.schema["type"]=="array"&&this.schema["items"]&&this.schema["items"]["enum"]){return this.schema["items"]["enum"];}}}},_renderField:function(onSuccess){var _this=this;if(this.schema["type"]&&this.schema["type"]=="array"){this.options.multiple=true;}var controlFieldTemplateDescriptor;if(this.options.multiple&&Alpaca.isArray(this.data)){controlFieldTemplateDescriptor=this.view.getTemplateDescriptor("controlFieldSelectMultiple");}else{controlFieldTemplateDescriptor=this.view.getTemplateDescriptor("controlFieldSelect");}if(controlFieldTemplateDescriptor){this.field=_this.view.tmpl(controlFieldTemplateDescriptor,{"id":this.getId(),"options":this.options,"required":this.schema.required,"selectOptions":this.selectOptions,"name":this.name,"data":this.data,"removeDefaultNone":this.options.removeDefaultNone});if(Alpaca.isUndefined(this.data)&&this.options.emptySelectFirst&&this.selectOptions&&this.selectOptions.length>0){this.data=this.selectOptions[0].value;}this.injectField(this.field);if(this.data){this.setValue(this.data);}}if(onSuccess){onSuccess();}},postRender:function(callback){var self=this;this.base(function(){if(self.fieldContainer){self.fieldContainer.addClass("alpaca-controlfield-select");}callback();});},_validateEnum:function(){if(this.schema["enum"]){var val=this.data;if(!this.schema.required&&Alpaca.isValEmpty(val)){return true;}if(this.options.multiple){var isValid=true;var _this=this;if(!val){val=[];}$.each(val,function(i,v){if($.inArray(v,_this.schema["enum"])<=-1){isValid=false;return false;}});return isValid;}else{return($.inArray(val,this.schema["enum"])>-1);}}else{return true;}},onChange:function(e){this.base(e);var _this=this;Alpaca.later(25,this,function(){var v=_this.getValue();_this.setValue(v);_this.refreshValidationState();});},_validateMinItems:function(){if(this.schema.items&&this.schema.items.minItems){if($(":selected",this.field).length<this.schema.items.minItems){return false;}}return true;},_validateMaxItems:function(){if(this.schema.items&&this.schema.items.maxItems){if($(":selected",this.field).length>this.schema.items.maxItems){return false;}}return true;},handleValidate:function(){var baseStatus=this.base();var valInfo=this.validation;var status=this._validateMaxItems();valInfo["tooManyItems"]={"message":status?"":Alpaca.substituteTokens(this.view.getMessage("tooManyItems"),[this.schema.items.maxItems]),"status":status};status=this._validateMinItems();valInfo["notEnoughItems"]={"message":status?"":Alpaca.substituteTokens(this.view.getMessage("notEnoughItems"),[this.schema.items.minItems]),"status":status};return baseStatus&&valInfo["tooManyItems"]["status"]&&valInfo["notEnoughItems"]["status"];},getSchemaOfOptions:function(){return Alpaca.merge(this.base(),{"properties":{"multiple":{"title":"Mulitple Selection","description":"Allow multiple selection if true.","type":"boolean","default":false},"size":{"title":"Displayed Options","description":"Number of options to be shown.","type":"number"},"emptySelectFirst":{"title":"Empty Select First","description":"If the data is empty, then automatically select the first item in the list.","type":"boolean","default":false}}});},getOptionsForOptions:function(){return Alpaca.merge(this.base(),{"fields":{"multiple":{"rightLabel":"Allow multiple selection ?","helper":"Allow multiple selection if checked","type":"checkbox"},"size":{"type":"integer"}}});},getTitle:function(){return"Dropdown Select";},getDescription:function(){return"Dropdown select field.";},getFieldType:function(){return"select";}});Alpaca.registerTemplate("controlFieldSelect",'<select id="${id}" {{if options.readonly}}readonly="readonly"{{/if}} {{if options.multiple}}multiple{{/if}} {{if options.size}}size="${options.size}"{{/if}} {{if name}}name="${name}"{{/if}}>{{if !required && !removeDefaultNone}}<option value="">None</option>{{/if}}{{each(i,value) selectOptions}}<option value="${value}" {{if value == data}}selected="selected"{{/if}}>${text}</option>{{/each}}</select>');Alpaca.registerTemplate("controlFieldSelectMultiple",'<select id="${id}" {{if options.readonly}}readonly="readonly"{{/if}} {{if options.multiple}}multiple="multiple"{{/if}} {{if options.size}}size="${options.size}"{{/if}} {{if name}}name="${name}"{{/if}}>{{if !required && !removeDefaultNone}}<option value="">None</option>{{/if}}{{each(i,value) selectOptions}}<option value="${value}" {{each(j,val) data}}{{if value == val}}selected="selected"{{/if}}{{/each}}>${text}</option>{{/each}}</select>');Alpaca.registerFieldClass("select",Alpaca.Fields.SelectField);})(jQuery);(function($){var Alpaca=$.alpaca;Alpaca.Fields.NumberField=Alpaca.Fields.TextField.extend({constructor:function(container,data,options,schema,view,connector,errorCallback){this.base(container,data,options,schema,view,connector,errorCallback);},getValue:function(){var textValue=this.field.val();if(Alpaca.isValEmpty(textValue)){return -1;}else{return parseFloat(textValue);}},postRender:function(callback){var self=this;this.base(function(){if(self.fieldContainer){self.fieldContainer.addClass("alpaca-controlfield-number");}callback();});},handleValidate:function(){var baseStatus=this.base();var valInfo=this.validation;var status=this._validateNumber();valInfo["stringNotANumber"]={"message":status?"":this.view.getMessage("stringNotANumber"),"status":status};status=this._validateDivisibleBy();valInfo["stringDivisibleBy"]={"message":status?"":Alpaca.substituteTokens(this.view.getMessage("stringDivisibleBy"),[this.schema.divisibleBy]),"status":status};status=this._validateMaximum();valInfo["stringValueTooLarge"]={"message":"","status":status};if(!status){if(this.schema.exclusiveMaximum){valInfo["stringValueTooLarge"]["message"]=Alpaca.substituteTokens(this.view.getMessage("stringValueTooLargeExclusive"),[this.schema.maximum]);}else{valInfo["stringValueTooLarge"]["message"]=Alpaca.substituteTokens(this.view.getMessage("stringValueTooLarge"),[this.schema.maximum]);}}status=this._validateMinimum();valInfo["stringValueTooSmall"]={"message":"","status":status};if(!status){if(this.schema.exclusiveMinimum){valInfo["stringValueTooSmall"]["message"]=Alpaca.substituteTokens(this.view.getMessage("stringValueTooSmallExclusive"),[this.schema.minimum]);}else{valInfo["stringValueTooSmall"]["message"]=Alpaca.substituteTokens(this.view.getMessage("stringValueTooSmall"),[this.schema.minimum]);}}status=this._validateMultipleOf();valInfo["stringValueNotMultipleOf"]={"message":"","status":status};if(!status){valInfo["stringValueNotMultipleOf"]["message"]=Alpaca.substituteTokens(this.view.getMessage("stringValueNotMultipleOf"),[this.schema.multipleOf]);}return baseStatus&&valInfo["stringNotANumber"]["status"]&&valInfo["stringDivisibleBy"]["status"]&&valInfo["stringValueTooLarge"]["status"]&&valInfo["stringValueTooSmall"]["status"]&&valInfo["stringValueNotMultipleOf"]["status"];},_validateNumber:function(){var textValue=this.field.val();if(Alpaca.isValEmpty(textValue)){return true;}var floatValue=this.getValue();if(isNaN(floatValue)){return false;}if(!textValue.match(Alpaca.regexps.number)){return false;}return true;},_validateDivisibleBy:function(){var floatValue=this.getValue();if(!Alpaca.isEmpty(this.schema.divisibleBy)){if(floatValue%this.schema.divisibleBy!==0){return false;}}return true;},_validateMaximum:function(){var floatValue=this.getValue();if(!Alpaca.isEmpty(this.schema.maximum)){if(floatValue>this.schema.maximum){return false;}if(!Alpaca.isEmpty(this.schema.exclusiveMaximum)){if(floatValue==this.schema.maximum&&this.schema.exclusiveMaximum){return false;}}}return true;},_validateMinimum:function(){var floatValue=this.getValue();if(!Alpaca.isEmpty(this.schema.minimum)){if(floatValue<this.schema.minimum){return false;}if(!Alpaca.isEmpty(this.schema.exclusiveMinimum)){if(floatValue==this.schema.minimum&&this.schema.exclusiveMinimum){return false;}}}return true;},_validateMultipleOf:function(){var floatValue=this.getValue();if(!Alpaca.isEmpty(this.schema.multipleOf)){if(floatValue&&this.schema.multipleOf!==0){return false;}}return true;},getSchemaOfSchema:function(){return Alpaca.merge(this.base(),{"properties":{"multipleOf":{"title":"Multiple Of","description":"Property value must be a multiple of the multipleOf schema property such that division by this value yields an interger (mod zero).","type":"number"},"minimum":{"title":"Minimum","description":"Minimum value of the property.","type":"number"},"maximum":{"title":"Maximum","description":"Maximum value of the property.","type":"number"},"exclusiveMinimum":{"title":"Exclusive Minimum","description":"Property value can not equal the number defined by the minimum schema property.","type":"boolean","default":false},"exclusiveMaximum":{"title":"Exclusive Maximum","description":"Property value can not equal the number defined by the maximum schema property.","type":"boolean","default":false}}});},getOptionsForSchema:function(){return Alpaca.merge(this.base(),{"fields":{"multipleOf":{"title":"Multiple Of","description":"The value must be a integral multiple of the property","type":"number"},"minimum":{"title":"Minimum","description":"Minimum value of the property","type":"number"},"maximum":{"title":"Maximum","description":"Maximum value of the property","type":"number"},"exclusiveMinimum":{"rightLabel":"Exclusive minimum ?","helper":"Field value must be greater than but not equal to this number if checked","type":"checkbox"},"exclusiveMaximum":{"rightLabel":"Exclusive Maximum ?","helper":"Field value must be less than but not equal to this number if checked","type":"checkbox"}}});},getTitle:function(){return"Number Field";},getDescription:function(){return"Field for float numbers.";},getType:function(){return"number";},getFieldType:function(){return"number";}});Alpaca.registerMessages({"stringValueTooSmall":"The minimum value for this field is {0}","stringValueTooLarge":"The maximum value for this field is {0}","stringValueTooSmallExclusive":"Value of this field must be greater than {0}","stringValueTooLargeExclusive":"Value of this field must be less than {0}","stringDivisibleBy":"The value must be divisible by {0}","stringNotANumber":"This value is not a number.","stringValueNotMultipleOf":"This value is nu"});Alpaca.registerFieldClass("number",Alpaca.Fields.NumberField);Alpaca.registerDefaultSchemaFieldMapping("number","number");})(jQuery);(function($){var Alpaca=$.alpaca;Alpaca.Fields.ArrayField=Alpaca.ContainerField.extend({constructor:function(container,data,options,schema,view,connector,errorCallback){this.base(container,data,options,schema,view,connector,errorCallback);},setup:function(){this.base();this.options.toolbarStyle=Alpaca.isEmpty(this.view.toolbarStyle)?"button":this.view.toolbarStyle;this.options.rubyrails=false;if(this.parent&&this.parent.options&&this.parent.options.form&&this.parent.options.form.attributes){if(!Alpaca.isEmpty(this.parent.options.form.attributes.rubyrails)){this.options.rubyrails=true;}}if(!this.options.items){this.options.items={};}var toolbarSticky=false;if(!Alpaca.isEmpty(this.view.toolbarSticky)){toolbarSticky=this.view.toolbarSticky;}if(!Alpaca.isEmpty(this.options.toolbarSticky)){toolbarSticky=this.options.toolbarSticky;}if(Alpaca.isEmpty(this.options.items.showMoveUpItemButton)){this.options.items.showMoveUpItemButton=true;}if(Alpaca.isEmpty(this.options.items.showMoveDownItemButton)){this.options.items.showMoveDownItemButton=true;}this.options.toolbarSticky=toolbarSticky;if(this.schema.items&&this.schema.uniqueItems){Alpaca.mergeObject(this.options,{"forceRevalidation":true});}if(Alpaca.isEmpty(this.data)){return;}if(!Alpaca.isArray(this.data)){if(!Alpaca.isString(this.data)){return;}else{try{this.data=Alpaca.parseJSON(this.data);if(!Alpaca.isArray(this.data)){Alpaca.logWarn("ArrayField parsed data but it was not an array: "+JSON.stringify(this.data));return;}}catch(e){this.data=[this.data];}}}},setValue:function(data){var _this=this;if(!data||!Alpaca.isArray(data)){return;}for(var i=0;i<this.children.length;i++){var childField=this.children[i];if(data.length>i){childField.setValue(data[i]);}else{this.removeItem(childField.id);}}if(i<data.length){_this.resolveItemSchemaOptions(function(schema,options){var funcs=[];while(i<data.length){var f=(function(i,data){return function(callback){_this.addItem(i,schema,options,data[i],null,false,function(){Alpaca.nextTick(function(){callback();});});};})(i,data[i]);funcs.push(f);i++;}Alpaca.series(funcs,function(){});});}},getValue:function(){if(this.children.length===0&&!this.schema.required){return;}var o=[];for(var i=0;i<this.children.length;i++){var v=this.children[i].getValue();if(typeof(v)!=="undefined"){o.push(v);}}return o;},getSize:function(){return this.children.length;},updateChildrenPathAndName:function(parent){var _this=this;if(parent.children){$.each(parent.children,function(i,v){if(parent.prePath&&Alpaca.startsWith(v.path,parent.prePath)){v.prePath=v.path;v.path=v.path.replace(parent.prePath,parent.path);}if(parent.preName&&Alpaca.startsWith(v.name,parent.preName)){v.preName=v.name;v.name=v.name.replace(parent.preName,parent.name);if(v.field){$(v.field).attr("name",v.name);}}_this.updateChildrenPathAndName(v);});}},updatePathAndName:function(){var _this=this;if(this.children){$.each(this.children,function(i,v){var idx=v.path.lastIndexOf("/");var lastSegment=v.path.substring(idx+1);if(lastSegment.indexOf("[")!=-1&&lastSegment.indexOf("]")!=-1){lastSegment=lastSegment.substring(lastSegment.indexOf("[")+1,lastSegment.indexOf("]"));}if(lastSegment!=i){v.prePath=v.path;v.path=v.path.substring(0,idx)+"/["+i+"]";}if(v.nameCalculated){v.preName=v.name;if(v.parent&&v.parent.name&&v.path){v.name=v.parent.name+"_"+i;}else{if(v.path){v.name=v.path.replace(/\//g,"").replace(/\[/g,"_").replace(/\]/g,"");}}if(this.parent.options.rubyrails){$(v.field).attr("name",v.parent.name);}else{$(v.field).attr("name",v.name);}}if(!v.prePath){v.prePath=v.path;}_this.updateChildrenPathAndName(v);});}},moveItem:function(fromId,isUp){var _this=this;if(this.childrenById[fromId]){$.each(this.children,function(index,val){if(val.getId()==fromId){var toIndex;if(isUp===true){toIndex=index-1;if(toIndex<0){toIndex=_this.children.length-1;}}else{toIndex=index+1;if(toIndex>=_this.children.length){toIndex=0;}}if(_this.children[toIndex]){var toId=_this.children[toIndex].getId();var fromContainer=$("#"+fromId+"-item-container");var toContainer=$("#"+toId+"-item-container");_this.reRenderItem(_this.children[index],toContainer);_this.reRenderItem(_this.children[toIndex],fromContainer);var tmp=_this.children[index];_this.children[index]=_this.children[toIndex];_this.children[toIndex]=tmp;_this.updatePathAndName();return false;}}});}},removeItem:function(id){if(this._validateEqualMinItems()){this.children=$.grep(this.children,function(val,index){return(val.getId()!=id);});delete this.childrenById[id];$("#"+id+"-item-container",this.outerEl).remove();this.refreshValidationState();this.updateToolbarItemsStatus();this.updatePathAndName();this.triggerUpdate();}},updateToolbarItemsStatus:function(){var _this=this;if(_this._validateEqualMaxItems()){$(".alpaca-fieldset-array-item-toolbar-add",this.outerEl).each(function(index){$(this).removeClass("alpaca-fieldset-array-item-toolbar-disabled");});}else{$(".alpaca-fieldset-array-item-toolbar-add",this.outerEl).each(function(index){$(this).addClass("alpaca-fieldset-array-item-toolbar-disabled");});}if(_this._validateEqualMinItems()){$(".alpaca-fieldset-array-item-toolbar-remove",this.outerEl).each(function(index){$(this).removeClass("alpaca-fieldset-array-item-toolbar-disabled");});}else{$(".alpaca-fieldset-array-item-toolbar-remove",this.outerEl).each(function(index){$(this).addClass("alpaca-fieldset-array-item-toolbar-disabled");});}if(this.getSize()===0){this.renderArrayToolbar(this.outerEl);}else{if(this.arrayToolbar){this.arrayToolbar.remove();}}$(".alpaca-item-label-counter",this.outerEl).each(function(index){$(this).html(index+1);});},renderToolbar:function(containerElem){var _this=this;if(this.view&&this.view.type=="view"){return;}if(!this.options.readonly){var id=containerElem.attr("alpaca-id");var fieldControl=this.childrenById[id];var itemToolbarTemplateDescriptor=this.view.getTemplateDescriptor("arrayItemToolbar");if(itemToolbarTemplateDescriptor){var buttonsDef=[{feature:"add",icon:_this.addIcon,label:(_this.options.items&&_this.options.items.addItemLabel)?_this.options.items.addItemLabel:"Add Item",clickCallback:function(id,arrayField){_this.resolveItemSchemaOptions(function(schema,options){arrayField.addItem(containerElem.index()+1,schema,options,null,id,true,function(addedField){arrayField.enrichElements(addedField.getEl());});});return false;}},{feature:"remove",icon:_this.removeIcon,label:(_this.options.items&&_this.options.items.removeItemLabel)?_this.options.items.removeItemLabel:"Remove Item",clickCallback:function(id,arrayField){arrayField.removeItem(id);}}];if((_this.options.items&&_this.options.items.showMoveUpItemButton)){buttonsDef.push({feature:"up",icon:_this.upIcon,label:(_this.options.items&&_this.options.items.moveUpItemLabel)?_this.options.items.moveUpItemLabel:"Move Up",clickCallback:function(id,arrayField){arrayField.moveItem(id,true);}});}if((_this.options.items&&_this.options.items.showMoveDownItemButton)){buttonsDef.push({feature:"down",icon:_this.downIcon,label:(_this.options.items&&_this.options.items.moveDownItemLabel)?_this.options.items.moveDownItemLabel:"Move Down",clickCallback:function(id,arrayField){arrayField.moveItem(id,false);}});}if(_this.options.items&&_this.options.items.extraToolbarButtons){buttonsDef=$.merge(buttonsDef,_this.options.items.extraToolbarButtons);}var toolbarElem=_this.view.tmpl(itemToolbarTemplateDescriptor,{"id":id,"buttons":buttonsDef});if(toolbarElem.attr("id")===null){toolbarElem.attr("id",id+"-item-toolbar");}for(var i in buttonsDef){(function(def){var el=toolbarElem.find(".alpaca-fieldset-array-item-toolbar-"+def.feature);el.click(function(e){return def.clickCallback(id,_this,e);});if(_this.buttonBeautifier){_this.buttonBeautifier.call(_this,el,def.icon);}})(buttonsDef[i]);}if(this.options.toolbarSticky){toolbarElem.prependTo(containerElem);}else{toolbarElem.hide().prependTo(containerElem);containerElem.hover(function(){$(".alpaca-fieldset-array-item-toolbar",this).show();},function(){$(".alpaca-fieldset-array-item-toolbar",this).hide();});}}}},renderArrayToolbar:function(containerElem){var _this=this;if(this.view&&this.view.type=="view"){return;}var id=containerElem.attr("alpaca-id");var itemToolbarTemplateDescriptor=this.view.getTemplateDescriptor("arrayToolbar");if(itemToolbarTemplateDescriptor){var toolbarElem=_this.view.tmpl(itemToolbarTemplateDescriptor,{"id":id,"addItemLabel":(_this.options.items&&_this.options.items.addItemLabel)?_this.options.items.addItemLabel:"Add Item"});if(toolbarElem.attr("id")===null){toolbarElem.attr("id",id+"-array-toolbar");}if(this.options.toolbarStyle=="link"){$(".alpaca-fieldset-array-toolbar-add",toolbarElem).click(function(){_this.resolveItemSchemaOptions(function(schema,options){_this.addItem(0,schema,options,"",id,true,function(addedField){_this.enrichElements(addedField.getEl());});});});}else{var toolbarElemAdd=$(".alpaca-fieldset-array-toolbar-add",toolbarElem);if(_this.buttonBeautifier){_this.buttonBeautifier.call(_this,toolbarElemAdd,_this.addIcon,true);}toolbarElemAdd.click(function(){_this.resolveItemSchemaOptions(function(schema,options){_this.addItem(0,schema,options,"",id,true,function(addedField){_this.enrichElements(addedField.getEl());});});return false;}).wrap("<small></small>");}toolbarElem.appendTo(containerElem);this.arrayToolbar=toolbarElem;}},reRenderItem:function(fieldControl,newContainer){fieldControl.container=newContainer;fieldControl.render();newContainer.attr("id",fieldControl.getId()+"-item-container");newContainer.attr("alpaca-id",fieldControl.getId());newContainer.addClass("alpaca-item-container");$(".alpaca-fieldset-array-item-toolbar",newContainer).remove();this.renderToolbar(newContainer);this.enrichElements(newContainer);},addItem:function(index,itemSchema,itemOptions,itemData,insertAfterId,isDynamicSubItem,postRenderCallback){return this._addItem(index,itemSchema,itemOptions,itemData,insertAfterId,isDynamicSubItem,postRenderCallback);},_addItem:function(index,itemSchema,itemOptions,itemData,insertAfterId,isDynamicSubItem,postRenderCallback){var _this=this;if(_this._validateEqualMaxItems()){if(itemOptions===null&&_this.options&&_this.options.fields&&_this.options.fields["item"]){itemOptions=_this.options.fields["item"];}var containerElem=_this.renderItemContainer(insertAfterId);containerElem.alpaca({"data":itemData,"options":itemOptions,"schema":itemSchema,"view":this.view.id?this.view.id:this.view,"connector":this.connector,"error":function(err){_this.destroy();_this.errorCallback.call(_this,err);},"notTopLevel":true,"isDynamicCreation":(isDynamicSubItem||this.isDynamicCreation),"render":function(fieldControl,cb){fieldControl.parent=_this;fieldControl.path=_this.path+"["+index+"]";fieldControl.nameCalculated=true;fieldControl.render(null,function(){containerElem.attr("id",fieldControl.getId()+"-item-container");containerElem.attr("alpaca-id",fieldControl.getId());containerElem.addClass("alpaca-item-container");if(_this.options&&_this.options.itemLabel){var itemLabelTemplateDescriptor=_this.view.getTemplateDescriptor("itemLabel");var itemLabelElem=_this.view.tmpl(itemLabelTemplateDescriptor,{"options":_this.options,"index":index?index+1:1,"id":_this.id});itemLabelElem.prependTo(containerElem);}_this.addChild(fieldControl,index);_this.renderToolbar(containerElem);_this.refreshValidationState();_this.updatePathAndName();_this.triggerUpdate();if($(containerElem).siblings().addBack().length>0){$(containerElem).parent().removeClass("alpaca-fieldset-items-container-empty");$(containerElem).siblings().addBack().removeClass("alpaca-item-container-first");$(containerElem).siblings().addBack().removeClass("alpaca-item-container-last");$(containerElem).siblings().addBack().first().addClass("alpaca-item-container-first");$(containerElem).siblings().addBack().last().addClass("alpaca-item-container-last");}$(containerElem).attr("data-alpaca-item-container-item-key",index);_this.updateToolbarItemsStatus(_this.outerEl);if(Alpaca.isFunction(_this.options.items.postRender)){_this.options.items.postRender(containerElem);}if(cb){cb();}});},"postRender":function(control){if(postRenderCallback){postRenderCallback(control);}}});return containerElem;}},enrichElements:function(containerElem){this.getStyleInjection("array",containerElem);},resolveItemSchemaOptions:function(callback){var _this=this;var itemOptions;if(_this.options&&_this.options.fields&&_this.options.fields["item"]){itemOptions=_this.options.fields["item"];}var itemSchema;if(_this.schema&&_this.schema.items){itemSchema=_this.schema.items;}if(itemSchema&&itemSchema["$ref"]){var referenceId=itemSchema["$ref"];var topField=this;var fieldChain=[topField];while(topField.parent){topField=topField.parent;fieldChain.push(topField);}var originalItemSchema=itemSchema;var originalItemOptions=itemOptions;Alpaca.loadRefSchemaOptions(topField,referenceId,function(itemSchema,itemOptions){var refCount=0;for(var i=0;i<fieldChain.length;i++){if(fieldChain[i].schema&&fieldChain[i].schema.id===referenceId){refCount++;}}var circular=(refCount>1);var resolvedItemSchema={};if(originalItemSchema){Alpaca.mergeObject(resolvedItemSchema,originalItemSchema);}if(itemSchema){Alpaca.mergeObject(resolvedItemSchema,itemSchema);}delete resolvedItemSchema.id;var resolvedItemOptions={};if(originalItemOptions){Alpaca.mergeObject(resolvedItemOptions,originalItemOptions);}if(itemOptions){Alpaca.mergeObject(resolvedItemOptions,itemOptions);}callback(resolvedItemSchema,resolvedItemOptions,circular);});}else{callback(itemSchema,itemOptions);}},renderItems:function(onSuccess){var self=this;$(self.fieldContainer).addClass("alpaca-fieldset-items-container-empty");if(self.data){self.resolveItemSchemaOptions(function(schema,options){var funcs=[];for(var index=0;index<self.data.length;index++){var value=self.data[index];var pf=(function(index,value){return function(callback){self.addItem(index,schema,options,value,false,false,function(){Alpaca.nextTick(function(){callback();});});};})(index,value);funcs.push(pf);}Alpaca.series(funcs,function(err){self.updateToolbarItemsStatus();if(onSuccess){onSuccess();}});});}else{self.updateToolbarItemsStatus();if(onSuccess){onSuccess();}}},_validateEqualMaxItems:function(){if(this.schema.items&&this.schema.items.maxItems){if(this.getSize()>=this.schema.items.maxItems){return false;}}return true;},_validateEqualMinItems:function(){if(this.schema.items&&this.schema.items.minItems){if(this.getSize()<=this.schema.items.minItems){return false;}}return true;},_validateMinItems:function(){if(this.schema.items&&this.schema.items.minItems){if(this.getSize()<this.schema.items.minItems){return false;}}return true;},_validateMaxItems:function(){if(this.schema.items&&this.schema.items.maxItems){if(this.getSize()>this.schema.items.maxItems){return false;}}return true;},_validateUniqueItems:function(){if(this.schema.items&&this.schema.uniqueItems){var hash={};for(var i=0,l=this.children.length;i<l;++i){if(!hash.hasOwnProperty(this.children[i])){hash[this.children[i]]=true;}else{return false;}}}return true;},handleValidate:function(){var baseStatus=this.base();var valInfo=this.validation;var status=this._validateUniqueItems();valInfo["valueNotUnique"]={"message":status?"":this.view.getMessage("valueNotUnique"),"status":status};status=this._validateMaxItems();valInfo["tooManyItems"]={"message":status?"":Alpaca.substituteTokens(this.view.getMessage("tooManyItems"),[this.schema.items.maxItems]),"status":status};status=this._validateMinItems();valInfo["notEnoughItems"]={"message":status?"":Alpaca.substituteTokens(this.view.getMessage("notEnoughItems"),[this.schema.items.minItems]),"status":status};return baseStatus&&valInfo["valueNotUnique"]["status"]&&valInfo["tooManyItems"]["status"]&&valInfo["notEnoughItems"]["status"];},getSchemaOfSchema:function(){var properties={"properties":{"items":{"title":"Array Items","description":"Schema for array items.","type":"object","properties":{"minItems":{"title":"Minimum Items","description":"Minimum number of items.","type":"number"},"maxItems":{"title":"Maximum Items","description":"Maximum number of items.","type":"number"},"uniqueItems":{"title":"Items Unique","description":"Item values should be unique if true.","type":"boolean","default":false}}}}};if(this.children&&this.children[0]){Alpaca.merge(properties.properties.items.properties,this.children[0].getSchemaOfSchema());}return Alpaca.merge(this.base(),properties);},getOptionsForSchema:function(){return Alpaca.merge(this.base(),{"fields":{"items":{"type":"object","fields":{"minItems":{"type":"integer"},"maxItems":{"type":"integer"},"uniqueItems":{"type":"checkbox"}}}}});},getSchemaOfOptions:function(){var properties={"properties":{"toolbarSticky":{"title":"Sticky Toolbar","description":"Array item toolbar will be aways on if true.","type":"boolean","default":false},"items":{"title":"Array Items","description":"Options for array items.","type":"object","properties":{"extraToolbarButtons":{"title":"Extra Toolbar buttons","description":"Buttons to be added next to add/remove/up/down, see examples","type":"array","default":undefined},"moveUpItemLabel":{"title":"Move Up Item Label","description":"The label to use for the toolbar's 'move up' button.","type":"string","default":"Move Up"},"moveDownItemLabel":{"title":"Move Down Item Label","description":"The label to use for the toolbar's 'move down' button.","type":"string","default":"Move Down"},"removeItemLabel":{"title":"Remove Item Label","description":"The label to use for the toolbar's 'remove item' button.","type":"string","default":"Remove Item"},"addItemLabel":{"title":"Add Item Label","description":"The label to use for the toolbar's 'add item' button.","type":"string","default":"Add Item"},"showMoveDownItemButton":{"title":"Show Move Down Item Button","description":"Whether to show to the 'Move Down' button on the toolbar.","type":"boolean","default":true},"showMoveUpItemButton":{"title":"Show Move Up Item Button","description":"Whether to show the 'Move Up' button on the toolbar.","type":"boolean","default":true}}}}};if(this.children&&this.children[0]){Alpaca.merge(properties.properties.items.properties,this.children[0].getSchemaOfSchema());}return Alpaca.merge(this.base(),properties);},getOptionsForOptions:function(){return Alpaca.merge(this.base(),{"fields":{"toolbarSticky":{"type":"checkbox"},"items":{"type":"object","fields":{}}}});},getTitle:function(){return"Array Field";},getDescription:function(){return"Field for list of items with same data type or structure.";},getType:function(){return"array";},getFieldType:function(){return"array";}});Alpaca.registerTemplate("itemLabel",'{{if options.itemLabel}}<div class="alpaca-controlfield-label"><div>${options.itemLabel}{{if index}} <span class="alpaca-item-label-counter">${index}</span>{{/if}}</div></div>{{/if}}');Alpaca.registerTemplate("arrayToolbar",'<span class="ui-widget ui-corner-all alpaca-fieldset-array-toolbar"><button class="alpaca-fieldset-array-toolbar-icon alpaca-fieldset-array-toolbar-add">${addItemLabel}</button></span>');Alpaca.registerTemplate("arrayItemToolbar",'<div class="ui-widget-header ui-corner-all alpaca-fieldset-array-item-toolbar">{{each(k,v) buttons}}<button class="alpaca-fieldset-array-item-toolbar-icon alpaca-fieldset-array-item-toolbar-${v.feature}">${v.label}</button>{{/each}}</div>');Alpaca.registerMessages({"notEnoughItems":"The minimum number of items is {0}","tooManyItems":"The maximum number of items is {0}","valueNotUnique":"Values are not unique","notAnArray":"This value is not an Array"});Alpaca.registerFieldClass("array",Alpaca.Fields.ArrayField);Alpaca.registerDefaultSchemaFieldMapping("array","array");})(jQuery);(function($){var Alpaca=$.alpaca;Alpaca.Fields.ObjectField=Alpaca.ContainerField.extend({constructor:function(container,data,options,schema,view,connector,errorCallback){this.base(container,data,options,schema,view,connector,errorCallback);},setup:function(){this.base();this.wizardPreIcon="";this.wizardNextIcon="";this.wizardDoneIcon="";if(this.view.style&&Alpaca.styleInjections[this.view.style]){if(Alpaca.styleInjections[this.view.style]["wizardPreIcon"]){this.wizardPreIcon=Alpaca.styleInjections[this.view.style]["wizardPreIcon"];}if(Alpaca.styleInjections[this.view.style]["wizardNextIcon"]){this.wizardNextIcon=Alpaca.styleInjections[this.view.style]["wizardNextIcon"];}if(Alpaca.styleInjections[this.view.style]["wizardDoneIcon"]){this.wizardDoneIcon=Alpaca.styleInjections[this.view.style]["wizardDoneIcon"];}}if(Alpaca.isEmpty(this.data)){return;}if(this.data==""){return;}if(!Alpaca.isObject(this.data)){if(!Alpaca.isString(this.data)){return;}else{try{this.data=Alpaca.parseJSON(this.data);if(!Alpaca.isObject(this.data)){Alpaca.logWarn("ObjectField parsed data but it was not an object: "+JSON.stringify(this.data));return;}}catch(e){return;}}}},setValue:function(data){if(!data){data={};}if(!Alpaca.isObject(data)){return;}var existingFieldsByPropertyId={};for(var fieldId in this.childrenById){var propertyId=this.childrenById[fieldId].propertyId;existingFieldsByPropertyId[propertyId]=this.childrenById[fieldId];}var newDataByPropertyId={};for(var k in data){if(data.hasOwnProperty(k)){newDataByPropertyId[k]=data[k];}}for(var propertyId in newDataByPropertyId){var field=existingFieldsByPropertyId[propertyId];if(field){field.setValue(newDataByPropertyId[propertyId]);delete existingFieldsByPropertyId[propertyId];delete newDataByPropertyId[propertyId];}}for(var propertyId in existingFieldsByPropertyId){var field=existingFieldsByPropertyId[propertyId];field.setValue(null);}},getValue:function(){if(this.children.length===0&&!this.schema.required){return{};}var o={};for(var i=0;i<this.children.length;i++){var propertyId=this.children[i].propertyId;var fieldValue=this.children[i].getValue();if(typeof(fieldValue)!=="undefined"){if(this.determineAllDependenciesValid(propertyId)){var assignedValue=null;if(typeof(fieldValue)==="boolean"){assignedValue=(fieldValue?true:false);}else{if(Alpaca.isArray(fieldValue)||Alpaca.isObject(fieldValue)){assignedValue=fieldValue;}else{if(fieldValue){assignedValue=fieldValue;}}}if(assignedValue){o[propertyId]=assignedValue;}}}}return o;},postRender:function(callback){var self=this;this.base(function(){if(self.isTopLevel()){if(self.view){self.wizardConfigs=self.view.getWizard();if(self.wizardConfigs){if(Alpaca.isUndefined(self.wizardConfigs.validation)){self.wizardConfigs.validation=true;}if(!self.wizardConfigs.buttons){self.wizardConfigs.buttons={};}if(!self.wizardConfigs.buttons.done){self.wizardConfigs.buttons.done={};}if(Alpaca.isUndefined(self.wizardConfigs.buttons.done.validateOnClick)){self.wizardConfigs.buttons.done.validateOnClick=true;}if(!self.wizardConfigs.buttons.prev){self.wizardConfigs.buttons.prev={};}if(Alpaca.isUndefined(self.wizardConfigs.buttons.prev.validateOnClick)){self.wizardConfigs.buttons.prev.validateOnClick=true;}if(!self.wizardConfigs.buttons.next){self.wizardConfigs.buttons.next={};}if(Alpaca.isUndefined(self.wizardConfigs.buttons.next.validateOnClick)){self.wizardConfigs.buttons.next.validateOnClick=true;}}var layoutTemplateDescriptor=self.view.getLayout().templateDescriptor;if(self.wizardConfigs&&self.wizardConfigs.renderWizard){if(layoutTemplateDescriptor){self.wizard();}else{self.autoWizard();}}}}callback();});},handleValidate:function(){var baseStatus=this.base();var valInfo=this.validation;var status=this._validateMaxProperties();valInfo["tooManyProperties"]={"message":status?"":Alpaca.substituteTokens(this.view.getMessage("tooManyProperties"),[this.schema.maxProperties]),"status":status};status=this._validateMinProperties();valInfo["tooFewProperties"]={"message":status?"":Alpaca.substituteTokens(this.view.getMessage("tooManyItems"),[this.schema.items.minProperties]),"status":status};return baseStatus&&valInfo["tooManyProperties"]["status"]&&valInfo["tooFewProperties"]["status"];},_validateMaxProperties:function(){if(typeof(this.schema["maxProperties"])=="undefined"){return true;}var maxProperties=this.schema["maxProperties"];var propertyCount=0;for(var k in this.data){propertyCount++;}return propertyCount<=maxProperties;},_validateMinProperties:function(){if(typeof(this.schema["minProperties"])=="undefined"){return true;}var minProperties=this.schema["minProperties"];var propertyCount=0;for(var k in this.data){propertyCount++;}return propertyCount>=minProperties;},getIndex:function(propertyId){if(Alpaca.isEmpty(propertyId)){return -1;}for(var i=0;i<this.children.length;i++){var pid=this.children[i].propertyId;if(pid==propertyId){return i;}}return -1;},resolvePropertySchemaOptions:function(propertyId,callback){var _this=this;var propertySchema=null;if(_this.schema&&_this.schema.properties&&_this.schema.properties[propertyId]){propertySchema=_this.schema.properties[propertyId];}var propertyOptions={};if(_this.options&&_this.options.fields&&_this.options.fields[propertyId]){propertyOptions=_this.options.fields[propertyId];}if(propertySchema&&propertySchema["$ref"]){var referenceId=propertySchema["$ref"];var topField=this;var fieldChain=[topField];while(topField.parent){topField=topField.parent;fieldChain.push(topField);}var originalPropertySchema=propertySchema;var originalPropertyOptions=propertyOptions;Alpaca.loadRefSchemaOptions(topField,referenceId,function(propertySchema,propertyOptions){var refCount=0;for(var i=0;i<fieldChain.length;i++){if(fieldChain[i].schema&&fieldChain[i].schema.id===referenceId){refCount++;}}var circular=(refCount>1);var resolvedPropertySchema={};if(originalPropertySchema){Alpaca.mergeObject(resolvedPropertySchema,originalPropertySchema);}if(propertySchema){Alpaca.mergeObject(resolvedPropertySchema,propertySchema);}if(originalPropertySchema&&originalPropertySchema.id){resolvedPropertySchema.id=originalPropertySchema.id;}var resolvedPropertyOptions={};if(originalPropertyOptions){Alpaca.mergeObject(resolvedPropertyOptions,originalPropertyOptions);}if(propertyOptions){Alpaca.mergeObject(resolvedPropertyOptions,propertyOptions);}Alpaca.nextTick(function(){callback(resolvedPropertySchema,resolvedPropertyOptions,circular);});});}else{Alpaca.nextTick(function(){callback(propertySchema,propertyOptions);});}},removeItem:function(id){this.children=$.grep(this.children,function(val,index){return(val.getId()!=id);});var childField=this.childrenById[id];delete this.childrenById[id];if(childField.propertyId){delete this.childrenByPropertyId[childField.propertyId];}childField.destroy();this.refreshValidationState();this.triggerUpdate();},addItem:function(propertyId,itemSchema,itemOptions,itemData,insertAfterId,isDynamicSubItem,postRenderCallback){var _this=this;var containerElem=_this.renderItemContainer(insertAfterId,this,propertyId);containerElem.alpaca({"data":itemData,"options":itemOptions,"schema":itemSchema,"view":this.view.id?this.view.id:this.view,"connector":this.connector,"error":function(err){_this.destroy();_this.errorCallback.call(_this,err);},"notTopLevel":true,"isDynamicCreation":(isDynamicSubItem||this.isDynamicCreation),"render":function(fieldControl,cb){fieldControl.parent=_this;fieldControl.propertyId=propertyId;if(_this.path!="/"){fieldControl.path=_this.path+"/"+propertyId;}else{fieldControl.path=_this.path+propertyId;}fieldControl.render(null,function(){containerElem.attr("id",fieldControl.getId()+"-item-container");containerElem.attr("alpaca-id",fieldControl.getId());containerElem.addClass("alpaca-fieldset-item-container");if(Alpaca.isEmpty(insertAfterId)){_this.addChild(fieldControl);}else{var index=_this.getIndex(insertAfterId);if(index!=-1){_this.addChild(fieldControl,index+1);}else{_this.addChild(fieldControl);}}if(insertAfterId){_this.refreshValidationState();}if($(containerElem).siblings().addBack().length>0){$(containerElem).parent().removeClass("alpaca-fieldset-items-container-empty");$(containerElem).siblings().addBack().removeClass("alpaca-item-container-first");$(containerElem).siblings().addBack().removeClass("alpaca-item-container-last");$(containerElem).siblings().addBack().first().addClass("alpaca-item-container-first");$(containerElem).siblings().addBack().last().addClass("alpaca-item-container-last");}$(containerElem).attr("data-alpaca-item-container-item-key",propertyId);_this.triggerUpdate();if(cb){cb();}});},"postRender":function(control){if(postRenderCallback){postRenderCallback(control);}}});return containerElem;},renderItems:function(onSuccess){var _this=this;var extraDataProperties={};for(var dataKey in _this.data){extraDataProperties[dataKey]=dataKey;}var properties=_this.data;if(_this.schema&&_this.schema.properties){properties=_this.schema.properties;}var cf=function(){var extraDataKeys=[];for(var extraDataKey in extraDataProperties){extraDataKeys.push(extraDataKey);}if(extraDataKeys.length>0){Alpaca.logDebug("There were "+extraDataKeys.length+" extra data keys that were not part of the schema "+JSON.stringify(extraDataKeys));}if(onSuccess){onSuccess();}};var propertyFunctions=[];for(var propertyId in properties){var itemData=null;if(_this.data){itemData=_this.data[propertyId];}var pf=(function(propertyId,itemData,extraDataProperties){return function(callback){_this.resolvePropertySchemaOptions(propertyId,function(schema,options,circular){if(circular){return Alpaca.throwErrorWithCallback("Circular reference detected for schema: "+schema,_this.errorCallback);}if(!schema){Alpaca.logError("Unable to resolve schema for property: "+propertyId);}_this.addItem(propertyId,schema,options,itemData,null,false,function(addedItemControl){delete extraDataProperties[propertyId];_this.showOrHidePropertyBasedOnDependencies(propertyId);_this.bindDependencyFieldUpdateEvent(propertyId);_this.refreshDependentFieldStates(propertyId);Alpaca.nextTick(function(){callback();});});});};})(propertyId,itemData,extraDataProperties);propertyFunctions.push(pf);}Alpaca.series(propertyFunctions,function(err){cf();});},showOrHidePropertyBasedOnDependencies:function(propertyId){var self=this;var item=this.childrenByPropertyId[propertyId];if(!item){return Alpaca.throwErrorWithCallback("Missing property: "+propertyId,self.errorCallback);}var valid=this.determineAllDependenciesValid(propertyId);if(valid){item.show();item.onDependentReveal();}else{item.hide();item.onDependentConceal();}},determineAllDependenciesValid:function(propertyId){var self=this;var item=this.childrenByPropertyId[propertyId];if(!item){return Alpaca.throwErrorWithCallback("Missing property: "+propertyId,self.errorCallback);}var itemDependencies=item.schema.dependencies;if(!itemDependencies){return true;}var valid=true;if(Alpaca.isString(itemDependencies)){valid=self.determineSingleDependencyValid(propertyId,itemDependencies);}else{if(Alpaca.isArray(itemDependencies)){$.each(itemDependencies,function(index,value){valid=valid&&self.determineSingleDependencyValid(propertyId,value);});}}return valid;},bindDependencyFieldUpdateEvent:function(propertyId){var self=this;var item=this.childrenByPropertyId[propertyId];if(!item){return Alpaca.throwErrorWithCallback("Missing property: "+propertyId,self.errorCallback);}var itemDependencies=item.schema.dependencies;if(!itemDependencies){return true;}var bindEvent=function(propertyId,dependencyPropertyId){var dependentField=Alpaca.resolveField(self,dependencyPropertyId);if(dependentField){dependentField.getEl().bind("fieldupdate",function(propertyField,dependencyField,propertyId,dependencyPropertyId){return function(event){self.showOrHidePropertyBasedOnDependencies(propertyId);propertyField.trigger("fieldupdate");};}(item,dependentField,propertyId,dependencyPropertyId));dependentField.trigger("fieldupdate");}};if(Alpaca.isString(itemDependencies)){bindEvent(propertyId,itemDependencies);}else{if(Alpaca.isArray(itemDependencies)){$.each(itemDependencies,function(index,value){bindEvent(propertyId,value);});}}},refreshDependentFieldStates:function(propertyId){var self=this;var propertyField=this.childrenByPropertyId[propertyId];if(!propertyField){return Alpaca.throwErrorWithCallback("Missing property: "+propertyId,self.errorCallback);}var itemDependencies=propertyField.schema.dependencies;if(!itemDependencies){return true;}var triggerFieldUpdateForProperty=function(otherPropertyId){var dependentField=Alpaca.resolveField(self,otherPropertyId);if(dependentField){dependentField.trigger("fieldupdate");}};if(Alpaca.isString(itemDependencies)){triggerFieldUpdateForProperty(itemDependencies);}else{if(Alpaca.isArray(itemDependencies)){$.each(itemDependencies,function(index,value){triggerFieldUpdateForProperty(value);});}}},determineSingleDependencyValid:function(propertyId,dependentOnPropertyId){var self=this;var dependentOnField=Alpaca.resolveField(self,dependentOnPropertyId);if(!dependentOnField){return false;}var dependentOnData=dependentOnField.data;var valid=false;var conditionalDependencies=this.childrenByPropertyId[propertyId].options.dependencies;if(!conditionalDependencies||conditionalDependencies.length===0){if(dependentOnField.getType()==="boolean"&&!this.childrenByPropertyId[propertyId].options.dependencies&&!dependentOnData){valid=false;}else{valid=!Alpaca.isValEmpty(dependentOnField.data);}}else{if(dependentOnField.getType()==="boolean"&&!dependentOnData){dependentOnData=false;}var conditionalData=conditionalDependencies[dependentOnPropertyId];if(!Alpaca.isEmpty(conditionalData)&&Alpaca.isFunction(conditionalData)){valid=conditionalData.call(this,dependentOnData);}else{valid=true;if(Alpaca.isArray(conditionalData)){if(Alpaca.anyEquality(dependentOnData,conditionalData)){valid=false;}}else{if(!Alpaca.isEmpty(conditionalData)&&!Alpaca.anyEquality(conditionalData,dependentOnData)){valid=false;}}}}if(dependentOnField&&dependentOnField.isHidden()){valid=false;}return valid;},wizard:function(){var _this=this;var element=this.outerEl;var steps=$(".alpaca-wizard-step",element);var count=steps.size();this.totalSteps=count;var stepTitles=[];if(this.wizardConfigs.stepTitles){stepTitles=this.wizardConfigs.stepTitles;}else{steps.each(function(i){var stepTitle={"title":"","description":""};if($(".alpaca-wizard-step-title",this)){stepTitle.title=$(".alpaca-wizard-step-title",this).html();$(".alpaca-wizard-step-title",this).hide();}if($(".alpaca-wizard-step-description",this)){stepTitle.description=$(".alpaca-wizard-step-description",this).html();$(".alpaca-wizard-step-description",this).hide();}stepTitles.push(stepTitle);});}var wizardStatusBarElement=this._renderWizardStatusBar(stepTitles);if(wizardStatusBarElement){$(element).before(wizardStatusBarElement);}steps.each(function(i){var wizardStepTargetId=$(this).attr("id");var stepId="step"+i;var wizardStepTemplateDescriptor=_this.view.getTemplateDescriptor("wizardStep");if(wizardStepTemplateDescriptor){var wizardStepElement=_this.view.tmpl(wizardStepTemplateDescriptor,{});wizardStepElement.attr("id",stepId);$(this).wrap(wizardStepElement);}var navBarId=stepId+"-nav-bar";var wizardNavBarTemplateDescriptor=_this.view.getTemplateDescriptor("wizardNavBar");if(wizardNavBarTemplateDescriptor){var wizardNavBarElement=_this.view.tmpl(wizardNavBarTemplateDescriptor,{});wizardNavBarElement.attr("id",navBarId);wizardNavBarElement.addClass("alpaca-wizard-nav-bar");$(this).append(wizardNavBarElement);}var stepBindings={};var bindings=_this.view.getLayout().bindings;for(var fieldId in bindings){var bindingTargetId=bindings[fieldId];if(bindingTargetId==wizardStepTargetId){stepBindings[fieldId]=wizardStepTargetId;}}var vFunc=function(stepCount,stepBindings){return function(){var valid=true;if(_this.wizardConfigs&&_this.wizardConfigs.validation){if(stepBindings){$.each(stepBindings,function(propertyId,step){valid=valid&_this.childrenByPropertyId[propertyId].validate();_this.childrenByPropertyId[propertyId].refreshValidationState();});}}return valid;};}(i,stepBindings);if(i===0){_this._createNextButton(i,true,vFunc);_this._selectStep(i);}else{if(i==count-1){$("#step"+i).hide();_this._createPrevButton(i,false);_this._createDoneButton(i,true,vFunc);}else{$("#step"+i).hide();_this._createPrevButton(i,false);_this._createNextButton(i,true,vFunc);}}});},autoWizard:function(){var _this=this;var totalSteps=this.wizardConfigs.steps;if(!totalSteps){totalSteps=1;}this.totalSteps=totalSteps;var stepBindings=this.wizardConfigs.bindings;if(!stepBindings){stepBindings={};}for(var propertyId in this.childrenByPropertyId){if(!stepBindings.hasOwnProperty(propertyId)){stepBindings[propertyId]=1;}}for(var i=0;i<totalSteps;i++){var step=i+1;var tmpArray=[];for(var propertyId in stepBindings){if(stepBindings[propertyId]==step){if(this.childrenByPropertyId&&this.childrenByPropertyId[propertyId]){tmpArray.push("#"+this.childrenByPropertyId[propertyId].container.attr("id"));}}}var stepId="step"+i;var wizardStepTemplateDescriptor=this.view.getTemplateDescriptor("wizardStep");if(wizardStepTemplateDescriptor){var wizardStepElement=_this.view.tmpl(wizardStepTemplateDescriptor,{});wizardStepElement.attr("id",stepId);$(tmpArray.join(",")).wrapAll(wizardStepElement);}var navBarId=stepId+"-nav-bar";var wizardNavBarTemplateDescriptor=this.view.getTemplateDescriptor("wizardNavBar");if(wizardNavBarTemplateDescriptor){var wizardNavBarElement=_this.view.tmpl(wizardNavBarTemplateDescriptor,{});wizardNavBarElement.attr("id",navBarId);wizardNavBarElement.addClass("alpaca-wizard-nav-bar");$("#"+stepId,this.outerEl).append(wizardNavBarElement);}}var wizardStatusBarElement=this._renderWizardStatusBar(this.wizardConfigs.stepTitles);if(wizardStatusBarElement){wizardStatusBarElement.prependTo(this.fieldContainer);}for(var i=0;i<totalSteps;i++){var vFunc=function(stepCount,stepBindings){return function(){var valid=true;if(_this.view&&_this.wizardConfigs&&_this.wizardConfigs.validation){if(stepBindings){$.each(stepBindings,function(propertyId,step){if(step==stepCount+1&&valid){valid=_this.childrenByPropertyId[propertyId].validate();_this.childrenByPropertyId[propertyId].validate();}});}}return valid;};}(i,stepBindings);if(i===0){_this._createNextButton(i,false,vFunc);_this._selectStep(i);}else{if(i==totalSteps-1){$("#step"+i).hide();_this._createPrevButton(i,false);_this._createDoneButton(i,true,vFunc);}else{$("#step"+i).hide();_this._createPrevButton(i,false);_this._createNextButton(i,false,vFunc);}}}},_renderWizardStatusBar:function(stepTitles){var _this=this;var wizardStatusBar=this.wizardConfigs.statusBar;if(wizardStatusBar&&stepTitles){var wizardStatusBarTemplateDescriptor=this.view.getTemplateDescriptor("wizardStatusBar");if(wizardStatusBarTemplateDescriptor){var wizardStatusBarElement=_this.view.tmpl(wizardStatusBarTemplateDescriptor,{"id":this.getId()+"-wizard-status-bar","titles":stepTitles});wizardStatusBarElement.addClass("alpaca-wizard-status-bar");this.getStyleInjection("wizardStatusBar",wizardStatusBarElement);return wizardStatusBarElement;}}},_createPrevButton:function(i,clear,validationFunction){if(this.wizardConfigs.buttons&&this.wizardConfigs.buttons.prev){if(!this.wizardConfigs.buttons.prev.validateOnClick){validationFunction=null;}}var stepName="step"+i;var _this=this;var wizardPreButtonTemplateDescriptor=this.view.getTemplateDescriptor("wizardPreButton");if(wizardPreButtonTemplateDescriptor){var wizardPreButtonElement=_this.view.tmpl(wizardPreButtonTemplateDescriptor,{});wizardPreButtonElement.attr("id",stepName+"-button-pre");wizardPreButtonElement.addClass("alpaca-wizard-button-pre");if(_this.buttonBeautifier){_this.buttonBeautifier.call(_this,wizardPreButtonElement,this.wizardPreIcon,true);}wizardPreButtonElement.click(function(stepName,stepCount,validationFunction){return function(){var valid=true;if(validationFunction){valid=validationFunction(stepName,stepCount);}if(valid){$("#"+stepName).hide();$("#step"+(i-1)).show();_this._selectStep(i-1);if(_this.wizardConfigs.buttons.prev&&_this.wizardConfigs.buttons.prev.onClick){_this.wizardConfigs.buttons.prev.onClick();}}return false;};}(stepName,i,validationFunction));$("#"+stepName+"-nav-bar").append(wizardPreButtonElement);if(clear){$("#"+stepName+"-nav-bar").parent().append("<div style='clear:both'></div>");}}},_createNextButton:function(i,clear,validationFunction){if(this.wizardConfigs.buttons&&this.wizardConfigs.buttons.next){if(!this.wizardConfigs.buttons.next.validateOnClick){validationFunction=null;}}var stepName="step"+i;var _this=this;var wizardNextButtonTemplateDescriptor=this.view.getTemplateDescriptor("wizardNextButton");if(wizardNextButtonTemplateDescriptor){var wizardNextButtonElement=_this.view.tmpl(wizardNextButtonTemplateDescriptor,{});wizardNextButtonElement.attr("id",stepName+"-button-next");wizardNextButtonElement.addClass("alpaca-wizard-button-next");if(_this.buttonBeautifier){_this.buttonBeautifier.call(_this,wizardNextButtonElement,this.wizardNextIcon,true);}wizardNextButtonElement.click(function(stepName,stepCount,validationFunction){return function(){var valid=true;if(validationFunction){valid=validationFunction(stepName,stepCount);}if(valid){$("#"+stepName).hide();$("#step"+(stepCount+1)).show();_this._selectStep(stepCount+1);if(_this.wizardConfigs.buttons.next&&_this.wizardConfigs.buttons.next.onClick){_this.wizardConfigs.buttons.next.onClick();}}return false;};}(stepName,i,validationFunction));$("#"+stepName+"-nav-bar").append(wizardNextButtonElement);if(clear){$("#"+stepName+"-nav-bar").parent().append("<div style='clear:both'></div>");}}},_createDoneButton:function(i,clear,validationFunction){if(this.wizardConfigs.buttons&&this.wizardConfigs.buttons.done){if(!this.wizardConfigs.buttons.done.validateOnClick){validationFunction=null;}}var stepName="step"+i;var _this=this;var wizardDoneButtonTemplateDescriptor=this.view.getTemplateDescriptor("wizardDoneButton");if(wizardDoneButtonTemplateDescriptor){var wizardDoneButtonElement=_this.view.tmpl(wizardDoneButtonTemplateDescriptor,{});wizardDoneButtonElement.attr("id",stepName+"-button-done");wizardDoneButtonElement.addClass("alpaca-wizard-button-done");if(_this.buttonBeautifier){_this.buttonBeautifier.call(_this,wizardDoneButtonElement,this.wizardDoneIcon,true);}wizardDoneButtonElement.click(function(stepName,stepCount,validationFunction){return function(){var valid=true;if(validationFunction){valid=validationFunction(stepName,stepCount);}if(valid){$("#"+stepName+"-nav-bar").append(wizardDoneButtonElement);if(clear){$("#"+stepName+"-nav-bar").parent().append("<div style='clear:both'></div>");}if(_this.wizardConfigs.buttons.done&&_this.wizardConfigs.buttons.done.onClick){_this.wizardConfigs.buttons.done.onClick();}}return false;};}(stepName,i,validationFunction));$("#"+stepName+"-nav-bar").append(wizardDoneButtonElement);if(clear){$("#"+stepName+"-nav-bar").parent().append("<div style='clear:both'></div>");}}},_selectStep:function(i){var unCurrentStepElem=$("#"+this.getId()+"-wizard-status-bar"+" li");unCurrentStepElem.removeClass("current current-has-next");this.getStyleInjection("wizardUnCurrentStep",unCurrentStepElem);var currentStepElem=$("#stepDesc"+i);currentStepElem.addClass("current");this.getStyleInjection("wizardCurrentStep",currentStepElem);if(i<this.totalSteps-1){$("#stepDesc"+i).addClass("current-has-next");}},getSchemaOfSchema:function(){var properties={"properties":{"properties":{"title":"Properties","description":"List of child properties.","type":"object"},"maxProperties":{"type":"number","title":"Maximum Number Properties","description":"The maximum number of properties that this object is allowed to have"},"minProperties":{"type":"number","title":"Minimum Number of Properties","description":"The minimum number of properties that this object is required to have"}}};var fieldsProperties=properties.properties.properties;fieldsProperties.properties={};if(this.children){for(var i=0;i<this.children.length;i++){var propertyId=this.children[i].propertyId;fieldsProperties.properties[propertyId]=this.children[i].getSchemaOfSchema();fieldsProperties.properties[propertyId].title=propertyId+" :: "+fieldsProperties.properties[propertyId].title;}}return Alpaca.merge(this.base(),properties);},getSchemaOfOptions:function(){var schemaOfOptions=Alpaca.merge(this.base(),{"properties":{}});var properties={"properties":{"fields":{"title":"Field Options","description":"List of options for child fields.","type":"object"}}};var fieldsProperties=properties.properties.fields;fieldsProperties.properties={};if(this.children){for(var i=0;i<this.children.length;i++){var propertyId=this.children[i].propertyId;fieldsProperties.properties[propertyId]=this.children[i].getSchemaOfOptions();fieldsProperties.properties[propertyId].title=propertyId+" :: "+fieldsProperties.properties[propertyId].title;}}return Alpaca.merge(schemaOfOptions,properties);},getTitle:function(){return"Object Field";},getDescription:function(){return"Object field for containing other fields";},getType:function(){return"object";},getFieldType:function(){return"object";}});Alpaca.registerMessages({"tooManyProperties":"The maximum number of properties ({0}) has been exceeded.","tooFewProperties":"There are not enough properties ({0} are required)"});Alpaca.registerFieldClass("object",Alpaca.Fields.ObjectField);Alpaca.registerDefaultSchemaFieldMapping("object","object");})(jQuery);(function($){var Alpaca=$.alpaca;Alpaca.Fields.AnyField=Alpaca.ControlField.extend({constructor:function(container,data,options,schema,view,connector,errorCallback){this.base(container,data,options,schema,view,connector,errorCallback);},setup:function(){this.base();this.controlFieldTemplateDescriptor=this.view.getTemplateDescriptor("controlFieldAny");},renderField:function(onSuccess){if(this.controlFieldTemplateDescriptor){this.field=this.view.tmpl(this.controlFieldTemplateDescriptor,{"id":this.getId(),"name":this.name,"options":this.options});this.injectField(this.field);}if(onSuccess){onSuccess();}},getValue:function(){return this.field.val();},setValue:function(value){if(Alpaca.isEmpty(value)){this.field.val("");}else{this.field.val(value);}this.base(value);},handleValidate:function(){var baseStatus=this.base();return baseStatus;},disable:function(){this.field.disabled=true;},enable:function(){this.field.disabled=false;},focus:function(){this.field.focus();},getSchemaOfSchema:function(){return Alpaca.merge(this.base(),{"properties":{}});},getOptionsForSchema:function(){return Alpaca.merge(this.base(),{"fields":{}});},getSchemaOfOptions:function(){return Alpaca.merge(this.base(),{"properties":{}});},getOptionsForOptions:function(){return Alpaca.merge(this.base(),{"fields":{}});},getTitle:function(){return"Any Field";},getDescription:function(){return"Any field.";},getType:function(){return"any";},getFieldType:function(){return"any";}});Alpaca.registerTemplate("controlFieldAny",'<input type="text" id="${id}" size="40" {{if options.readonly}}readonly="readonly"{{/if}} {{if name}}name="${name}"{{/if}} {{each(i,v) options.data}}data-${i}="${v}"{{/each}}/>');Alpaca.registerFieldClass("any",Alpaca.Fields.AnyField);Alpaca.registerDefaultSchemaFieldMapping("any","any");})(jQuery);(function($){var Alpaca=$.alpaca;Alpaca.Fields.HiddenField=Alpaca.ControlField.extend({constructor:function(container,data,options,schema,view,connector,errorCallback){this.base(container,data,options,schema,view,connector,errorCallback);},setup:function(){this.base();if(!this.options.size){this.options.size=40;}this.controlFieldTemplateDescriptor=this.view.getTemplateDescriptor("controlFieldHidden");},renderField:function(onSuccess){var _this=this;if(this.controlFieldTemplateDescriptor){this.field=_this.view.tmpl(this.controlFieldTemplateDescriptor,{"id":this.getId(),"name":this.name,"options":this.options});this.injectField(this.field);}if(onSuccess){onSuccess();}},postRender:function(callback){var self=this;this.base(function(){if(self.fieldContainer){self.fieldContainer.addClass("alpaca-controlfield-hidden");}callback();});},getValue:function(){return this.field.val();},setValue:function(value){if(Alpaca.isEmpty(value)){this.field.val("");}else{this.field.val(value);}this.base(value);},getTitle:function(){return"Hidden";},getDescription:function(){return"Field for a hidden HTML input";},getType:function(){return"string";},getFieldType:function(){return"hidden";}});Alpaca.registerTemplate("controlFieldHidden",'<input type="hidden" id="${id}" {{if name}}name="${name}"{{/if}} {{each(i,v) options.data}}data-${i}="${v}"{{/each}}/>');Alpaca.registerFieldClass("hidden",Alpaca.Fields.HiddenField);})(jQuery);(function($){var Alpaca=$.alpaca;Alpaca.registerView({"id":"VIEW_BASE","messages":{"zh_CN":{required:"&#27492;&#22495;&#24517;&#39035;",invalid:"&#27492;&#22495;&#19981;&#21512;&#26684;",months:["&#19968;&#26376;","&#20108;&#26376;","&#19977;&#26376;","&#22235;&#26376;","&#20116;&#26376;","&#20845;&#26376;","&#19971;&#26376;","&#20843;&#26376;","&#20061;&#26376;","&#21313;&#26376;","&#21313;&#19968;&#26376;","&#21313;&#20108;&#26376;"],timeUnits:{SECOND:"&#31186;",MINUTE:"&#20998;",HOUR:"&#26102;",DAY:"&#26085;",MONTH:"&#26376;",YEAR:"&#24180;"},"notOptional":"&#27492;&#22495;&#38750;&#20219;&#36873;","disallowValue":"&#38750;&#27861;&#36755;&#20837;&#21253;&#25324; {0}.","invalidValueOfEnum":"&#20801;&#35768;&#36755;&#20837;&#21253;&#25324; {0}.","notEnoughItems":"&#26368;&#23567;&#20010;&#25968; {0}","tooManyItems":"&#26368;&#22823;&#20010;&#25968; {0}","valueNotUnique":"&#36755;&#20837;&#20540;&#19981;&#29420;&#29305;","notAnArray":"&#19981;&#26159;&#25968;&#32452;","invalidDate":"&#26085;&#26399;&#26684;&#24335;&#22240;&#35813;&#26159; {0}","invalidEmail":"&#20234;&#22969;&#20799;&#26684;&#24335;&#19981;&#23545;, ex: info@cloudcms.com","stringNotAnInteger":"&#19981;&#26159;&#25972;&#25968;.","invalidIPv4":"&#19981;&#26159;&#21512;&#27861;IP&#22320;&#22336;, ex: 192.168.0.1","stringValueTooSmall":"&#26368;&#23567;&#20540;&#26159; {0}","stringValueTooLarge":"&#26368;&#22823;&#20540;&#26159; {0}","stringValueTooSmallExclusive":"&#20540;&#24517;&#39035;&#22823;&#20110; {0}","stringValueTooLargeExclusive":"&#20540;&#24517;&#39035;&#23567;&#20110; {0}","stringDivisibleBy":"&#20540;&#24517;&#39035;&#33021;&#34987; {0} &#25972;&#38500;","stringNotANumber":"&#19981;&#26159;&#25968;&#23383;.","invalidPassword":"&#38750;&#27861;&#23494;&#30721;","invalidPhone":"&#38750;&#27861;&#30005;&#35805;&#21495;&#30721;, ex: (123) 456-9999","invalidPattern":"&#27492;&#22495;&#39035;&#26377;&#26684;&#24335; {0}","stringTooShort":"&#27492;&#22495;&#33267;&#23569;&#38271;&#24230; {0}","stringTooLong":"&#27492;&#22495;&#26368;&#22810;&#38271;&#24230; {0}"}}});})(jQuery);(function($){var Alpaca=$.alpaca;Alpaca.registerView({"id":"VIEW_BASE","messages":{"es_ES":{required:"Este campo es obligatorio",invalid:"Este campo es inválido",months:["Enero","Febrero","Marzo","Abril","Mayo","Junio","Julio","Agosto","Septiembre","Octubre","Noviembre","Diciembre"],timeUnits:{SECOND:"segundos",MINUTE:"minutos",HOUR:"horas",DAY:"días",MONTH:"meses",YEAR:"años"},"notOptional":"Este campo no es opcional.","disallowValue":"{0} son los valores rechazados.","invalidValueOfEnum":"Este campo debe tener uno de los valores adentro {0}.","notEnoughItems":"El número mínimo de artículos es {0}","tooManyItems":"El número máximo de artículos es {0}","valueNotUnique":"Los valores no son únicos","notAnArray":"Este valor no es un arsenal","invalidDate":"Fecha inválida para el formato {0}","invalidEmail":"Email address inválido, ex: info@cloudcms.com","stringNotAnInteger":"Este valor no es un número entero.","invalidIPv4":"Dirección inválida IPv4, ex: 192.168.0.1","stringValueTooSmall":"El valor mínimo para este campo es {0}","stringValueTooLarge":"El valor míximo para este campo es {0}","stringValueTooSmallExclusive":"El valor de este campo debe ser mayor que {0}","stringValueTooLargeExclusive":"El valor de este campo debe ser menos que {0}","stringDivisibleBy":"El valor debe ser divisible cerca {0}","stringNotANumber":"Este valor no es un número.","invalidPassword":"Contraseña inválida","invalidPhone":"Número de teléfono inválido, ex: (123) 456-9999","invalidPattern":"Este campo debe tener patrón {0}","stringTooShort":"Este campo debe contener por lo menos {0} números o caracteres","stringTooLong":"Este campo debe contener a lo más {0} números o caracteres"}}});})(jQuery);(function($){var Alpaca=$.alpaca;Alpaca.registerView({"id":"VIEW_BASE","messages":{"fr_FR":{required:"Ce champ est requis",invalid:"Ce champ est invalide",months:["Janvier","Février","Mars","Avril","Mai","Juin","Juillet","Août","Septembre","Octobre","Novembre","Décembre"],timeUnits:{SECOND:"secondes",MINUTE:"minutes",HOUR:"heures",DAY:"jours",MONTH:"mois",YEAR:"années"},"notOptional":"Ce champ n'est pas optionnel.","disallowValue":"{0} sont des valeurs interdites.","invalidValueOfEnum":"Ce champ doit prendre une des valeurs suivantes : {0}.","notEnoughItems":"Le nombre minimum d'éléments est {0}","tooManyItems":"Le nombre maximum d'éléments est {0}","valueNotUnique":"Les valeurs sont uniques","notAnArray":"Cette valeur n'est pas une liste","invalidDate":"Cette date ne correspond pas au format {0}","invalidEmail":"Adresse de courriel invalide, ex: info@cloudcms.com","stringNotAnInteger":"Cette valeur n'est pas un nombre entier.","invalidIPv4":"Adresse IPv4 invalide, ex: 192.168.0.1","stringValueTooSmall":"La valeur minimale pour ce champ est {0}","stringValueTooLarge":"La valeur maximale pour ce champ est {0}","stringValueTooSmallExclusive":"La valeur doit-être supérieure à {0}","stringValueTooLargeExclusive":"La valeur doit-être inférieure à {0}","stringDivisibleBy":"La valeur doit-être divisible par {0}","stringNotANumber":"Cette valeur n'est pas un nombre.","invalidPassword":"Mot de passe invalide","invalidPhone":"Numéro de téléphone invalide, ex: (123) 456-9999","invalidPattern":"Ce champ doit correspondre au motif {0}","stringTooShort":"Ce champ doit contenir au moins {0} caractères","stringTooLong":"Ce champ doit contenir au plus {0} caractères"}}});})(jQuery);(function($){var Alpaca=$.alpaca;Alpaca.registerView({"id":"VIEW_BASE","messages":{"de_AT":{required:"Eingabe erforderlich",invalid:"Eingabe invalid",months:["Jänner","Februar","März","April","Mai","Juni","Juli","August","September","Oktober","November","Dezember"],timeUnits:{SECOND:"Sekunden",MINUTE:"Minuten",HOUR:"Stunden",DAY:"Tage",MONTH:"Monate",YEAR:"Jahre"},"notOptional":"Dieses Feld ist nicht optional","disallowValue":"Diese Werte sind nicht erlaubt: {0}","invalidValueOfEnum":"Diese Feld sollte einen der folgenden Werte enthalten: {0}","notEnoughItems":"Die Mindestanzahl von Elementen ist {0}","tooManyItems":"Die Maximalanzahl von Elementen ist {0}","valueNotUnique":"Diese Werte sind nicht eindeutig","notAnArray":"Keine Liste von Werten","invalidDate":"Falsches Datumsformat: {0}","invalidEmail":"Ungültige e-Mail Adresse, z.B.: info@cloudcms.com","stringNotAnInteger":"Eingabe ist keine Ganz Zahl.","invalidIPv4":"Ungültige IPv4 Adresse, z.B.: 192.168.0.1","stringValueTooSmall":"Die Mindestanzahl von Zeichen ist {0}","stringValueTooLarge":"Die Maximalanzahl von Zeichen ist {0}","stringValueTooSmallExclusive":"Die Anzahl der Zeichen muss größer sein als {0}","stringValueTooLargeExclusive":"Die Anzahl der Zeichen muss kleiner sein als {0}","stringDivisibleBy":"Der Wert muss durch {0} dividierbar sein","stringNotANumber":"Die Eingabe ist keine Zahl","invalidPassword":"Ungültiges Passwort.","invalidPhone":"Ungültige Telefonnummer, z.B.: (123) 456-9999","invalidPattern":"Diese Feld stimmt nicht mit folgender Vorgabe überein {0}","stringTooShort":"Dieses Feld sollte mindestens {0} Zeichen enthalten","stringTooLong":"Dieses Feld sollte höchstens {0} Zeichen enthalten"}}});})(jQuery);(function($){var Alpaca=$.alpaca;Alpaca.registerView({"id":"VIEW_BASE","messages":{"pl_PL":{required:"To pole jest wymagane",invalid:"To pole jest nieprawidłowe",months:["Styczeń","Luty","Marzec","Kwiecień","Maj","Czerwiec","Lipiec","Sierpień","Wrzesień","Październik","Listopad","Grudzień"],timeUnits:{SECOND:"sekundy",MINUTE:"minuty",HOUR:"godziny",DAY:"dni",MONTH:"miesiące",YEAR:"lata"},"notOptional":"To pole nie jest opcjonalne","disallowValue":"Ta wartość nie jest dozwolona: {0}","invalidValueOfEnum":"To pole powinno zawierać jedną z następujących wartości: {0}","notEnoughItems":"Minimalna liczba elementów wynosi {0}","tooManyItems":"Maksymalna liczba elementów wynosi {0}","valueNotUnique":"Te wartości nie są unikalne","notAnArray":"Ta wartość nie jest tablicą","invalidDate":"Niepoprawny format daty: {0}","invalidEmail":"Niepoprawny adres email, n.p.: info@cloudcms.com","stringNotAnInteger":"Ta wartość nie jest liczbą całkowitą","invalidIPv4":"Niepoprawny adres IPv4, n.p.: 192.168.0.1","stringValueTooSmall":"Minimalna wartość dla tego pola wynosi {0}","stringValueTooLarge":"Maksymalna wartość dla tego pola wynosi {0}","stringValueTooSmallExclusive":"Wartość dla tego pola musi być większa niż {0}","stringValueTooLargeExclusive":"Wartość dla tego pola musi być mniejsza niż {0}","stringDivisibleBy":"Wartość musi być podzielna przez {0}","stringNotANumber":"Wartość nie jest liczbą","invalidPassword":"Niepoprawne hasło","invalidPhone":"Niepoprawny numer telefonu, n.p.: (123) 456-9999","invalidPattern":"To pole powinno mieć format {0}","stringTooShort":"To pole powinno zawierać co najmniej {0} znaków","stringTooLong":"To pole powinno zawierać najwyżej {0} znaków"}}});})(jQuery);
/*!
Alpaca Version 1.1.3

Copyright 2014 Gitana Software, Inc.

Licensed under the Apache License, Version 2.0 (the "License"); 
you may not use this file except in compliance with the License. 

You may obtain a copy of the License at 
	http://www.apache.org/licenses/LICENSE-2.0 

Unless required by applicable law or agreed to in writing, software 
distributed under the License is distributed on an "AS IS" BASIS, 
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. 
See the License for the specific language governing permissions and 
limitations under the License. 

For more information, please contact Gitana Software, Inc. at this
address:

  info@gitanasoftware.com
*/
(function($){var Alpaca=$.alpaca;Alpaca.Fields.AddressField=Alpaca.Fields.ObjectField.extend({constructor:function(container,data,options,schema,view,connector,errorCallback){this.base(container,data,options,schema,view,connector,errorCallback);},setup:function(){this.base();this.schema={"title":"Home Address","type":"object","properties":{"street":{"title":"Street","type":"array","items":{"type":"string","maxLength":30,"minItems":0,"maxItems":3}},"city":{"title":"City","type":"string"},"state":{"title":"State","type":"string","enum":["AL","AK","AS","AZ","AR","CA","CO","CT","DE","DC","FM","FL","GA","GU","HI","ID","IL","IN","IA","KS","KY","LA","ME","MH","MD","MA","MI","MN","MS","MO","MT","NE","NV","NH","NJ","NM","NY","NC","ND","MP","OH","OK","OR","PW","PA","PR","RI","SC","SD","TN","TX","UT","VT","VI","VA","WA","WV","WI","WY"]},"zip":{"title":"Zip Code","type":"string","pattern":/^(\d{5}(-\d{4})?)?$/}}};Alpaca.merge(this.options,{"fields":{"zip":{"maskString":"99999","size":5},"state":{"optionLabels":["ALABAMA","ALASKA","AMERICANSAMOA","ARIZONA","ARKANSAS","CALIFORNIA","COLORADO","CONNECTICUT","DELAWARE","DISTRICTOFCOLUMBIA","FEDERATEDSTATESOFMICRONESIA","FLORIDA","GEORGIA","GUAM","HAWAII","IDAHO","ILLINOIS","INDIANA","IOWA","KANSAS","KENTUCKY","LOUISIANA","MAINE","MARSHALLISLANDS","MARYLAND","MASSACHUSETTS","MICHIGAN","MINNESOTA","MISSISSIPPI","MISSOURI","MONTANA","NEBRASKA","NEVADA","NEWHAMPSHIRE","NEWJERSEY","NEWMEXICO","NEWYORK","NORTHCAROLINA","NORTHDAKOTA","NORTHERNMARIANAISLANDS","OHIO","OKLAHOMA","OREGON","PALAU","PENNSYLVANIA","PUERTORICO","RHODEISLAND","SOUTHCAROLINA","SOUTHDAKOTA","TENNESSEE","TEXAS","UTAH","VERMONT","VIRGINISLANDS","VIRGINIA","WASHINGTON","WESTVIRGINIA","WISCONSIN","WYOMING"]}}});if(Alpaca.isEmpty(this.options.addressValidation)){this.options.addressValidation=true;}},getAddress:function(){var value=this.getValue();if(this.view.type=="view"){value=this.data;}var address="";if(value){if(value.street){$.each(value.street,function(index,value){address+=value+" ";});}if(value.city){address+=value.city+" ";}if(value.state){address+=value.state+" ";}if(value.zip){address+=value.zip;}}return address;},renderField:function(onSuccess){var self=this;this.base(function(){$(self.fieldContainer).addClass("alpaca-addressfield");if(self.options.addressValidation&&!self.isDisplayOnly()){$('<div style="clear:both;"></div>').appendTo(self.fieldContainer);var mapButton=$('<div class="alpaca-form-button">Google Map</div>').appendTo(self.fieldContainer);if(mapButton.button){mapButton.button({text:true});}mapButton.click(function(){if(google&&google.maps){var geocoder=new google.maps.Geocoder();var address=self.getAddress();if(geocoder){geocoder.geocode({"address":address},function(results,status){if(status==google.maps.GeocoderStatus.OK){var mapCanvasId=self.getId()+"-map-canvas";if($("#"+mapCanvasId).length===0){$("<div id='"+mapCanvasId+"' class='alpaca-controlfield-address-mapcanvas'></div>").appendTo(self.fieldContainer);}var map=new google.maps.Map(document.getElementById(self.getId()+"-map-canvas"),{"zoom":10,"center":results[0].geometry.location,"mapTypeId":google.maps.MapTypeId.ROADMAP});var marker=new google.maps.Marker({map:map,position:results[0].geometry.location});}else{self.displayMessage("Geocoding failed: "+status);}});}}else{self.displayMessage("Google Map API is not installed.");}}).wrap("<small/>");if(self.options.showMapOnLoad){mapButton.click();}}if(onSuccess){onSuccess();}});},isContainer:function(){return false;},getSchemaOfOptions:function(){return Alpaca.merge(this.base(),{"properties":{"validateAddress":{"title":"Address Validation","description":"Enable address validation if true","type":"boolean","default":true},"showMapOnLoad":{"title":"Whether to show the map when first loaded","type":"boolean"}}});},getOptionsForOptions:function(){return Alpaca.merge(this.base(),{"fields":{"validateAddress":{"helper":"Address validation if checked","rightLabel":"Enable Google Map for address validation?","type":"checkbox"}}});},getTitle:function(){return"Address";},getDescription:function(){return"Standard US Address with Street, City, State and Zip. Also comes with support for Google map.";},getType:function(){return"any";},getFieldType:function(){return"address";}});Alpaca.registerFieldClass("address",Alpaca.Fields.AddressField);})(jQuery);(function($){var round=(function(){var strategies={up:Math.ceil,down:function(input){return ~~input;},nearest:Math.round};return function(strategy){return strategies[strategy];};})();var Alpaca=$.alpaca;Alpaca.Fields.CurrencyField=Alpaca.Fields.TextField.extend({constructor:function(container,data,options,schema,view,connector,errorCallback){options=options||{};var pfOptionsSchema=this.getSchemaOfPriceFormatOptions().properties;for(var i in pfOptionsSchema){var option=pfOptionsSchema[i];if(!(i in options)){options[i]=option["default"]||undefined;}}data=""+parseFloat(data).toFixed(options.centsLimit);this.base(container,data,options,schema,view,connector,errorCallback);},postRender:function(callback){var self=this;this.base(function(){$(self.field).priceFormat(self.options);callback();});},getValue:function(){var field=this.field;var val=$(field).is("input")?field.val():field.hmtl();if(this.options.unmask||this.options.round!=="none"){var unmasked=(function(){var result="";for(var i in val){var cur=val[i];if(!isNaN(cur)){result+=cur;}else{if(cur===this.options.centsSeparator){result+=".";}}}return parseFloat(result);}).bind(this)();if(this.options.round!=="none"){unmasked=round(this.options.round)(unmasked);if(!this.options.unmask){var result=[];var unmaskedString=""+unmasked;for(var i=0,u=0;i<val.length;i++){if(!isNaN(val[i])){result.push(unmaskedString[u++]||0);}else{result.push(val[i]);}}return result.join("");}}return unmasked;}else{return val;}},getSchemaOfPriceFormatOptions:function(){return{"properties":{"allowNegative":{"title":"Allow Negative","description":"Determines if negative numbers are allowed.","type":"boolean","default":false},"centsLimit":{"title":"Cents Limit","description":"The limit of fractional digits.","type":"number","default":2,"minimum":0},"centsSeparator":{"title":"Cents Separator","description":"The separator between whole and fractional amounts.","type":"text","default":"."},"clearPrefix":{"title":"Clear Prefix","description":"Determines if the prefix is cleared on blur.","type":"boolean","default":false},"clearSuffix":{"title":"Clear Suffix","description":"Determines if the suffix is cleared on blur.","type":"boolean","default":false},"insertPlusSign":{"title":"Plus Sign","description":"Determines if a plus sign should be inserted for positive values.","type":"boolean","default":false},"limit":{"title":"Limit","description":"A limit of the length of the field.","type":"number","default":undefined,"minimum":0},"prefix":{"title":"Prefix","description":"The prefix if any for the field.","type":"text","default":"$"},"round":{"title":"Round","description":"Determines if the field is rounded. (Rounding is done when getValue is called and is not reflected in the UI)","type":"string","enum":["up","down","nearest","none"],"default":"none"},"suffix":{"title":"Suffix","description":"The suffix if any for the field.","type":"text","default":""},"thousandsSeparator":{"title":"Thousands Separator","description":"The separator between thousands.","type":"string","default":","},"unmask":{"title":"Unmask","description":"If true then the resulting value for this field will be unmasked.  That is, the resulting value will be a float instead of a string (with the prefix, suffix, etc. removed).","type":"boolean","default":true}}};},getSchemaOfOptions:function(){return Alpaca.merge(this.base(),this.getSchemaOfPriceFormatOptions());},getOptionsForOptions:function(){return Alpaca.merge(this.base(),{"fields":{"allowNegative":{"type":"checkbox"},"centsLimit":{"type":"number"},"centsSeparator":{"type":"text"},"clearPrefix":{"type":"checkbox"},"clearSuffix":{"type":"checkbox"},"insertPlusSign":{"type":"checkbox"},"limit":{"type":"number"},"prefix":{"type":"text"},"round":{"type":"select"},"suffix":{"type":"text"},"thousandsSeparator":{"type":"string"},"unmask":{"type":"checkbox"}}});},getTitle:function(){return"Currency Field";},getDescription:function(){return"Provides an automatically formatted and configurable input for entering currency amounts.";},getFieldType:function(){return"currency";}});Alpaca.registerFieldClass("currency",Alpaca.Fields.CurrencyField);})(jQuery);(function($){var Alpaca=$.alpaca;Alpaca.Fields.DateField=Alpaca.Fields.TextField.extend({constructor:function(container,data,options,schema,view,connector,errorCallback){this.base(container,data,options,schema,view,connector,errorCallback);},setup:function(){this.base();if(!this.options.dateFormat){this.options.dateFormat=Alpaca.defaultDateFormat;}if(!this.options.dateFormatRegex){this.options.dateFormatRegex=Alpaca.regexps.date;}},postRender:function(callback){var self=this;this.base(function(){if(self.field&&$.datepicker){var datePickerOptions=self.options.datepicker;if(!datePickerOptions){datePickerOptions={"changeMonth":true,"changeYear":true};}if(!datePickerOptions.dateFormat){datePickerOptions.dateFormat=self.options.dateFormat;}self.field.datepicker(datePickerOptions);if(self.fieldContainer){self.fieldContainer.addClass("alpaca-controlfield-date");}}callback();});},onChange:function(e){this.base();this.refreshValidationState();},handleValidate:function(){var baseStatus=this.base();var valInfo=this.validation;var status=this._validateDateFormat();valInfo["invalidDate"]={"message":status?"":Alpaca.substituteTokens(this.view.getMessage("invalidDate"),[this.options.dateFormat]),"status":status};return baseStatus&&valInfo["invalidDate"]["status"];},_validateDateFormat:function(){var value=this.getValue();if($.datepicker){try{$.datepicker.parseDate(this.options.dateFormat,value);return true;}catch(e){return false;}}else{return value.match(this.options.dateFormatRegex);}},setValue:function(val){if(val===""){this.base(val);return;}this.base(val);},getSchemaOfSchema:function(){return Alpaca.merge(this.base(),{"properties":{"format":{"title":"Format","description":"Property data format","type":"string","default":"date","enum":["date"],"readonly":true}}});},getOptionsForSchema:function(){return Alpaca.merge(this.base(),{"fields":{"format":{"type":"text"}}});},getSchemaOfOptions:function(){return Alpaca.merge(this.base(),{"properties":{"dateFormat":{"title":"Date Format","description":"Date format","type":"string","default":Alpaca.defaultDateFormat},"dateFormatRegex":{"title":"Format Regular Expression","description":"Regular expression for validation date format","type":"string","default":Alpaca.regexps.date},"datepicker":{"title":"Date Picker options","description":"Optional configuration to be passed to jQuery UI DatePicker control","type":"any"}}});},getOptionsForOptions:function(){return Alpaca.merge(this.base(),{"fields":{"dateFormat":{"type":"text"},"dateFormatRegex":{"type":"text"},"datetime":{"type":"any"}}});},getTitle:function(){return"Date Field";},getDescription:function(){return"Date Field.";},getFieldType:function(){return"date";}});Alpaca.registerMessages({"invalidDate":"Invalid date for format {0}"});Alpaca.registerFieldClass("date",Alpaca.Fields.DateField);Alpaca.registerDefaultFormatFieldMapping("date","date");})(jQuery);(function($){var Alpaca=$.alpaca;Alpaca.Fields.DatetimeField=Alpaca.Fields.TextField.extend({constructor:function(container,data,options,schema,view,connector,errorCallback){this.base(container,data,options,schema,view,connector,errorCallback);},setup:function(){this.base();},postRender:function(callback){var self=this;this.base(function(){if(self.field){if(self.field.datetimepicker){self.field.hover(function(){if(!$(this).hasClass("hasDatepicker")){var timePickerOptions=self.options.timepicker;if(!timePickerOptions){timePickerOptions=self.options.timepicker;}if(!timePickerOptions){timePickerOptions={"changeYear":true,"changeMonth":true};}$(this).datetimepicker(timePickerOptions);}});if(self.fieldContainer){self.fieldContainer.addClass("alpaca-controlfield-datetime");}}}callback();});},setValue:function(value){if(value){if(Alpaca.isNumber()){value=new Date(value);}if(Object.prototype.toString.call(value)=="[object Date]"){this.base((value.getMonth()+1)+"/"+value.getDate()+"/"+value.getFullYear()+" "+value.getHours()+":"+value.getMinutes());}else{this.base(value);}}else{this.base(value);}},getValue:function(){return this.base();},getDatetime:function(){try{return this.field.datetimepicker("getDate");}catch(e){return this.getValue();}},getSchemaOfOptions:function(){return Alpaca.merge(this.base(),{"properties":{"timepicker":{"title":"Timepicker options","description":"Options that are supported by the <a href='http://trentrichardson.com/examples/timepicker/'>jQuery timepicker addon</a>.","type":"any"}}});},getOptionsForOptions:function(){return Alpaca.merge(this.base(),{"fields":{"timepicker":{"type":"any"}}});},getTitle:function(){return"Datetime Field";},getDescription:function(){return"Datetime Field based on Trent Richardson's <a href='http://trentrichardson.com/examples/timepicker/'>jQuery timepicker addon</a>.";},getFieldType:function(){return"datetime";}});Alpaca.registerFieldClass("datetime",Alpaca.Fields.DatetimeField);Alpaca.registerDefaultFormatFieldMapping("datetime","datetime");Alpaca.registerDefaultFormatFieldMapping("date-time","datetime");})(jQuery);(function($){var Alpaca=$.alpaca;Alpaca.Fields.EditorField=Alpaca.Fields.TextField.extend({constructor:function(container,data,options,schema,view,connector,errorCallback){this.base(container,data,options,schema,view,connector,errorCallback);},setup:function(){this.base();this.controlFieldTemplateDescriptor=this.view.getTemplateDescriptor("controlFieldEditor");},postRender:function(callback){var self=this;this.base(function(){if(self.fieldContainer){self.fieldContainer.addClass("alpaca-controlfield-editor");$(self.fieldContainer).parent().css("width","100%");var aceHeight=self.options.aceHeight;if(aceHeight){$(self.fieldContainer).css("height",aceHeight);}var aceWidth=self.options.aceWidth;if(!aceWidth){aceWidth="100%";}$(self.fieldContainer).css("width",aceWidth);}var el=$(self.fieldContainer).find(".control-field-editor-el")[0];if(!ace&&window.ace){ace=window.ace;}if(!ace){Alpaca.logError("Editor Field is missing the 'ace' Cloud 9 Editor");}else{self.editor=ace.edit(el);var aceTheme=self.options.aceTheme;if(!aceTheme){aceTheme="ace/theme/chrome";}self.editor.setTheme(aceTheme);var aceMode=self.options.aceMode;if(!aceMode){aceMode="ace/mode/json";}self.editor.getSession().setMode(aceMode);self.editor.renderer.setHScrollBarAlwaysVisible(false);self.editor.setShowPrintMargin(false);self.editor.setValue(self.data);self.editor.clearSelection();self.editor.getSession().getUndoManager().reset();if(self.options.aceFitContentHeight){var heightUpdateFunction=function(){var first=false;if(self.editor.renderer.lineHeight===1){first=true;self.editor.renderer.lineHeight=16;}var newHeight=self.editor.getSession().getScreenLength()*self.editor.renderer.lineHeight+self.editor.renderer.scrollBar.getWidth();$(self.fieldContainer).height(newHeight.toString()+"px");self.editor.resize();if(first){window.setTimeout(function(){self.editor.clearSelection();},5);}};heightUpdateFunction();self.editor.getSession().on("change",heightUpdateFunction);}if(self.schema.readonly){self.editor.setReadOnly(true);}$(el).bind("destroyed",function(){if(self.editor){self.editor.destroy();self.editor=null;}});}callback();});},destroy:function(){if(this.editor){this.editor.destroy();this.editor=null;}this.base();},getEditor:function(){return this.editor;},handleValidate:function(){var baseStatus=this.base();var valInfo=this.validation;var wordCountStatus=this._validateWordCount();valInfo["wordLimitExceeded"]={"message":wordCountStatus?"":Alpaca.substituteTokens(this.view.getMessage("wordLimitExceeded"),[this.options.wordlimit]),"status":wordCountStatus};var editorAnnotationsStatus=this._validateEditorAnnotations();valInfo["editorAnnotationsExist"]={"message":editorAnnotationsStatus?"":this.view.getMessage("editorAnnotationsExist"),"status":editorAnnotationsStatus};return baseStatus&&valInfo["wordLimitExceeded"]["status"]&&valInfo["editorAnnotationsExist"]["status"];},_validateEditorAnnotations:function(){if(this.editor){var annotations=this.editor.getSession().getAnnotations();if(annotations&&annotations.length>0){return false;}}return true;},_validateWordCount:function(){if(this.options.wordlimit&&this.options.wordlimit>-1){var val=this.editor.getValue();if(val){var wordcount=val.split(" ").length;if(wordcount>this.options.wordlimit){return false;}}}return true;},onDependentReveal:function(){if(this.editor){this.editor.resize();}},setValue:function(value){var self=this;if(this.editor){this.editor.setValue(value);}this.base(value);},getValue:function(){var value=null;if(this.editor){value=this.editor.getValue();}return value;},getSchemaOfOptions:function(){return Alpaca.merge(this.base(),{"properties":{"aceTheme":{"title":"ACE Editor Theme","description":"Specifies the theme to set onto the editor instance","type":"string","default":"ace/theme/twilight"},"aceMode":{"title":"ACE Editor Mode","description":"Specifies the mode to set onto the editor instance","type":"string","default":"ace/mode/javascript"},"aceWidth":{"title":"ACE Editor Height","description":"Specifies the width of the wrapping div around the editor","type":"string","default":"100%"},"aceHeight":{"title":"ACE Editor Height","description":"Specifies the height of the wrapping div around the editor","type":"string","default":"300px"},"aceFitContentHeight":{"title":"ACE Fit Content Height","description":"Configures the ACE Editor to auto-fit its height to the contents of the editor","type":"boolean","default":false},"wordlimit":{"title":"Word Limit","description":"Limits the number of words allowed in the text area.","type":"number","default":-1}}});},getOptionsForOptions:function(){return Alpaca.merge(this.base(),{"fields":{"aceTheme":{"type":"text"},"aceMode":{"type":"text"},"wordlimit":{"type":"integer"}}});},getTitle:function(){return"Editor";},getDescription:function(){return"Editor";},getFieldType:function(){return"editor";}});Alpaca.registerMessages({"wordLimitExceeded":"The maximum word limit of {0} has been exceeded.","editorAnnotationsExist":"The editor has errors in it that must be corrected"});Alpaca.registerTemplate("controlFieldEditor",'<div id="${id}" class="control-field-editor-el"></div>');Alpaca.registerFieldClass("editor",Alpaca.Fields.EditorField);})(jQuery);(function($){var Alpaca=$.alpaca;Alpaca.Fields.EmailField=Alpaca.Fields.TextField.extend({constructor:function(container,data,options,schema,view,connector,errorCallback){this.base(container,data,options,schema,view,connector,errorCallback);},setup:function(){this.base();if(!this.schema.pattern){this.schema.pattern=Alpaca.regexps.email;}},postRender:function(callback){var self=this;this.base(function(){if(this.fieldContainer){this.fieldContainer.addClass("alpaca-controlfield-email");}callback();});},handleValidate:function(){var baseStatus=this.base();var valInfo=this.validation;if(!valInfo["invalidPattern"]["status"]){valInfo["invalidPattern"]["message"]=this.view.getMessage("invalidEmail");}return baseStatus;},getSchemaOfSchema:function(){var pattern=(this.schema&&this.schema.pattern)?this.schema.pattern:Alpaca.regexps.email;return Alpaca.merge(this.base(),{"properties":{"pattern":{"title":"Pattern","description":"Field Pattern in Regular Expression","type":"string","default":pattern,"enum":[pattern],"readonly":true},"format":{"title":"Format","description":"Property data format","type":"string","default":"email","enum":["email"],"readonly":true}}});},getOptionsForSchema:function(){return Alpaca.merge(this.base(),{"fields":{"format":{"type":"text"}}});},getTitle:function(){return"Email Field";},getDescription:function(){return"Email Field.";},getFieldType:function(){return"email";}});Alpaca.registerMessages({"invalidEmail":"Invalid Email address e.g. info@cloudcms.com"});Alpaca.registerFieldClass("email",Alpaca.Fields.EmailField);Alpaca.registerDefaultFormatFieldMapping("email","email");})(jQuery);(function($){var Alpaca=$.alpaca;Alpaca.Fields.IntegerField=Alpaca.Fields.NumberField.extend({constructor:function(container,data,options,schema,view,connector,errorCallback){this.base(container,data,options,schema,view,connector,errorCallback);},getValue:function(){var textValue=this.field.val();if(Alpaca.isValEmpty(textValue)){return -1;}else{return parseInt(textValue,10);}},onChange:function(e){this.base();if(this.slider){this.slider.slider("value",this.getValue());}},postRender:function(callback){var self=this;this.base(function(){if(self.options.slider){if(!Alpaca.isEmpty(self.schema.maximum)&&!Alpaca.isEmpty(self.schema.minimum)){if(self.field){self.field.after('<div id="slider"></div>');self.slider=$("#slider",self.field.parent()).slider({value:self.getValue(),min:self.schema.minimum,max:self.schema.maximum,slide:function(event,ui){self.setValue(ui.value);self.refreshValidationState();}});}}}if(self.fieldContainer){self.fieldContainer.addClass("alpaca-controlfield-integer");}callback();});},handleValidate:function(){var baseStatus=this.base();var valInfo=this.validation;if(!valInfo["stringNotANumber"]["status"]){valInfo["stringNotANumber"]["message"]=this.view.getMessage("stringNotAnInteger");}return baseStatus;},_validateNumber:function(){var textValue=this.field.val();if(Alpaca.isValEmpty(textValue)){return true;}var floatValue=this.getValue();if(isNaN(floatValue)){return false;}if(!textValue.match(Alpaca.regexps.integer)){return false;}return true;},getSchemaOfSchema:function(){return Alpaca.merge(this.base(),{"properties":{"minimum":{"title":"Minimum","description":"Minimum value of the property.","type":"integer"},"maximum":{"title":"Maximum","description":"Maximum value of the property.","type":"integer"},"divisibleBy":{"title":"Divisible By","description":"Property value must be divisible by this number.","type":"integer"}}});},getOptionsForSchema:function(){return Alpaca.merge(this.base(),{"fields":{"minimum":{"helper":"Minimum value of the field.","type":"integer"},"maximum":{"helper":"Maximum value of the field.","type":"integer"},"divisibleBy":{"helper":"Property value must be divisible by this number.","type":"integer"}}});},getSchemaOfOptions:function(){return Alpaca.merge(this.base(),{"properties":{"slider":{"title":"Slider","description":"Generate jQuery UI slider control with the field if true.","type":"boolean","default":false}}});},getOptionsForOptions:function(){return Alpaca.merge(this.base(),{"fields":{"slider":{"rightLabel":"Slider control ?","helper":"Generate slider control if selected.","type":"checkbox"}}});},getTitle:function(){return"Integer Field";},getDescription:function(){return"Field for integers.";},getType:function(){return"integer";},getFieldType:function(){return"integer";}});Alpaca.registerMessages({"stringNotAnInteger":"This value is not an integer."});Alpaca.registerFieldClass("integer",Alpaca.Fields.IntegerField);Alpaca.registerDefaultSchemaFieldMapping("integer","integer");})(jQuery);(function($){var Alpaca=$.alpaca;Alpaca.Fields.IPv4Field=Alpaca.Fields.TextField.extend({constructor:function(container,data,options,schema,view,connector,errorCallback){this.base(container,data,options,schema,view,connector,errorCallback);},setup:function(){this.base();if(!this.schema.pattern){this.schema.pattern=Alpaca.regexps.ipv4;}},postRender:function(callback){var self=this;this.base(function(){if(self.fieldContainer){self.fieldContainer.addClass("alpaca-controlfield-ipv4");}callback();});},handleValidate:function(){var baseStatus=this.base();var valInfo=this.validation;if(!valInfo["invalidPattern"]["status"]){valInfo["invalidPattern"]["message"]=this.view.getMessage("invalidIPv4");}return baseStatus;},getSchemaOfSchema:function(){var pattern=(this.schema&&this.schema.pattern)?this.schema.pattern:Alpaca.regexps.ipv4;return Alpaca.merge(this.base(),{"properties":{"pattern":{"title":"Pattern","description":"Field Pattern in Regular Expression","type":"string","default":pattern,"readonly":true},"format":{"title":"Format","description":"Property data format","type":"string","enum":["ip-address"],"default":"ip-address","readonly":true}}});},getOptionsForSchema:function(){return Alpaca.merge(this.base(),{"fields":{"format":{"type":"text"}}});},getTitle:function(){return"IP Address Field";},getDescription:function(){return"IP Address Field.";},getFieldType:function(){return"ipv4";}});Alpaca.registerMessages({"invalidIPv4":"Invalid IPv4 address, e.g. 192.168.0.1"});Alpaca.registerFieldClass("ipv4",Alpaca.Fields.IPv4Field);Alpaca.registerDefaultFormatFieldMapping("ip-address","ipv4");})(jQuery);(function($){var Alpaca=$.alpaca;Alpaca.Fields.JSONField=Alpaca.Fields.TextAreaField.extend({constructor:function(container,data,options,schema,view,connector,errorCallback){this.base(container,data,options,schema,view,connector,errorCallback);},setValue:function(value){if(Alpaca.isObject(value)||typeof(value)=="object"){value=JSON.stringify(value,null,3);}this.base(value);},getValue:function(){var val=this.base();if(val&&Alpaca.isString(val)){val=JSON.parse(val);}return val;},handleValidate:function(){var baseStatus=this.base();var valInfo=this.validation;var status=this._validateJSON();valInfo["stringNotAJSON"]={"message":status.status?"":this.view.getMessage("stringNotAJSON")+" "+status.message,"status":status.status};return baseStatus&&valInfo["stringNotAJSON"]["status"];},_validateJSON:function(){var textValue=this.field.val();if(Alpaca.isValEmpty(textValue)){return{"status":true};}try{var obj=JSON.parse(textValue);this.setValue(JSON.stringify(obj,null,3));return{"status":true};}catch(e){return{"status":false,"message":e.message};}},postRender:function(callback){var self=this;this.base(function(){if(self.field){self.field.bind("keypress",function(e){if(e.which==34){self.field.insertAtCaret('"');}if(e.which==123){self.field.insertAtCaret("}");}if(e.which==91){self.field.insertAtCaret("]");}});self.field.bind("keypress","Ctrl+l",function(){self.getEl().removeClass("alpaca-field-focused");self.refreshValidationState();});self.field.attr("title","Type Ctrl+L to format and validate the JSON string.");}if(self.fieldContainer){self.fieldContainer.addClass("alpaca-controlfield-json");}callback();});},getTitle:function(){return"JSON Editor";},getDescription:function(){return"Editor for JSON objects with basic validation and formatting.";},getFieldType:function(){return"json";}});Alpaca.registerMessages({"stringNotAJSON":"This value is not a valid JSON string."});Alpaca.registerFieldClass("json",Alpaca.Fields.JSONField);$.fn.insertAtCaret=function(myValue){return this.each(function(){if(document.selection){this.focus();sel=document.selection.createRange();sel.text=myValue;this.focus();}else{if(this.selectionStart||this.selectionStart=="0"){var startPos=this.selectionStart;var endPos=this.selectionEnd;var scrollTop=this.scrollTop;this.value=this.value.substring(0,startPos)+myValue+this.value.substring(endPos,this.value.length);this.focus();this.selectionStart=startPos;this.selectionEnd=startPos;this.scrollTop=scrollTop;}else{this.value+=myValue;this.focus();}}});};jQuery.hotkeys={version:"0.8",specialKeys:{8:"backspace",9:"tab",13:"return",16:"shift",17:"ctrl",18:"alt",19:"pause",20:"capslock",27:"esc",32:"space",33:"pageup",34:"pagedown",35:"end",36:"home",37:"left",38:"up",39:"right",40:"down",45:"insert",46:"del",96:"0",97:"1",98:"2",99:"3",100:"4",101:"5",102:"6",103:"7",104:"8",105:"9",106:"*",107:"+",109:"-",110:".",111:"/",112:"f1",113:"f2",114:"f3",115:"f4",116:"f5",117:"f6",118:"f7",119:"f8",120:"f9",121:"f10",122:"f11",123:"f12",144:"numlock",145:"scroll",191:"/",224:"meta"},shiftNums:{"`":"~","1":"!","2":"@","3":"#","4":"$","5":"%","6":"^","7":"&","8":"*","9":"(","0":")","-":"_","=":"+",";":": ","'":'"',",":"<",".":">","/":"?","\\":"|"}};function keyHandler(handleObj){if(typeof handleObj.data!=="string"){return;}var origHandler=handleObj.handler,keys=handleObj.data.toLowerCase().split(" ");handleObj.handler=function(event){if(this!==event.target&&(/textarea|select/i.test(event.target.nodeName)||event.target.type==="text")){return;}var special=event.type!=="keypress"&&jQuery.hotkeys.specialKeys[event.which],character=String.fromCharCode(event.which).toLowerCase(),key,modif="",possible={};if(event.altKey&&special!=="alt"){modif+="alt+";}if(event.ctrlKey&&special!=="ctrl"){modif+="ctrl+";}if(event.metaKey&&!event.ctrlKey&&special!=="meta"){modif+="meta+";}if(event.shiftKey&&special!=="shift"){modif+="shift+";}if(special){possible[modif+special]=true;}else{possible[modif+character]=true;possible[modif+jQuery.hotkeys.shiftNums[character]]=true;if(modif==="shift+"){possible[jQuery.hotkeys.shiftNums[character]]=true;}}for(var i=0,l=keys.length;i<l;i++){if(possible[keys[i]]){return origHandler.apply(this,arguments);}}};}jQuery.each(["keydown","keyup","keypress"],function(){jQuery.event.special[this]={add:keyHandler};});})(jQuery);(function($){var Alpaca=$.alpaca;Alpaca.Fields.IntegerField=Alpaca.Fields.NumberField.extend({constructor:function(container,data,options,schema,view,connector,errorCallback){this.base(container,data,options,schema,view,connector,errorCallback);},getValue:function(){var textValue=this.field.val();if(Alpaca.isValEmpty(textValue)){return -1;}else{return parseInt(textValue,10);}},onChange:function(e){this.base();if(this.slider){this.slider.slider("value",this.getValue());}},postRender:function(callback){var self=this;this.base(function(){if(self.options.slider){if(!Alpaca.isEmpty(self.schema.maximum)&&!Alpaca.isEmpty(self.schema.minimum)){if(self.field){self.field.after('<div id="slider"></div>');self.slider=$("#slider",self.field.parent()).slider({value:self.getValue(),min:self.schema.minimum,max:self.schema.maximum,slide:function(event,ui){self.setValue(ui.value);self.refreshValidationState();}});}}}if(self.fieldContainer){self.fieldContainer.addClass("alpaca-controlfield-integer");}callback();});},handleValidate:function(){var baseStatus=this.base();var valInfo=this.validation;if(!valInfo["stringNotANumber"]["status"]){valInfo["stringNotANumber"]["message"]=this.view.getMessage("stringNotAnInteger");}return baseStatus;},_validateNumber:function(){var textValue=this.field.val();if(Alpaca.isValEmpty(textValue)){return true;}var floatValue=this.getValue();if(isNaN(floatValue)){return false;}if(!textValue.match(Alpaca.regexps.integer)){return false;}return true;},getSchemaOfSchema:function(){return Alpaca.merge(this.base(),{"properties":{"minimum":{"title":"Minimum","description":"Minimum value of the property.","type":"integer"},"maximum":{"title":"Maximum","description":"Maximum value of the property.","type":"integer"},"divisibleBy":{"title":"Divisible By","description":"Property value must be divisible by this number.","type":"integer"}}});},getOptionsForSchema:function(){return Alpaca.merge(this.base(),{"fields":{"minimum":{"helper":"Minimum value of the field.","type":"integer"},"maximum":{"helper":"Maximum value of the field.","type":"integer"},"divisibleBy":{"helper":"Property value must be divisible by this number.","type":"integer"}}});},getSchemaOfOptions:function(){return Alpaca.merge(this.base(),{"properties":{"slider":{"title":"Slider","description":"Generate jQuery UI slider control with the field if true.","type":"boolean","default":false}}});},getOptionsForOptions:function(){return Alpaca.merge(this.base(),{"fields":{"slider":{"rightLabel":"Slider control ?","helper":"Generate slider control if selected.","type":"checkbox"}}});},getTitle:function(){return"Integer Field";},getDescription:function(){return"Field for integers.";},getType:function(){return"integer";},getFieldType:function(){return"integer";}});Alpaca.registerMessages({"stringNotAnInteger":"This value is not an integer."});Alpaca.registerFieldClass("integer",Alpaca.Fields.IntegerField);Alpaca.registerDefaultSchemaFieldMapping("integer","integer");})(jQuery);(function($){var Alpaca=$.alpaca;Alpaca.Fields.LowerCaseField=Alpaca.Fields.TextField.extend({constructor:function(container,data,options,schema,view,connector,errorCallback){this.base(container,data,options,schema,view,connector,errorCallback);},postRender:function(callback){var self=this;this.base(function(){if(self.fieldContainer){self.fieldContainer.addClass("alpaca-controlfield-lowercase");}callback();});},setValue:function(val){var lowerValue=val.toLowerCase();if(lowerValue!=this.getValue()){this.base(lowerValue);}},onKeyPress:function(e){this.base(e);var _this=this;Alpaca.later(25,this,function(){var v=_this.getValue();_this.setValue(v);});},getTitle:function(){return"Lowercase Text";},getDescription:function(){return"Text field for lowercase text.";},getFieldType:function(){return"lowercase";}});Alpaca.registerFieldClass("lowercase",Alpaca.Fields.LowerCaseField);Alpaca.registerDefaultFormatFieldMapping("lowercase","lowercase");})(jQuery);(function($){var Alpaca=$.alpaca;Alpaca.Fields.MapField=Alpaca.Fields.ArrayField.extend({constructor:function(container,data,options,schema,view,connector,errorCallback){this.base(container,data,options,schema,view,connector,errorCallback);},setup:function(){this.base();Alpaca.mergeObject(this.options,{"forceRevalidation":true});if(Alpaca.isEmpty(this.data)){return;}if(!Alpaca.isArray(this.data)){if(Alpaca.isObject(this.data)){var newData=[];$.each(this.data,function(key,value){var newValue=Alpaca.copyOf(value);newValue["_key"]=key;newData.push(newValue);});this.data=newData;}}},getValue:function(){if(this.children.length===0&&!this.schema.required){return;}var o={};for(var i=0;i<this.children.length;i++){var v=this.children[i].getValue();var key=v["_key"];if(key){delete v["_key"];o[key]=v;}}return o;},handleValidate:function(){var baseStatus=this.base();var valInfo=this.validation;var isValidMapKeysNotEmpty=this._validateMapKeysNotEmpty();valInfo["keyMissing"]={"message":isValidMapKeysNotEmpty?"":this.view.getMessage("keyMissing"),"status":isValidMapKeysNotEmpty};var isValidMapKeysUnique=this._validateMapKeysUnique();valInfo["keyNotUnique"]={"message":isValidMapKeysUnique?"":this.view.getMessage("keyNotUnique"),"status":isValidMapKeysUnique};return baseStatus&&valInfo["keyMissing"]["status"]&&valInfo["keyNotUnique"]["status"];},_validateMapKeysNotEmpty:function(){var isValid=true;for(var i=0;i<this.children.length;i++){var v=this.children[i].getValue();var key=v["_key"];if(!key){isValid=false;break;}}return isValid;},_validateMapKeysUnique:function(){var isValid=true;var keys={};for(var i=0;i<this.children.length;i++){var v=this.children[i].getValue();var key=v["_key"];if(keys[key]){isValid=false;}keys[key]=key;}return isValid;},postRender:function(callback){var self=this;this.base(function(){if(this.fieldContainer){this.fieldContainer.addClass("alpaca-controlfield-map");}callback();});},getTitle:function(){return"Map Field";},getDescription:function(){return"Field for objects with key/value pairs that share the same schema for values.";},getFieldType:function(){return"map";}});Alpaca.registerFieldClass("map",Alpaca.Fields.MapField);Alpaca.registerMessages({"keyNotUnique":"Keys of map field are not unique.","keyMissing":"Map contains an empty key."});})(jQuery);(function($){var Alpaca=$.alpaca;Alpaca.Fields.PasswordField=Alpaca.Fields.TextField.extend({constructor:function(container,data,options,schema,view,connector,errorCallback){this.base(container,data,options,schema,view,connector,errorCallback);},setup:function(){this.base();if(!this.schema.pattern){this.schema.pattern=Alpaca.regexps.password;}this.controlFieldTemplateDescriptor=this.view.getTemplateDescriptor("controlFieldPassword");},postRender:function(callback){var self=this;this.base(function(){if(self.fieldContainer){self.fieldContainer.addClass("alpaca-controlfield-password");}callback();});},handleValidate:function(){var baseStatus=this.base();var valInfo=this.validation;if(!valInfo["invalidPattern"]["status"]){valInfo["invalidPattern"]["message"]=this.view.getMessage("invalidPassword");}return baseStatus;},getSchemaOfSchema:function(){var pattern=(this.schema&&this.schema.pattern)?this.schema.pattern:/^[0-9a-zA-Z\x20-\x7E]*$/;return Alpaca.merge(this.base(),{"properties":{"pattern":{"title":"Pattern","description":"Field Pattern in Regular Expression","type":"string","default":this.schema.pattern,"enum":[pattern],"readonly":true},"format":{"title":"Format","description":"Property data format","type":"string","default":"password","enum":["password"],"readonly":true}}});},getOptionsForSchema:function(){return Alpaca.merge(this.base(),{"fields":{"format":{"type":"text"}}});},getTitle:function(){return"Password Field";},getDescription:function(){return"Password Field.";},getFieldType:function(){return"password";}});Alpaca.registerTemplate("controlFieldPassword",'<input type="password" id="${id}" {{if options.size}}size="${options.size}"{{/if}} {{if options.readonly}}readonly="readonly"{{/if}} {{if name}}name="${name}"{{/if}} {{each(i,v) options.data}}data-${i}="${v}"{{/each}}/>');Alpaca.registerMessages({"invalidPassword":"Invalid Password"});Alpaca.registerFieldClass("password",Alpaca.Fields.PasswordField);Alpaca.registerDefaultFormatFieldMapping("password","password");})(jQuery);(function($){var Alpaca=$.alpaca;Alpaca.Fields.PersonalNameField=Alpaca.Fields.TextField.extend({constructor:function(container,data,options,schema,view,connector,errorCallback){this.base(container,data,options,schema,view,connector,errorCallback);},postRender:function(callback){var self=this;this.base(function(){if(self.fieldContainer){self.fieldContainer.addClass("alpaca-controlfield-personalname");}callback();});},setValue:function(val){var upperValue="";for(var i=0;i<val.length;i++){if(i===0){upperValue+=val.charAt(i).toUpperCase();}else{if(val.charAt(i-1)==" "||val.charAt(i-1)=="-"||val.charAt(i-1)=="'"){upperValue+=val.charAt(i).toUpperCase();}else{upperValue+=val.charAt(i);}}}if(upperValue!=this.getValue()){this.base(upperValue);}},onKeyPress:function(e){this.base(e);var _this=this;Alpaca.later(25,this,function(){var v=_this.getValue();_this.setValue(v);});},getTitle:function(){return"Personal Name";},getDescription:function(){return"Text Field for personal name with captical letter for first letter & after hyphen, space or apostrophe.";},getFieldType:function(){return"personalname";}});Alpaca.registerFieldClass("personalname",Alpaca.Fields.PersonalNameField);})(jQuery);(function($){var Alpaca=$.alpaca;Alpaca.Fields.PhoneField=Alpaca.Fields.TextField.extend({constructor:function(container,data,options,schema,view,connector,errorCallback){this.base(container,data,options,schema,view,connector,errorCallback);},setup:function(){this.base();if(!this.schema.pattern){this.schema.pattern=Alpaca.regexps.phone;}if(Alpaca.isEmpty(this.options.maskString)){this.options.maskString="(999) 999-9999";}},postRender:function(callback){var self=this;this.base(function(){if(self.fieldContainer){self.fieldContainer.addClass("alpaca-controlfield-phone");}callback();});},handleValidate:function(){var baseStatus=this.base();var valInfo=this.validation;if(!valInfo["invalidPattern"]["status"]){valInfo["invalidPattern"]["message"]=this.view.getMessage("invalidPhone");}return baseStatus;},getSchemaOfSchema:function(){var pattern=(this.schema&&this.schema.pattern)?this.schema.pattern:Alpaca.regexps.phone;return Alpaca.merge(this.base(),{"properties":{"pattern":{"title":"Pattern","description":"Field Pattern in Regular Expression","type":"string","default":pattern,"enum":[pattern],"readonly":true},"format":{"title":"Format","description":"Property data format","type":"string","default":"phone","enum":["phone"],"readonly":true}}});},getOptionsForSchema:function(){return Alpaca.merge(this.base(),{"fields":{"format":{"type":"text"}}});},getSchemaOfOptions:function(){return Alpaca.merge(this.base(),{"properties":{"maskString":{"title":"Field Mask String","description":"Expression for field mask","type":"string","default":"(999) 999-9999"}}});},getTitle:function(){return"Phone Field";},getDescription:function(){return"Phone Field.";},getFieldType:function(){return"phone";}});Alpaca.registerMessages({"invalidPhone":"Invalid Phone Number, e.g. (123) 456-9999"});Alpaca.registerFieldClass("phone",Alpaca.Fields.PhoneField);Alpaca.registerDefaultFormatFieldMapping("phone","phone");})(jQuery);(function($){var Alpaca=$.alpaca;Alpaca.Fields.TagField=Alpaca.Fields.LowerCaseField.extend({constructor:function(container,data,options,schema,view,connector,errorCallback){this.base(container,data,options,schema,view,connector,errorCallback);},setup:function(){this.base();if(!this.options.separator){this.options.separator=",";}},postRender:function(callback){var self=this;this.base(function(){if(self.fieldContainer){self.fieldContainer.addClass("alpaca-controlfield-tag");}callback();});},getValue:function(){var val=this.base();if(val===""){return[];}return val.split(this.options.separator);},setValue:function(val){if(val===""){return;}this.base(val.join(this.options.separator));},onBlur:function(e){this.base(e);var vals=this.getValue();var trimmed=[];$.each(vals,function(i,v){if(v.trim()!==""){trimmed.push(v.trim());}});this.setValue(trimmed);},getSchemaOfOptions:function(){return Alpaca.merge(this.base(),{"properties":{"separator":{"title":"Separator","description":"Separator used to split tags.","type":"string","default":","}}});},getOptionsForOptions:function(){return Alpaca.merge(this.base(),{"fields":{"separator":{"type":"text"}}});},getTitle:function(){return"Tag Field";},getDescription:function(){return"Text field for entering list of tags separated by delimiter.";},getFieldType:function(){return"tag";}});Alpaca.registerFieldClass("tag",Alpaca.Fields.TagField);})(jQuery);(function($){var Alpaca=$.alpaca;Alpaca.Fields.TimeField=Alpaca.Fields.TextField.extend({constructor:function(container,data,options,schema,view,connector,errorCallback){this.base(container,data,options,schema,view,connector,errorCallback);},setup:function(){this.base();if(!this.options.timeFormat){this.options.timeFormat="hh:mm:ss";}if(!this.options.timeFormatRegex){this.options.timeFormatRegex=/^(([0-1][0-9])|([2][0-3])):([0-5][0-9]):([0-5][0-9])$/;}if(Alpaca.isEmpty(this.options.maskString)){this.options.maskString="99:99:99";}},postRender:function(callback){var self=this;this.base(function(){if(self.fieldContainer){self.fieldContainer.addClass("alpaca-controlfield-time");}callback();});},onChange:function(e){this.base();this.refreshValidationState();},handleValidate:function(){var baseStatus=this.base();var valInfo=this.validation;var status=this._validateTimeFormat();valInfo["invalidTime"]={"message":status?"":Alpaca.substituteTokens(this.view.getMessage("invalidTime"),[this.options.timeFormat]),"status":status};return baseStatus&&valInfo["invalidTime"]["status"];},_validateTimeFormat:function(){var value=this.field.val();if(!this.schema.required&&(Alpaca.isValEmpty(value)||value=="__:__:__")){return true;}return value.match(this.options.timeFormatRegex);},setValue:function(val){if(val===""){this.base(val);return;}this.base(val);},getSchemaOfSchema:function(){return Alpaca.merge(this.base(),{"properties":{"format":{"title":"Format","description":"Property data format","type":"string","default":"time","enum":["time"],"readonly":true}}});},getOptionsForSchema:function(){return Alpaca.merge(this.base(),{"fields":{"format":{"type":"text"}}});},getSchemaOfOptions:function(){return Alpaca.merge(this.base(),{"properties":{"timeFormat":{"title":"Time Format","description":"Time format","type":"string","default":"hh:mm:ss"},"timeFormatRegex":{"title":"Format Regular Expression","description":"Regular expression for validation time format","type":"string","default":/^(([0-1][0-9])|([2][0-3])):([0-5][0-9]):([0-5][0-9])$/},"maskString":{"default":"99:99:99"}}});},getOptionsForOptions:function(){return Alpaca.merge(this.base(),{"fields":{"timeFormat":{"type":"text"},"timeFormatRegex":{"type":"text"}}});},getTitle:function(){return"Time Field";},getDescription:function(){return"Field for time.";},getFieldType:function(){return"time";}});Alpaca.registerMessages({"invalidTime":"Invalid time for format {0}"});Alpaca.registerFieldClass("time",Alpaca.Fields.TimeField);Alpaca.registerDefaultFormatFieldMapping("time","time");})(jQuery);(function($){var Alpaca=$.alpaca;Alpaca.Fields.UpperCaseField=Alpaca.Fields.TextField.extend({constructor:function(container,data,options,schema,view,connector,errorCallback){this.base(container,data,options,schema,view,connector,errorCallback);},postRender:function(callback){var self=this;this.base(function(){if(self.fieldContainer){self.fieldContainer.addClass("alpaca-controlfield-uppercase");}callback();});},setValue:function(val){var upperValue=val.toUpperCase();if(upperValue!=this.getValue()){this.base(upperValue);}},onKeyPress:function(e){this.base(e);var _this=this;Alpaca.later(25,this,function(){var v=_this.getValue();_this.setValue(v);});},getTitle:function(){return"Uppercase Text";},getDescription:function(){return"Text field for uppercase text.";},getFieldType:function(){return"uppercase";}});Alpaca.registerFieldClass("uppercase",Alpaca.Fields.UpperCaseField);Alpaca.registerDefaultFormatFieldMapping("uppercase","uppercase");})(jQuery);(function($){var Alpaca=$.alpaca;Alpaca.Fields.WysiwygField=Alpaca.Fields.TextAreaField.extend({constructor:function(container,data,options,schema,view,connector,errorCallback){this.base(container,data,options,schema,view,connector,errorCallback);this.controlsConfig={};this.controlsConfig.simple={"html":{"visible":true},"createLink":{"visible":false},"unLink":{"visible":false},"h1":{"visible":false},"h2":{"visible":false},"h3":{"visible":false},"indent":{"visible":false},"insertHorizontalRule":{"visible":false},"insertImage":{"visible":false},"insertOrderedList":{"visible":false},"insertTable":{"visible":false},"insertUnorderedList":{"visible":false},"justifyCenter":{"visible":false},"justifyFull":{"visible":false},"justifyLeft":{"visible":false},"justifyRight":{"visible":false},"outdent":{"visible":false},"redo":{"visible":false},"removeFormat":{"visible":false},"subscript":{"visible":false},"superscript":{"visible":false},"undo":{"visible":false},"code":{"visible":false},"strikeThrough":{"visible":false}};},setup:function(){this.base();this.plugin=null;},postRender:function(callback){var self=this;this.base(function(){if(self.field&&$.wysiwyg){var wysiwygOptions=self.options.wysiwyg?self.options.wysiwyg:{};if(wysiwygOptions.controls){if(typeof(wysiwygOptions.controls)==="string"){wysiwygOptions.controls=self.controlsConfig[wysiwygOptions.controls];if(!wysiwygOptions.controls){wysiwygOptions.controls={};}}}if(self.options.onDemand){self.outerEl.find("textarea").mouseover(function(){if(!self.plugin){self.plugin=$(this).wysiwyg(wysiwygOptions);self.outerEl.find(".wysiwyg").mouseout(function(){if(self.plugin){self.plugin.wysiwyg("destroy");}self.plugin=null;});}});}else{self.plugin=self.field.wysiwyg(wysiwygOptions);}self.outerEl.find(".wysiwyg").mouseout(function(){self.data=_this.getValue();self.refreshValidationState();});}if(self.fieldContainer){self.fieldContainer.addClass("alpaca-controlfield-wysiwyg");}callback();});},getSchemaOfOptions:function(){return Alpaca.merge(this.base(),{"properties":{"wysiwyg":{"title":"Editor options","description":"Options that are supported by the <a href='https://github.com/akzhan/jwysiwyg'>jQuery WYSIWYG plugin</a>.","type":"any"},"onDemand":{"title":"On Demand","description":"If true, WYSIWYG editor will only be enabled when the field is hovered.","type":"boolean","default":false}}});},getOptionsForOptions:function(){return Alpaca.merge(this.base(),{"fields":{"wysiwyg":{"type":"any"},"onDemand":{"type":"checkbox","rightLabel":"Make the editor on-demand?"}}});},getTitle:function(){return"Wysiwyg Editor";},getDescription:function(){return"Wysiwyg editor for multi-line text which is based on Akzhan Abdulin's <a href='https://github.com/akzhan/jwysiwyg'>jQuery WYSIWYG plugin</a>.";},getFieldType:function(){return"wysiwyg";}});Alpaca.registerFieldClass("wysiwyg",Alpaca.Fields.WysiwygField);})(jQuery);(function($){var Alpaca=$.alpaca;Alpaca.Fields.StateField=Alpaca.Fields.SelectField.extend({constructor:function(container,data,options,schema,view,connector,errorCallback){this.base(container,data,options,schema,view,connector,errorCallback);},setup:function(){if(Alpaca.isUndefined(this.options.capitalize)){this.options.capitalize=false;}if(Alpaca.isUndefined(this.options.includeStates)){this.options.includeStates=true;}if(Alpaca.isUndefined(this.options.includeTerritories)){this.options.includeTerritories=true;}if(Alpaca.isUndefined(this.options.format)){this.options.format="name";}if(this.options.format=="name"||this.options.format=="code"){}else{Alpaca.logError("The configured state format: "+this.options.format+" is not a legal value [name, code]");this.options.format="name";}var holdings=Alpaca.retrieveUSHoldings(this.options.includeStates,this.options.includeTerritories,(this.options.format=="code"),this.options.capitalize);this.schema["enum"]=holdings.keys;this.options.optionLabels=holdings.values;this.base();},postRender:function(callback){var self=this;this.base(function(){if(self.fieldContainer){self.fieldContainer.addClass("alpaca-controlfield-state");}callback();});},handleValidate:function(){var baseStatus=this.base();return baseStatus;},getSchemaOfOptions:function(){return Alpaca.merge(this.base(),{"properties":{"format":{"title":"Format","description":"How to represent the state values in the selector","type":"string","default":"name","enum":["name","code"],"readonly":true},"capitalize":{"title":"Capitalize","description":"Whether the values should be capitalized","type":"boolean","default":false,"readonly":true},"includeStates":{"title":"Include States","description":"Whether to include the states of the United States","type":"boolean","default":true,"readonly":true},"includeTerritories":{"title":"Include Territories","description":"Whether to include the territories of the United States","type":"boolean","default":true,"readonly":true}}});},getOptionsForOptions:function(){return Alpaca.merge(this.base(),{"fields":{"format":{"type":"text"},"capitalize":{"type":"checkbox"},"includeStates":{"type":"checkbox"},"includeTerritories":{"type":"checkbox"}}});},getTitle:function(){return"State Field";},getDescription:function(){return"Provides a dropdown selector of states and/or territories in the United States, keyed by their two-character code.";},getFieldType:function(){return"state";}});Alpaca.registerFieldClass("state",Alpaca.Fields.StateField);Alpaca.registerDefaultFormatFieldMapping("state","state");Alpaca.retrieveUSHoldings=function(){var holdings=[];holdings.push({"name":"Arkansas","code":"AK","state":true,"territory":false});holdings.push({"name":"Alabama","code":"AL","state":true,"territory":false});holdings.push({"name":"American Samoa","code":"AS","state":false,"territory":true});holdings.push({"name":"Arizona","code":"AR","state":true,"territory":false});holdings.push({"name":"California","code":"CA","state":true,"territory":false});holdings.push({"name":"Colorado","code":"CO","state":true,"territory":false});holdings.push({"name":"Connecticut","code":"CT","state":true,"territory":false});holdings.push({"name":"Delaware","code":"DE","state":true,"territory":false});holdings.push({"name":"Distict of Columbia","code":"DC","state":false,"territory":true});holdings.push({"name":"Federated States of Micronesia","code":"FM","state":false,"territory":true});holdings.push({"name":"Florida","code":"FL","state":true,"territory":false});holdings.push({"name":"Georgia","code":"GA","state":true,"territory":false});holdings.push({"name":"Guam","code":"GU","state":false,"territory":true});holdings.push({"name":"Georgia","code":"GA","state":true,"territory":false});holdings.push({"name":"Hawaii","code":"HI","state":true,"territory":false});holdings.push({"name":"Idaho","code":"ID","state":true,"territory":false});holdings.push({"name":"Illinois","code":"IL","state":true,"territory":false});holdings.push({"name":"Indiana","code":"IN","state":true,"territory":false});holdings.push({"name":"Iowa","code":"IA","state":true,"territory":false});holdings.push({"name":"Kansas","code":"KS","state":true,"territory":false});holdings.push({"name":"Kentucky","code":"KY","state":true,"territory":false});holdings.push({"name":"Louisiana","code":"LA","state":true,"territory":false});holdings.push({"name":"Maine","code":"ME","state":true,"territory":false});holdings.push({"name":"Marshall Islands","code":"MH","state":false,"territory":true});holdings.push({"name":"Maryland","code":"MD","state":true,"territory":false});holdings.push({"name":"Massachusetts","code":"MA","state":true,"territory":false});holdings.push({"name":"Michigan","code":"MI","state":true,"territory":false});holdings.push({"name":"Minnesota","code":"MN","state":true,"territory":false});holdings.push({"name":"Mississippi","code":"MS","state":true,"territory":false});holdings.push({"name":"Missouri","code":"MO","state":true,"territory":false});holdings.push({"name":"Montana","code":"MT","state":true,"territory":false});holdings.push({"name":"Nebraska","code":"NE","state":true,"territory":false});holdings.push({"name":"Nevada","code":"NV","state":true,"territory":false});holdings.push({"name":"New Hampshire","code":"NH","state":true,"territory":false});holdings.push({"name":"New Jersey","code":"NJ","state":true,"territory":false});holdings.push({"name":"New Mexico","code":"NM","state":true,"territory":false});holdings.push({"name":"New York","code":"NY","state":true,"territory":false});holdings.push({"name":"North Carolina","code":"NC","state":true,"territory":false});holdings.push({"name":"North Dakota","code":"ND","state":true,"territory":false});holdings.push({"name":"Northern Mariana Islands","code":"MP","state":true,"territory":false});holdings.push({"name":"Ohio","code":"OH","state":true,"territory":false});holdings.push({"name":"Oklahoma","code":"OK","state":true,"territory":false});holdings.push({"name":"Oregon","code":"OR","state":true,"territory":false});holdings.push({"name":"Palau","code":"PW","state":false,"territory":true});holdings.push({"name":"Pennsylvania","code":"PA","state":true,"territory":false});holdings.push({"name":"Puerto Rico","code":"PR","state":false,"territory":true});holdings.push({"name":"Rhode Island","code":"RI","state":true,"territory":false});holdings.push({"name":"South Carolina","code":"SC","state":true,"territory":false});holdings.push({"name":"South Dakota","code":"SD","state":true,"territory":false});holdings.push({"name":"Tennessee","code":"TN","state":true,"territory":false});holdings.push({"name":"Texas","code":"TX","state":true,"territory":false});holdings.push({"name":"Utah","code":"UT","state":true,"territory":false});holdings.push({"name":"Vermont","code":"VT","state":true,"territory":false});holdings.push({"name":"Virgin Islands","code":"VI","state":false,"territory":true});holdings.push({"name":"Virginia","code":"VA","state":true,"territory":false});holdings.push({"name":"Washington","code":"WA","state":true,"territory":false});holdings.push({"name":"West Virginia","code":"WV","state":true,"territory":false});holdings.push({"name":"Wisconsin","code":"WI","state":true,"territory":false});holdings.push({"name":"Wyoming","code":"WY","state":true,"territory":false});return function(includeStates,includeTerritories,codeValue,capitalize){var result={"keys":[],"values":[]};for(var i=0;i<holdings.length;i++){var keep=false;if(holdings[i].state&&includeStates){keep=true;}else{if(holdings[i].territory&&includeTerritories){keep=true;}}if(keep){var key=holdings[i].code;var value=holdings[i].name;if(codeValue){value=holdings[i].code;}if(capitalize){value=value.toUpperCase();}result.keys.push(key);result.values.push(value);}}return result;};}();})(jQuery);(function($){var Alpaca=$.alpaca;Alpaca.Fields.CountryField=Alpaca.Fields.SelectField.extend({constructor:function(container,data,options,schema,view,connector,errorCallback){this.base(container,data,options,schema,view,connector,errorCallback);},setup:function(){if(Alpaca.isUndefined(this.options.capitalize)){this.options.capitalize=false;}this.schema["enum"]=[];this.options.optionLabels=[];var countriesMap=this.view.getMessage("countries");if(countriesMap){for(var countryKey in countriesMap){this.schema["enum"].push(countryKey);var label=countriesMap[countryKey];if(this.options.capitalize){label=label.toUpperCase();}this.options.optionLabels.push(label);}}this.base();},postRender:function(callback){var self=this;this.base(function(){if(self.fieldContainer){self.fieldContainer.addClass("alpaca-controlfield-country");}callback();});},handleValidate:function(){var baseStatus=this.base();return baseStatus;},getSchemaOfOptions:function(){return Alpaca.merge(this.base(),{"properties":{"capitalize":{"title":"Capitalize","description":"Whether the values should be capitalized","type":"boolean","default":false,"readonly":true}}});},getOptionsForOptions:function(){return Alpaca.merge(this.base(),{"fields":{"capitalize":{"type":"checkbox"}}});},getTitle:function(){return"Country Field";},getDescription:function(){return"Provides a dropdown selector of countries keyed by their ISO3 code.  The names of the countries are read from the I18N bundle for the current locale.";},getFieldType:function(){return"country";}});Alpaca.registerFieldClass("country",Alpaca.Fields.CountryField);Alpaca.registerDefaultFormatFieldMapping("country","country");})(jQuery);(function($){var Alpaca=$.alpaca;Alpaca.Fields.ZipcodeField=Alpaca.Fields.TextField.extend({constructor:function(container,data,options,schema,view,connector,errorCallback){this.base(container,data,options,schema,view,connector,errorCallback);},setup:function(){this.options.format=(this.options.format?this.options.format:"nine");if(this.options.format=="nine"){this.schema.pattern=Alpaca.regexps["zipcode-nine"];}else{if(this.options.format=="five"){this.schema.pattern=Alpaca.regexps["zipcode-five"];}else{Alpaca.logError("The configured zipcode format: "+this.options.format+" is not a legal value [five, nine]");this.options.format="nine";this.schema.pattern=Alpaca.regexps["zipcode-nine"];}}if(this.options.format=="nine"){this.options["maskString"]="99999-9999";}else{if(this.options.format=="five"){this.options["maskString"]="99999";}}this.base();},postRender:function(callback){var self=this;this.base(function(){if(self.fieldContainer){self.fieldContainer.addClass("alpaca-controlfield-zipcode");}callback();});},handleValidate:function(){var baseStatus=this.base();var valInfo=this.validation;if(!valInfo["invalidPattern"]["status"]){if(this.options.format=="nine"){valInfo["invalidPattern"]["message"]=this.view.getMessage("invalidZipcodeFormatNine");}else{if(this.options.format=="five"){valInfo["invalidPattern"]["message"]=this.view.getMessage("invalidZipcodeFormatFive");}}}return baseStatus;},getSchemaOfOptions:function(){return Alpaca.merge(this.base(),{"properties":{"format":{"title":"Format","description":"How to represent the zipcode field","type":"string","default":"five","enum":["five","nine"],"readonly":true}}});},getOptionsForOptions:function(){return Alpaca.merge(this.base(),{"fields":{"format":{"type":"text"}}});},getTitle:function(){return"Zipcode Field";},getDescription:function(){return"Provides a five or nine-digital US zipcode control with validation.";},getFieldType:function(){return"zipcode";}});Alpaca.registerMessages({"invalidZipcodeFormatFive":"Invalid Five-Digit Zipcode (#####)","invalidZipcodeFormatNine":"Invalid Nine-Digit Zipcode (#####-####)"});Alpaca.registerFieldClass("zipcode",Alpaca.Fields.ZipcodeField);Alpaca.registerDefaultFormatFieldMapping("zipcode","zipcode");})(jQuery);(function($){var Alpaca=$.alpaca;Alpaca.Fields.URLField=Alpaca.Fields.TextField.extend({constructor:function(container,data,options,schema,view,connector,errorCallback){this.base(container,data,options,schema,view,connector,errorCallback);},setup:function(){this.schema.pattern=Alpaca.regexps.url;this.schema.format="uri";this.base();},postRender:function(callback){var self=this;this.base(function(){if(self.fieldContainer){self.fieldContainer.addClass("alpaca-controlfield-url");}callback();});},handleValidate:function(){var baseStatus=this.base();var valInfo=this.validation;if(!valInfo["invalidPattern"]["status"]){valInfo["invalidPattern"]["message"]=this.view.getMessage("invalidURLFormat");}return baseStatus;},getTitle:function(){return"URL Field";},getDescription:function(){return"Provides a text control with validation for an internet web address.";},getFieldType:function(){return"url";}});Alpaca.registerMessages({"invalidURLFormat":"The URL provided is not a valid web address."});Alpaca.registerFieldClass("url",Alpaca.Fields.URLField);Alpaca.registerDefaultFormatFieldMapping("url","url");})(jQuery);(function($){var Alpaca=$.alpaca;Alpaca.Fields.UploadField=Alpaca.Fields.TextField.extend({constructor:function(container,data,options,schema,view,connector,errorCallback){this.base(container,data,options,schema,view,connector,errorCallback);},setup:function(){var self=this;this.base();this.controlFieldTemplateDescriptor=this.view.getTemplateDescriptor("controlFieldUpload");this.uploadDescriptor=self.view.getTemplateDescriptor("controlFieldUpload_upload");this.downloadDescriptor=self.view.getTemplateDescriptor("controlFieldUpload_download");if(typeof(self.options.multiple)=="undefined"){self.options.multiple=false;}if(typeof(self.options.showUploadPreview)=="undefined"){self.options.showUploadPreview=true;}},renderField:function(onSuccess){var self=this;this.base(function(){self.field=$(self.field).find(".alpaca-fileupload-input-hidden");if(onSuccess){onSuccess();}});},postRender:function(callback){var self=this;this.base(function(){if(self.fieldContainer){self.fieldContainer.addClass("alpaca-controlfield-upload");}self.handlePostRender(self.fieldContainer,function(){callback();});});},handlePostRender:function(el,callback){var self=this;var uploadTemplateFunction=function(data){return Alpaca.tmpl(self.uploadDescriptor,{o:data});};var downloadTemplateFunction=function(data){return Alpaca.tmpl(self.downloadDescriptor,{o:data});};var fileUploadConfig={};fileUploadConfig["dataType"]="json";fileUploadConfig["uploadTemplateId"]=null;fileUploadConfig["uploadTemplate"]=uploadTemplateFunction;fileUploadConfig["downloadTemplateId"]=null;fileUploadConfig["downloadTemplate"]=downloadTemplateFunction;fileUploadConfig["filesContainer"]=$(el).find(".files");fileUploadConfig["dropZone"]=$(el).find(".fileupload-active-zone");fileUploadConfig["url"]="/";fileUploadConfig["method"]="post";fileUploadConfig["showUploadPreview"]=self.options.showUploadPreview;if(self.options.upload){for(var k in self.options.upload){fileUploadConfig[k]=self.options.upload[k];}}if(self.options.multiple){$(el).find(".alpaca-fileupload-input").attr("multiple",true);$(el).find(".alpaca-fileupload-input").attr("name",self.name+"_files[]");}$(el).find(".progress").css("display","none");fileUploadConfig["progressall"]=function(e,data){var showProgressBar=false;if(data.loaded<data.total){showProgressBar=true;}if(showProgressBar){$(el).find(".progress").css("display","block");var progress=parseInt(data.loaded/data.total*100,10);$("#progress .progress-bar").css("width",progress+"%");}else{$(el).find(".progress").css("display","none");}};self.applyConfiguration(fileUploadConfig);var fileUpload=self.fileUpload=$(el).find(".alpaca-fileupload-input").fileupload(fileUploadConfig);fileUpload.bindFirst("fileuploaddone",function(e,data){var enhanceFiles=self.options.enhanceFiles;if(enhanceFiles){enhanceFiles(fileUploadConfig,data);}else{self.enhanceFiles(fileUploadConfig,data);}data.files=data.result.files;});fileUpload.bindFirst("fileuploadsubmit",function(e,data){if(self.options["properties"]){$.each(data.files,function(index,file){for(var key in self.options["properties"]){var propertyName="property"+index+"__"+key;var propertyValue=self.options["properties"][key];propertyValue=self.applyTokenSubstitutions(propertyValue,index,file);if(!data.formData){data.formData={};}data.formData[propertyName]=propertyValue;}});}if(self.options["parameters"]){$.each(data.files,function(index,file){for(var key in self.options["parameters"]){var paramName="param"+index+"__"+key;var paramValue=self.options["parameters"][key];paramValue=self.applyTokenSubstitutions(paramValue,index,file);if(!data.formData){data.formData={};}data.formData[paramName]=paramValue;}});}});fileUpload.bind("fileuploaddone",function(e,data){var array=self.getValue();var f=function(i){if(i==data.files.length){self.setValue(array);return;}self.convertFileToDescriptor(data.files[i],function(err,descriptor){if(descriptor){array.push(descriptor);}f(i+1);});};f(0);});self.applyBindings(fileUpload,el);self.preload(fileUpload,el,function(files){if(files){var form=$(self.fieldContainer).find(".alpaca-fileupload-input");$(form).fileupload("option","done").call(form,$.Event("done"),{result:{files:files}});self.afterPreload(fileUpload,el,files,function(){callback();});}else{callback();}});},applyTokenSubstitutions:function(text,index,file){var tokens={"index":index,"name":file.name,"size":file.size,"url":file.url,"thumbnailUrl":file.thumbnailUrl};var x=-1;var b=0;do{x=text.indexOf("{",b);if(x>-1){var y=text.indexOf("}",x);if(y>-1){var token=text.substring(x+car.length,y);var replacement=tokens[token];if(replacement){text=text.substring(0,x)+replacement+text.substring(y+1);}b=y+1;}}}while(x>-1);return text;},removeValue:function(id){var self=this;var array=self.getValue();for(var i=0;i<array.length;i++){if(array[i].id==id){array.splice(i,1);break;}}self.setValue(array);},applyConfiguration:function(fileUploadconfig){},applyBindings:function(fileUpload){},convertFileToDescriptor:function(file,callback){var descriptor={"id":file.id,"name":file.name,"size":file.size,"url":file.url,"thumbnailUrl":file.thumbnailUrl,"deleteUrl":file.deleteUrl,"deleteType":file.deleteType};callback(null,descriptor);},convertDescriptorToFile:function(descriptor,callback){var file={"id":descriptor.id,"name":descriptor.name,"size":descriptor.size,"url":descriptor.url,"thumbnailUrl":descriptor.thumbnailUrl,"deleteUrl":descriptor.deleteUrl,"deleteType":descriptor.deleteType};callback(null,file);},enhanceFiles:function(fileUploadConfig,data){},preload:function(fileUpload,el,callback){var self=this;var files=[];var descriptors=self.getValue();var f=function(i){if(i==descriptors.length){callback(files);return;}self.convertDescriptorToFile(descriptors[i],function(err,file){if(file){files.push(file);}f(i+1);});};f(0);},afterPreload:function(fileUpload,el,files,callback){callback();},getValue:function(){if(!this.data){this.data=[];}return this.data;},setValue:function(data){this.data=data;},reload:function(callback){var self=this;var descriptors=this.getValue();var files=[];var f=function(i){if(i==descriptors.length){var form=$(self.fieldContainer).find(".alpaca-fileupload-input");$(form).fileupload("option","done").call(form,$.Event("done"),{result:{files:files}});callback();return;}self.convertDescriptorToFile(descriptors[i],function(err,file){if(file){files.push(file);}f(i+1);});};f(0);},getTitle:function(){return"Upload Field";},getDescription:function(){return"Provides an upload field with support for thumbnail preview";},getType:function(){return"array";},getFieldType:function(){return"upload";}});var TEMPLATE='         <div class="alpaca-fileupload-container {{if cssClasses}}${cssClasses}{{/if}}">             <div class="container-fluid">                 <div class="row">                     <div class="col-md-12">                         <div class="btn-group">                             <button class="btn btn-default fileinput-button">                                 <i class="glyphicon glyphicon-upload"></i>                                 <span class="fileupload-add-button">Choose files...</span>                                 <input class="alpaca-fileupload-input" type="file" name="${name}_files">                                 <input class="alpaca-fileupload-input-hidden" type="hidden" name="${name}_files_hidden">                             </button>                         </div>                     </div>                 </div>                 <div class="row alpaca-fileupload-well">                     <div class="col-md-12 fileupload-active-zone">                         <table class="table table-striped">                             <tbody class="files">                             </tbody>                         </table>                         <p align="center">Click the Choose button or Drag and Drop files here to start...</p>                     </div>                 </div>                 <div class="row">                     <div class="col-md-12">                         <div id="progress" class="progress">                             <div class="progress-bar progress-bar-success"></div>                         </div>                     </div>                 </div>             </div>         </div>     ';var TEMPLATE_UPLOAD='         <script id="template-upload" type="text/x-tmpl">         {{each(i, file) o.files}}             <tr class="template-upload fade">                 {{if o.options.showUploadPreview}}                 <td class="preview">                     <span class="fade"></span>                 </td>                 {{else}}                 <td>                 </td>                 {{/if}}                 <td class="name"><span>${file.name}</span></td>                 <td class="size"><span>${file.size}</span></td>             {{if file.error}}                 <td class="error" colspan="2"><span class="label label-important">Error</span> ${file.error}</td>             {{else}}                 {{if o.files.valid && !i}}                 <td>                     <div class="progress progress-success progress-striped active" role="progressbar" aria-valuemin="0" aria-valuemax="100" aria-valuenow="0">                         <div class="progress-bar" style="width:0%;"></div>                    </div>                 </td>                 <td class="start">                {{if !o.options.autoUpload}}                     <button class="btn btn-primary">                         <i class="glyphicon glyphicon-upload glyphicon-white"></i>                         <span>Start</span>                     </button>                 {{/if}}                 </td>                 {{else}}                 <td colspan="2"></td>                 <td class="cancel">                {{if !i}}                     <button class="btn btn-warning">                         <i class="glyphicon glyphicon-ban-circle glyphicon-white"></i>                         <span>Cancel</span>                     </button>                 {{/if}}                 </td>                 {{/if}}             {{/if}}                 <td></td>             </tr>         {{/each}}         <\/script>     ';var TEMPLATE_DOWNLOAD='         <script id="template-download" type="text/x-tmpl">         {{each(i, file) o.files}}             <tr class="template-download fade">             {{if file.error}}                 <td></td>                 <td class="name"><span>${file.name}</span></td>                 <td class="size"><span>${file.size}</span></td>                 <td class="error" colspan="2"><span class="label label-important">Error</span> ${file.error}</td>             {{else}}                 <td class="preview">                 {{if file.thumbnailUrl}}                     <a href="${file.url}" title="${file.name}" data-gallery="gallery" download="${file.name}">                         <img src="${file.thumbnailUrl}">                     </a>                 {{/if}}                 </td>                 <td class="name">                     <a href="${file.url}" title="${file.name}" data-gallery="${file.thumbnailUrl}gallery" download="${file.name}">${file.name}</a>                 </td>                 <td class="size"><span>${file.size}</span></td>                 <td colspan="2"></td>             {{/if}}                 <td>                     <button class="delete btn btn-danger" data-type="${file.deleteType}" data-url="${file.deleteUrl}" {{if file.deleteWithCredentials}}data-xhr-fields="{"withCredentials":true}" {{/if}}>                         <i class="glyphicon glyphicon-trash glyphicon-white"></i>                         <span>Delete</span>                     </button>                 </td>             </tr>         {{/each}}         <\/script>     ';Alpaca.registerTemplate("controlFieldUpload",TEMPLATE);Alpaca.registerTemplate("controlFieldUpload_upload",TEMPLATE_UPLOAD);Alpaca.registerTemplate("controlFieldUpload_download",TEMPLATE_DOWNLOAD);Alpaca.registerFieldClass("upload",Alpaca.Fields.UploadField);(function($){var splitVersion=$.fn.jquery.split(".");var major=parseInt(splitVersion[0]);var minor=parseInt(splitVersion[1]);var JQ_LT_17=(major<1)||(major==1&&minor<7);function eventsData($el){return JQ_LT_17?$el.data("events"):$._data($el[0]).events;}function moveHandlerToTop($el,eventName,isDelegated){var data=eventsData($el);var events=data[eventName];if(!JQ_LT_17){var handler=isDelegated?events.splice(events.delegateCount-1,1)[0]:events.pop();events.splice(isDelegated?0:(events.delegateCount||0),0,handler);return;}if(isDelegated){data.live.unshift(data.live.pop());}else{events.unshift(events.pop());}}function moveEventHandlers($elems,eventsString,isDelegate){var events=eventsString.split(/\s+/);$elems.each(function(){for(var i=0;i<events.length;++i){var pureEventName=$.trim(events[i]).match(/[^\.]+/i)[0];moveHandlerToTop($(this),pureEventName,isDelegate);}});}$.fn.bindFirst=function(){var args=$.makeArray(arguments);var eventsString=args.shift();if(eventsString){$.fn.bind.apply(this,arguments);moveEventHandlers(this,eventsString);}return this;};})($);})(jQuery);